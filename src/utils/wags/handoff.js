// Generated by purs bundle 0.14.4
var PS = {};
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Alt'] = $PS['Control.Alt'] || {};
	var exports = $PS['Control.Alt'];
	var alt = function (dict) {
		return dict.alt;
	};
	exports['alt'] = alt;
})(PS);
(function (exports) {
	'use strict';

	exports.arrayApply = function (fs) {
		return function (xs) {
			var l = fs.length;
			var k = xs.length;
			var result = new Array(l * k);
			var n = 0;
			for (var i = 0; i < l; i++) {
				var f = fs[i];
				for (var j = 0; j < k; j++) {
					result[n++] = f(xs[j]);
				}
			}
			return result;
		};
	};
})((PS['Control.Apply'] = PS['Control.Apply'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Semigroupoid'] = $PS['Control.Semigroupoid'] || {};
	var exports = $PS['Control.Semigroupoid'];
	var semigroupoidFn = {
		compose: function (f) {
			return function (g) {
				return function (x) {
					return f(g(x));
				};
			};
		},
	};
	var compose = function (dict) {
		return dict.compose;
	};
	exports['compose'] = compose;
	exports['semigroupoidFn'] = semigroupoidFn;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Category'] = $PS['Control.Category'] || {};
	var exports = $PS['Control.Category'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var identity = function (dict) {
		return dict.identity;
	};
	var categoryFn = {
		identity: function (x) {
			return x;
		},
		Semigroupoid0: function () {
			return Control_Semigroupoid.semigroupoidFn;
		},
	};
	exports['identity'] = identity;
	exports['categoryFn'] = categoryFn;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Function'] = $PS['Data.Function'] || {};
	var exports = $PS['Data.Function'];
	var on = function (f) {
		return function (g) {
			return function (x) {
				return function (y) {
					return f(g(x))(g(y));
				};
			};
		};
	};
	var flip = function (f) {
		return function (b) {
			return function (a) {
				return f(a)(b);
			};
		};
	};
	var $$const = function (a) {
		return function (v) {
			return a;
		};
	};
	var applyFlipped = function (x) {
		return function (f) {
			return f(x);
		};
	};
	var apply = function (f) {
		return function (x) {
			return f(x);
		};
	};
	exports['flip'] = flip;
	exports['const'] = $$const;
	exports['apply'] = apply;
	exports['applyFlipped'] = applyFlipped;
	exports['on'] = on;
})(PS);
(function (exports) {
	'use strict';

	exports.arrayMap = function (f) {
		return function (arr) {
			var l = arr.length;
			var result = new Array(l);
			for (var i = 0; i < l; i++) {
				result[i] = f(arr[i]);
			}
			return result;
		};
	};
})((PS['Data.Functor'] = PS['Data.Functor'] || {}));
(function (exports) {
	'use strict';

	exports.unit = {};
})((PS['Data.Unit'] = PS['Data.Unit'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Unit'] = $PS['Data.Unit'] || {};
	var exports = $PS['Data.Unit'];
	var $foreign = $PS['Data.Unit'];
	exports['unit'] = $foreign.unit;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Functor'] = $PS['Data.Functor'] || {};
	var exports = $PS['Data.Functor'];
	var $foreign = $PS['Data.Functor'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Data_Function = $PS['Data.Function'];
	var Data_Unit = $PS['Data.Unit'];
	var map = function (dict) {
		return dict.map;
	};
	var $$void = function (dictFunctor) {
		return map(dictFunctor)(Data_Function['const'](Data_Unit.unit));
	};
	var voidLeft = function (dictFunctor) {
		return function (f) {
			return function (x) {
				return map(dictFunctor)(Data_Function['const'](x))(f);
			};
		};
	};
	var voidRight = function (dictFunctor) {
		return function (x) {
			return map(dictFunctor)(Data_Function['const'](x));
		};
	};
	var functorFn = {
		map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn),
	};
	var functorArray = {
		map: $foreign.arrayMap,
	};
	exports['map'] = map;
	exports['void'] = $$void;
	exports['voidRight'] = voidRight;
	exports['voidLeft'] = voidLeft;
	exports['functorFn'] = functorFn;
	exports['functorArray'] = functorArray;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Apply'] = $PS['Control.Apply'] || {};
	var exports = $PS['Control.Apply'];
	var $foreign = $PS['Control.Apply'];
	var Control_Category = $PS['Control.Category'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var applyFn = {
		apply: function (f) {
			return function (g) {
				return function (x) {
					return f(x)(g(x));
				};
			};
		},
		Functor0: function () {
			return Data_Functor.functorFn;
		},
	};
	var applyArray = {
		apply: $foreign.arrayApply,
		Functor0: function () {
			return Data_Functor.functorArray;
		},
	};
	var apply = function (dict) {
		return dict.apply;
	};
	var applyFirst = function (dictApply) {
		return function (a) {
			return function (b) {
				return apply(dictApply)(
					Data_Functor.map(dictApply.Functor0())(Data_Function['const'])(a)
				)(b);
			};
		};
	};
	var applySecond = function (dictApply) {
		return function (a) {
			return function (b) {
				return apply(dictApply)(
					Data_Functor.map(dictApply.Functor0())(
						Data_Function['const'](
							Control_Category.identity(Control_Category.categoryFn)
						)
					)(a)
				)(b);
			};
		};
	};
	var lift2 = function (dictApply) {
		return function (f) {
			return function (a) {
				return function (b) {
					return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(
						b
					);
				};
			};
		};
	};
	exports['apply'] = apply;
	exports['applyFirst'] = applyFirst;
	exports['applySecond'] = applySecond;
	exports['lift2'] = lift2;
	exports['applyFn'] = applyFn;
	exports['applyArray'] = applyArray;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Applicative'] = $PS['Control.Applicative'] || {};
	var exports = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var pure = function (dict) {
		return dict.pure;
	};
	var liftA1 = function (dictApplicative) {
		return function (f) {
			return function (a) {
				return Control_Apply.apply(dictApplicative.Apply0())(
					pure(dictApplicative)(f)
				)(a);
			};
		};
	};
	var applicativeFn = {
		pure: function (x) {
			return function (v) {
				return x;
			};
		},
		Apply0: function () {
			return Control_Apply.applyFn;
		},
	};
	var applicativeArray = {
		pure: function (x) {
			return [x];
		},
		Apply0: function () {
			return Control_Apply.applyArray;
		},
	};
	exports['pure'] = pure;
	exports['liftA1'] = liftA1;
	exports['applicativeFn'] = applicativeFn;
	exports['applicativeArray'] = applicativeArray;
})(PS);
(function (exports) {
	'use strict';

	exports.arrayBind = function (arr) {
		return function (f) {
			var result = [];
			for (var i = 0, l = arr.length; i < l; i++) {
				Array.prototype.push.apply(result, f(arr[i]));
			}
			return result;
		};
	};
})((PS['Control.Bind'] = PS['Control.Bind'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Bind'] = $PS['Control.Bind'] || {};
	var exports = $PS['Control.Bind'];
	var $foreign = $PS['Control.Bind'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Category = $PS['Control.Category'];
	var Data_Function = $PS['Data.Function'];
	var discard = function (dict) {
		return dict.discard;
	};
	var bindArray = {
		bind: $foreign.arrayBind,
		Apply0: function () {
			return Control_Apply.applyArray;
		},
	};
	var bind = function (dict) {
		return dict.bind;
	};
	var bindFlipped = function (dictBind) {
		return Data_Function.flip(bind(dictBind));
	};
	var discardUnit = {
		discard: function (dictBind) {
			return bind(dictBind);
		},
	};
	var join = function (dictBind) {
		return function (m) {
			return bind(dictBind)(m)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	exports['bind'] = bind;
	exports['bindFlipped'] = bindFlipped;
	exports['discard'] = discard;
	exports['join'] = join;
	exports['bindArray'] = bindArray;
	exports['discardUnit'] = discardUnit;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Comonad'] = $PS['Control.Comonad'] || {};
	var exports = $PS['Control.Comonad'];
	var extract = function (dict) {
		return dict.extract;
	};
	exports['extract'] = extract;
})(PS);
(function (exports) {
	'use strict';

	exports.defer = function (thunk) {
		var v = null;
		return function () {
			if (thunk === undefined) return v;

			v = thunk();
			thunk = undefined; // eslint-disable-line no-param-reassign
			return v;
		};
	};

	exports.force = function (l) {
		return l();
	};
})((PS['Data.Lazy'] = PS['Data.Lazy'] || {}));
(function (exports) {
	'use strict';

	var refEq = function (r1) {
		return function (r2) {
			return r1 === r2;
		};
	};

	exports.eqBooleanImpl = refEq;
	exports.eqIntImpl = refEq;
	exports.eqNumberImpl = refEq;
	exports.eqCharImpl = refEq;
	exports.eqStringImpl = refEq;

	exports.eqArrayImpl = function (f) {
		return function (xs) {
			return function (ys) {
				if (xs.length !== ys.length) return false;
				for (var i = 0; i < xs.length; i++) {
					if (!f(xs[i])(ys[i])) return false;
				}
				return true;
			};
		};
	};
})((PS['Data.Eq'] = PS['Data.Eq'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Symbol'] = $PS['Data.Symbol'] || {};
	var exports = $PS['Data.Symbol'];
	var SProxy = (function () {
		function SProxy() {}
		SProxy.value = new SProxy();
		return SProxy;
	})();
	var reflectSymbol = function (dict) {
		return dict.reflectSymbol;
	};
	exports['reflectSymbol'] = reflectSymbol;
	exports['SProxy'] = SProxy;
})(PS);
(function (exports) {
	'use strict';

	exports.unsafeGet = function (label) {
		return function (rec) {
			return rec[label];
		};
	};

	exports.unsafeSet = function (label) {
		return function (value) {
			return function (rec) {
				var copy = {};
				for (var key in rec) {
					if ({}.hasOwnProperty.call(rec, key)) {
						copy[key] = rec[key];
					}
				}
				copy[label] = value;
				return copy;
			};
		};
	};
})((PS['Record.Unsafe'] = PS['Record.Unsafe'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Record.Unsafe'] = $PS['Record.Unsafe'] || {};
	var exports = $PS['Record.Unsafe'];
	var $foreign = $PS['Record.Unsafe'];
	exports['unsafeGet'] = $foreign.unsafeGet;
	exports['unsafeSet'] = $foreign.unsafeSet;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Type.Proxy'] = $PS['Type.Proxy'] || {};
	var exports = $PS['Type.Proxy'];
	var $$Proxy = (function () {
		function $$Proxy() {}
		$$Proxy.value = new $$Proxy();
		return $$Proxy;
	})();
	exports['Proxy'] = $$Proxy;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Eq'] = $PS['Data.Eq'] || {};
	var exports = $PS['Data.Eq'];
	var $foreign = $PS['Data.Eq'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Type_Proxy = $PS['Type.Proxy'];
	var eqUnit = {
		eq: function (v) {
			return function (v1) {
				return true;
			};
		},
	};
	var eqString = {
		eq: $foreign.eqStringImpl,
	};
	var eqRowNil = {
		eqRecord: function (v) {
			return function (v1) {
				return function (v2) {
					return true;
				};
			};
		},
	};
	var eqRecord = function (dict) {
		return dict.eqRecord;
	};
	var eqRec = function (dictRowToList) {
		return function (dictEqRecord) {
			return {
				eq: eqRecord(dictEqRecord)(Type_Proxy['Proxy'].value),
			};
		};
	};
	var eqNumber = {
		eq: $foreign.eqNumberImpl,
	};
	var eqInt = {
		eq: $foreign.eqIntImpl,
	};
	var eqChar = {
		eq: $foreign.eqCharImpl,
	};
	var eqBoolean = {
		eq: $foreign.eqBooleanImpl,
	};
	var eq1 = function (dict) {
		return dict.eq1;
	};
	var eq = function (dict) {
		return dict.eq;
	};
	var eqArray = function (dictEq) {
		return {
			eq: $foreign.eqArrayImpl(eq(dictEq)),
		};
	};
	var eqRowCons = function (dictEqRecord) {
		return function (dictCons) {
			return function (dictIsSymbol) {
				return function (dictEq) {
					return {
						eqRecord: function (v) {
							return function (ra) {
								return function (rb) {
									var tail = eqRecord(dictEqRecord)(Type_Proxy['Proxy'].value)(
										ra
									)(rb);
									var key = Data_Symbol.reflectSymbol(dictIsSymbol)(
										Type_Proxy['Proxy'].value
									);
									var get = Record_Unsafe.unsafeGet(key);
									return eq(dictEq)(get(ra))(get(rb)) && tail;
								};
							};
						},
					};
				};
			};
		};
	};
	var notEq = function (dictEq) {
		return function (x) {
			return function (y) {
				return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
			};
		};
	};
	exports['eq'] = eq;
	exports['notEq'] = notEq;
	exports['eq1'] = eq1;
	exports['eqInt'] = eqInt;
	exports['eqNumber'] = eqNumber;
	exports['eqChar'] = eqChar;
	exports['eqString'] = eqString;
	exports['eqUnit'] = eqUnit;
	exports['eqArray'] = eqArray;
	exports['eqRec'] = eqRec;
	exports['eqRowNil'] = eqRowNil;
	exports['eqRowCons'] = eqRowCons;
})(PS);
(function (exports) {
	'use strict';

	var unsafeCompareImpl = function (lt) {
		return function (eq) {
			return function (gt) {
				return function (x) {
					return function (y) {
						return x < y ? lt : x === y ? eq : gt;
					};
				};
			};
		};
	};
	exports.ordIntImpl = unsafeCompareImpl;
	exports.ordNumberImpl = unsafeCompareImpl;
	exports.ordStringImpl = unsafeCompareImpl;
	exports.ordCharImpl = unsafeCompareImpl;

	exports.ordArrayImpl = function (f) {
		return function (xs) {
			return function (ys) {
				var i = 0;
				var xlen = xs.length;
				var ylen = ys.length;
				while (i < xlen && i < ylen) {
					var x = xs[i];
					var y = ys[i];
					var o = f(x)(y);
					if (o !== 0) {
						return o;
					}
					i++;
				}
				if (xlen === ylen) {
					return 0;
				} else if (xlen > ylen) {
					return -1;
				} else {
					return 1;
				}
			};
		};
	};
})((PS['Data.Ord'] = PS['Data.Ord'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Ordering'] = $PS['Data.Ordering'] || {};
	var exports = $PS['Data.Ordering'];
	var LT = (function () {
		function LT() {}
		LT.value = new LT();
		return LT;
	})();
	var GT = (function () {
		function GT() {}
		GT.value = new GT();
		return GT;
	})();
	var EQ = (function () {
		function EQ() {}
		EQ.value = new EQ();
		return EQ;
	})();
	var eqOrdering = {
		eq: function (v) {
			return function (v1) {
				if (v instanceof LT && v1 instanceof LT) {
					return true;
				}
				if (v instanceof GT && v1 instanceof GT) {
					return true;
				}
				if (v instanceof EQ && v1 instanceof EQ) {
					return true;
				}
				return false;
			};
		},
	};
	exports['LT'] = LT;
	exports['GT'] = GT;
	exports['EQ'] = EQ;
	exports['eqOrdering'] = eqOrdering;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Ord'] = $PS['Data.Ord'] || {};
	var exports = $PS['Data.Ord'];
	var $foreign = $PS['Data.Ord'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Type_Proxy = $PS['Type.Proxy'];
	var ordString = {
		compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(
			Data_Ordering.EQ.value
		)(Data_Ordering.GT.value),
		Eq0: function () {
			return Data_Eq.eqString;
		},
	};
	var ordRecordNil = {
		compareRecord: function (v) {
			return function (v1) {
				return function (v2) {
					return Data_Ordering.EQ.value;
				};
			};
		},
		EqRecord0: function () {
			return Data_Eq.eqRowNil;
		},
	};
	var ordNumber = {
		compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(
			Data_Ordering.EQ.value
		)(Data_Ordering.GT.value),
		Eq0: function () {
			return Data_Eq.eqNumber;
		},
	};
	var ordInt = {
		compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(
			Data_Ordering.EQ.value
		)(Data_Ordering.GT.value),
		Eq0: function () {
			return Data_Eq.eqInt;
		},
	};
	var ordChar = {
		compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(
			Data_Ordering.EQ.value
		)(Data_Ordering.GT.value),
		Eq0: function () {
			return Data_Eq.eqChar;
		},
	};
	var compareRecord = function (dict) {
		return dict.compareRecord;
	};
	var ordRecord = function (dictRowToList) {
		return function (dictOrdRecord) {
			return {
				compare: compareRecord(dictOrdRecord)(Type_Proxy['Proxy'].value),
				Eq0: function () {
					return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
				},
			};
		};
	};
	var compare1 = function (dict) {
		return dict.compare1;
	};
	var compare = function (dict) {
		return dict.compare;
	};
	var comparing = function (dictOrd) {
		return function (f) {
			return function (x) {
				return function (y) {
					return compare(dictOrd)(f(x))(f(y));
				};
			};
		};
	};
	var max = function (dictOrd) {
		return function (x) {
			return function (y) {
				var v = compare(dictOrd)(x)(y);
				if (v instanceof Data_Ordering.LT) {
					return y;
				}
				if (v instanceof Data_Ordering.EQ) {
					return x;
				}
				if (v instanceof Data_Ordering.GT) {
					return x;
				}
				throw new Error(
					'Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): ' +
						[v.constructor.name]
				);
			};
		};
	};
	var ordArray = function (dictOrd) {
		return {
			compare: (function () {
				var toDelta = function (x) {
					return function (y) {
						var v = compare(dictOrd)(x)(y);
						if (v instanceof Data_Ordering.EQ) {
							return 0;
						}
						if (v instanceof Data_Ordering.LT) {
							return 1;
						}
						if (v instanceof Data_Ordering.GT) {
							return -1 | 0;
						}
						throw new Error(
							'Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): ' +
								[v.constructor.name]
						);
					};
				};
				return function (xs) {
					return function (ys) {
						return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
					};
				};
			})(),
			Eq0: function () {
				return Data_Eq.eqArray(dictOrd.Eq0());
			},
		};
	};
	var ordRecordCons = function (dictOrdRecord) {
		return function (dictCons) {
			return function (dictIsSymbol) {
				return function (dictOrd) {
					return {
						compareRecord: function (v) {
							return function (ra) {
								return function (rb) {
									var key = Data_Symbol.reflectSymbol(dictIsSymbol)(
										Type_Proxy['Proxy'].value
									);
									var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(
										Record_Unsafe.unsafeGet(key)(rb)
									);
									var $58 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(
										Data_Ordering.EQ.value
									);
									if ($58) {
										return left;
									}
									return compareRecord(dictOrdRecord)(
										Type_Proxy['Proxy'].value
									)(ra)(rb);
								};
							};
						},
						EqRecord0: function () {
							return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(
								dictIsSymbol
							)(dictOrd.Eq0());
						},
					};
				};
			};
		};
	};
	exports['compare'] = compare;
	exports['compare1'] = compare1;
	exports['comparing'] = comparing;
	exports['max'] = max;
	exports['ordInt'] = ordInt;
	exports['ordNumber'] = ordNumber;
	exports['ordString'] = ordString;
	exports['ordChar'] = ordChar;
	exports['ordArray'] = ordArray;
	exports['ordRecordNil'] = ordRecordNil;
	exports['ordRecordCons'] = ordRecordCons;
	exports['ordRecord'] = ordRecord;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Lazy'] = $PS['Data.Lazy'] || {};
	var exports = $PS['Data.Lazy'];
	var $foreign = $PS['Data.Lazy'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Ord = $PS['Data.Ord'];
	var functorLazy = {
		map: function (f) {
			return function (l) {
				return $foreign.defer(function (v) {
					return f($foreign.force(l));
				});
			};
		},
	};
	var eqLazy = function (dictEq) {
		return {
			eq: function (x) {
				return function (y) {
					return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
				};
			},
		};
	};
	var ordLazy = function (dictOrd) {
		return {
			compare: function (x) {
				return function (y) {
					return Data_Ord.compare(dictOrd)($foreign.force(x))(
						$foreign.force(y)
					);
				};
			},
			Eq0: function () {
				return eqLazy(dictOrd.Eq0());
			},
		};
	};
	exports['eqLazy'] = eqLazy;
	exports['ordLazy'] = ordLazy;
	exports['functorLazy'] = functorLazy;
	exports['defer'] = $foreign.defer;
	exports['force'] = $foreign.force;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Tuple'] = $PS['Data.Tuple'] || {};
	var exports = $PS['Data.Tuple'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Tuple = (function () {
		function Tuple(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		Tuple.create = function (value0) {
			return function (value1) {
				return new Tuple(value0, value1);
			};
		};
		return Tuple;
	})();
	var uncurry = function (f) {
		return function (v) {
			return f(v.value0)(v.value1);
		};
	};
	var snd = function (v) {
		return v.value1;
	};
	var functorTuple = {
		map: function (f) {
			return function (m) {
				return new Tuple(m.value0, f(m.value1));
			};
		},
	};
	var fst = function (v) {
		return v.value0;
	};
	var eqTuple = function (dictEq) {
		return function (dictEq1) {
			return {
				eq: function (x) {
					return function (y) {
						return (
							Data_Eq.eq(dictEq)(x.value0)(y.value0) &&
							Data_Eq.eq(dictEq1)(x.value1)(y.value1)
						);
					};
				},
			};
		};
	};
	var ordTuple = function (dictOrd) {
		return function (dictOrd1) {
			return {
				compare: function (x) {
					return function (y) {
						var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
						if (v instanceof Data_Ordering.LT) {
							return Data_Ordering.LT.value;
						}
						if (v instanceof Data_Ordering.GT) {
							return Data_Ordering.GT.value;
						}
						return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
					};
				},
				Eq0: function () {
					return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
				},
			};
		};
	};
	exports['Tuple'] = Tuple;
	exports['fst'] = fst;
	exports['snd'] = snd;
	exports['uncurry'] = uncurry;
	exports['eqTuple'] = eqTuple;
	exports['ordTuple'] = ordTuple;
	exports['functorTuple'] = functorTuple;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Comonad.Cofree'] = $PS['Control.Comonad.Cofree'] || {};
	var exports = $PS['Control.Comonad.Cofree'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Lazy = $PS['Data.Lazy'];
	var Data_Tuple = $PS['Data.Tuple'];
	var tail = function (v) {
		return Data_Tuple.snd(Data_Lazy.force(v));
	};
	var mkCofree = function (a) {
		return function (t) {
			return Data_Lazy.defer(function (v) {
				return new Data_Tuple.Tuple(a, t);
			});
		};
	};
	var head = function (v) {
		return Data_Tuple.fst(Data_Lazy.force(v));
	};
	var functorCofree = function (dictFunctor) {
		return {
			map: function (f) {
				var loop = function (v) {
					return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
						return new Data_Tuple.Tuple(
							f(v1.value0),
							Data_Functor.map(dictFunctor)(loop)(v1.value1)
						);
					})(v);
				};
				return loop;
			},
		};
	};
	var extendCofree = function (dictFunctor) {
		return {
			extend: function (f) {
				var loop = function (v) {
					return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
						return new Data_Tuple.Tuple(
							f(v),
							Data_Functor.map(dictFunctor)(loop)(v1.value1)
						);
					})(v);
				};
				return loop;
			},
			Functor0: function () {
				return functorCofree(dictFunctor);
			},
		};
	};
	var comonadCofree = function (dictFunctor) {
		return {
			extract: head,
			Extend0: function () {
				return extendCofree(dictFunctor);
			},
		};
	};
	exports['mkCofree'] = mkCofree;
	exports['head'] = head;
	exports['tail'] = tail;
	exports['functorCofree'] = functorCofree;
	exports['comonadCofree'] = comonadCofree;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Comonad.Cofree.Class'] =
		$PS['Control.Comonad.Cofree.Class'] || {};
	var exports = $PS['Control.Comonad.Cofree.Class'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var unwrapCofree = function (dict) {
		return dict.unwrapCofree;
	};
	var comonadCofreeCofree = function (dictFunctor) {
		return {
			unwrapCofree: Control_Comonad_Cofree.tail,
			Functor0: function () {
				return dictFunctor;
			},
			Comonad1: function () {
				return Control_Comonad_Cofree.comonadCofree(dictFunctor);
			},
		};
	};
	exports['unwrapCofree'] = unwrapCofree;
	exports['comonadCofreeCofree'] = comonadCofreeCofree;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad'] = $PS['Control.Monad'] || {};
	var exports = $PS['Control.Monad'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var ap = function (dictMonad) {
		return function (f) {
			return function (a) {
				return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
					return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
						return Control_Applicative.pure(dictMonad.Applicative0())(
							f$prime(a$prime)
						);
					});
				});
			};
		};
	};
	exports['ap'] = ap;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Maybe'] = $PS['Data.Maybe'] || {};
	var exports = $PS['Data.Maybe'];
	var Control_Category = $PS['Control.Category'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Unit = $PS['Data.Unit'];
	var Nothing = (function () {
		function Nothing() {}
		Nothing.value = new Nothing();
		return Nothing;
	})();
	var Just = (function () {
		function Just(value0) {
			this.value0 = value0;
		}
		Just.create = function (value0) {
			return new Just(value0);
		};
		return Just;
	})();
	var maybe$prime = function (v) {
		return function (v1) {
			return function (v2) {
				if (v2 instanceof Nothing) {
					return v(Data_Unit.unit);
				}
				if (v2 instanceof Just) {
					return v1(v2.value0);
				}
				throw new Error(
					'Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): ' +
						[v.constructor.name, v1.constructor.name, v2.constructor.name]
				);
			};
		};
	};
	var maybe = function (v) {
		return function (v1) {
			return function (v2) {
				if (v2 instanceof Nothing) {
					return v;
				}
				if (v2 instanceof Just) {
					return v1(v2.value0);
				}
				throw new Error(
					'Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): ' +
						[v.constructor.name, v1.constructor.name, v2.constructor.name]
				);
			};
		};
	};
	var isNothing = maybe(true)(Data_Function['const'](false));
	var isJust = maybe(false)(Data_Function['const'](true));
	var functorMaybe = {
		map: function (v) {
			return function (v1) {
				if (v1 instanceof Just) {
					return new Just(v(v1.value0));
				}
				return Nothing.value;
			};
		},
	};
	var fromMaybe = function (a) {
		return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
	};
	var fromJust = function (dictPartial) {
		return function (v) {
			if (v instanceof Just) {
				return v.value0;
			}
			throw new Error(
				'Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): ' +
					[v.constructor.name]
			);
		};
	};
	var eqMaybe = function (dictEq) {
		return {
			eq: function (x) {
				return function (y) {
					if (x instanceof Nothing && y instanceof Nothing) {
						return true;
					}
					if (x instanceof Just && y instanceof Just) {
						return Data_Eq.eq(dictEq)(x.value0)(y.value0);
					}
					return false;
				};
			},
		};
	};
	var ordMaybe = function (dictOrd) {
		return {
			compare: function (x) {
				return function (y) {
					if (x instanceof Nothing && y instanceof Nothing) {
						return Data_Ordering.EQ.value;
					}
					if (x instanceof Nothing) {
						return Data_Ordering.LT.value;
					}
					if (y instanceof Nothing) {
						return Data_Ordering.GT.value;
					}
					if (x instanceof Just && y instanceof Just) {
						return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
					}
					throw new Error(
						'Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): ' +
							[x.constructor.name, y.constructor.name]
					);
				};
			},
			Eq0: function () {
				return eqMaybe(dictOrd.Eq0());
			},
		};
	};
	var applyMaybe = {
		apply: function (v) {
			return function (v1) {
				if (v instanceof Just) {
					return Data_Functor.map(functorMaybe)(v.value0)(v1);
				}
				if (v instanceof Nothing) {
					return Nothing.value;
				}
				throw new Error(
					'Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		},
		Functor0: function () {
			return functorMaybe;
		},
	};
	var bindMaybe = {
		bind: function (v) {
			return function (v1) {
				if (v instanceof Just) {
					return v1(v.value0);
				}
				if (v instanceof Nothing) {
					return Nothing.value;
				}
				throw new Error(
					'Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		},
		Apply0: function () {
			return applyMaybe;
		},
	};
	var applicativeMaybe = {
		pure: Just.create,
		Apply0: function () {
			return applyMaybe;
		},
	};
	var altMaybe = {
		alt: function (v) {
			return function (v1) {
				if (v instanceof Nothing) {
					return v1;
				}
				return v;
			};
		},
		Functor0: function () {
			return functorMaybe;
		},
	};
	exports['Nothing'] = Nothing;
	exports['Just'] = Just;
	exports['maybe'] = maybe;
	exports["maybe'"] = maybe$prime;
	exports['fromMaybe'] = fromMaybe;
	exports['isJust'] = isJust;
	exports['isNothing'] = isNothing;
	exports['fromJust'] = fromJust;
	exports['functorMaybe'] = functorMaybe;
	exports['applyMaybe'] = applyMaybe;
	exports['applicativeMaybe'] = applicativeMaybe;
	exports['altMaybe'] = altMaybe;
	exports['bindMaybe'] = bindMaybe;
	exports['eqMaybe'] = eqMaybe;
	exports['ordMaybe'] = ordMaybe;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Either'] = $PS['Data.Either'] || {};
	var exports = $PS['Data.Either'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Left = (function () {
		function Left(value0) {
			this.value0 = value0;
		}
		Left.create = function (value0) {
			return new Left(value0);
		};
		return Left;
	})();
	var Right = (function () {
		function Right(value0) {
			this.value0 = value0;
		}
		Right.create = function (value0) {
			return new Right(value0);
		};
		return Right;
	})();
	var functorEither = {
		map: function (f) {
			return function (m) {
				if (m instanceof Left) {
					return new Left(m.value0);
				}
				if (m instanceof Right) {
					return new Right(f(m.value0));
				}
				throw new Error(
					'Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): ' +
						[m.constructor.name]
				);
			};
		},
	};
	var eqEither = function (dictEq) {
		return function (dictEq1) {
			return {
				eq: function (x) {
					return function (y) {
						if (x instanceof Left && y instanceof Left) {
							return Data_Eq.eq(dictEq)(x.value0)(y.value0);
						}
						if (x instanceof Right && y instanceof Right) {
							return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
						}
						return false;
					};
				},
			};
		};
	};
	var ordEither = function (dictOrd) {
		return function (dictOrd1) {
			return {
				compare: function (x) {
					return function (y) {
						if (x instanceof Left && y instanceof Left) {
							return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
						}
						if (x instanceof Left) {
							return Data_Ordering.LT.value;
						}
						if (y instanceof Left) {
							return Data_Ordering.GT.value;
						}
						if (x instanceof Right && y instanceof Right) {
							return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
						}
						throw new Error(
							'Failed pattern match at Data.Either (line 189, column 1 - line 189, column 64): ' +
								[x.constructor.name, y.constructor.name]
						);
					};
				},
				Eq0: function () {
					return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
				},
			};
		};
	};
	var either = function (v) {
		return function (v1) {
			return function (v2) {
				if (v2 instanceof Left) {
					return v(v2.value0);
				}
				if (v2 instanceof Right) {
					return v1(v2.value0);
				}
				throw new Error(
					'Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): ' +
						[v.constructor.name, v1.constructor.name, v2.constructor.name]
				);
			};
		};
	};
	var hush = either(Data_Function['const'](Data_Maybe.Nothing.value))(
		Data_Maybe.Just.create
	);
	var applyEither = {
		apply: function (v) {
			return function (v1) {
				if (v instanceof Left) {
					return new Left(v.value0);
				}
				if (v instanceof Right) {
					return Data_Functor.map(functorEither)(v.value0)(v1);
				}
				throw new Error(
					'Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		},
		Functor0: function () {
			return functorEither;
		},
	};
	var bindEither = {
		bind: either(function (e) {
			return function (v) {
				return new Left(e);
			};
		})(function (a) {
			return function (f) {
				return f(a);
			};
		}),
		Apply0: function () {
			return applyEither;
		},
	};
	var applicativeEither = {
		pure: Right.create,
		Apply0: function () {
			return applyEither;
		},
	};
	var monadEither = {
		Applicative0: function () {
			return applicativeEither;
		},
		Bind1: function () {
			return bindEither;
		},
	};
	exports['Left'] = Left;
	exports['Right'] = Right;
	exports['either'] = either;
	exports['hush'] = hush;
	exports['functorEither'] = functorEither;
	exports['applicativeEither'] = applicativeEither;
	exports['bindEither'] = bindEither;
	exports['monadEither'] = monadEither;
	exports['eqEither'] = eqEither;
	exports['ordEither'] = ordEither;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.Error.Class'] = $PS['Control.Monad.Error.Class'] || {};
	var exports = $PS['Control.Monad.Error.Class'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Data_Either = $PS['Data.Either'];
	var Data_Functor = $PS['Data.Functor'];
	var throwError = function (dict) {
		return dict.throwError;
	};
	var catchError = function (dict) {
		return dict.catchError;
	};
	var $$try = function (dictMonadError) {
		return function (a) {
			return catchError(dictMonadError)(
				Data_Functor.map(
					dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0()
				)(Data_Either.Right.create)(a)
			)(
				(function () {
					var $19 = Control_Applicative.pure(
						dictMonadError.MonadThrow0().Monad0().Applicative0()
					);
					return function ($20) {
						return $19(Data_Either.Left.create($20));
					};
				})()
			);
		};
	};
	exports['throwError'] = throwError;
	exports['try'] = $$try;
})(PS);
(function (exports) {
	'use strict';

	exports.concatString = function (s1) {
		return function (s2) {
			return s1 + s2;
		};
	};

	exports.concatArray = function (xs) {
		return function (ys) {
			if (xs.length === 0) return ys;
			if (ys.length === 0) return xs;
			return xs.concat(ys);
		};
	};
})((PS['Data.Semigroup'] = PS['Data.Semigroup'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Semigroup'] = $PS['Data.Semigroup'] || {};
	var exports = $PS['Data.Semigroup'];
	var $foreign = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Unit = $PS['Data.Unit'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Type_Proxy = $PS['Type.Proxy'];
	var semigroupUnit = {
		append: function (v) {
			return function (v1) {
				return Data_Unit.unit;
			};
		},
	};
	var semigroupString = {
		append: $foreign.concatString,
	};
	var semigroupRecordNil = {
		appendRecord: function (v) {
			return function (v1) {
				return function (v2) {
					return {};
				};
			};
		},
	};
	var semigroupArray = {
		append: $foreign.concatArray,
	};
	var appendRecord = function (dict) {
		return dict.appendRecord;
	};
	var semigroupRecord = function (dictRowToList) {
		return function (dictSemigroupRecord) {
			return {
				append: appendRecord(dictSemigroupRecord)(Type_Proxy['Proxy'].value),
			};
		};
	};
	var append = function (dict) {
		return dict.append;
	};
	var semigroupRecordCons = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictSemigroupRecord) {
				return function (dictSemigroup) {
					return {
						appendRecord: function (v) {
							return function (ra) {
								return function (rb) {
									var tail = appendRecord(dictSemigroupRecord)(
										Type_Proxy['Proxy'].value
									)(ra)(rb);
									var key = Data_Symbol.reflectSymbol(dictIsSymbol)(
										Type_Proxy['Proxy'].value
									);
									var insert = Record_Unsafe.unsafeSet(key);
									var get = Record_Unsafe.unsafeGet(key);
									return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
								};
							};
						},
					};
				};
			};
		};
	};
	exports['append'] = append;
	exports['semigroupString'] = semigroupString;
	exports['semigroupUnit'] = semigroupUnit;
	exports['semigroupArray'] = semigroupArray;
	exports['semigroupRecord'] = semigroupRecord;
	exports['semigroupRecordNil'] = semigroupRecordNil;
	exports['semigroupRecordCons'] = semigroupRecordCons;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.Except.Trans'] = $PS['Control.Monad.Except.Trans'] || {};
	var exports = $PS['Control.Monad.Except.Trans'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad = $PS['Control.Monad'];
	var Data_Either = $PS['Data.Either'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var ExceptT = function (x) {
		return x;
	};
	var withExceptT = function (dictFunctor) {
		return function (f) {
			return function (v) {
				var mapLeft = function (v1) {
					return function (v2) {
						if (v2 instanceof Data_Either.Right) {
							return new Data_Either.Right(v2.value0);
						}
						if (v2 instanceof Data_Either.Left) {
							return new Data_Either.Left(v1(v2.value0));
						}
						throw new Error(
							'Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): ' +
								[v1.constructor.name, v2.constructor.name]
						);
					};
				};
				return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
			};
		};
	};
	var runExceptT = function (v) {
		return v;
	};
	var mapExceptT = function (f) {
		return function (v) {
			return f(v);
		};
	};
	var functorExceptT = function (dictFunctor) {
		return {
			map: function (f) {
				return mapExceptT(
					Data_Functor.map(dictFunctor)(
						Data_Functor.map(Data_Either.functorEither)(f)
					)
				);
			},
		};
	};
	var monadExceptT = function (dictMonad) {
		return {
			Applicative0: function () {
				return applicativeExceptT(dictMonad);
			},
			Bind1: function () {
				return bindExceptT(dictMonad);
			},
		};
	};
	var bindExceptT = function (dictMonad) {
		return {
			bind: function (v) {
				return function (k) {
					return Control_Bind.bind(dictMonad.Bind1())(v)(
						Data_Either.either(
							(function () {
								var $91 = Control_Applicative.pure(dictMonad.Applicative0());
								return function ($92) {
									return $91(Data_Either.Left.create($92));
								};
							})()
						)(function (a) {
							var v1 = k(a);
							return v1;
						})
					);
				};
			},
			Apply0: function () {
				return applyExceptT(dictMonad);
			},
		};
	};
	var applyExceptT = function (dictMonad) {
		return {
			apply: Control_Monad.ap(monadExceptT(dictMonad)),
			Functor0: function () {
				return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
			},
		};
	};
	var applicativeExceptT = function (dictMonad) {
		return {
			pure: (function () {
				var $93 = Control_Applicative.pure(dictMonad.Applicative0());
				return function ($94) {
					return ExceptT($93(Data_Either.Right.create($94)));
				};
			})(),
			Apply0: function () {
				return applyExceptT(dictMonad);
			},
		};
	};
	var monadThrowExceptT = function (dictMonad) {
		return {
			throwError: (function () {
				var $103 = Control_Applicative.pure(dictMonad.Applicative0());
				return function ($104) {
					return ExceptT($103(Data_Either.Left.create($104)));
				};
			})(),
			Monad0: function () {
				return monadExceptT(dictMonad);
			},
		};
	};
	var altExceptT = function (dictSemigroup) {
		return function (dictMonad) {
			return {
				alt: function (v) {
					return function (v1) {
						return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
							if (rm instanceof Data_Either.Right) {
								return Control_Applicative.pure(dictMonad.Applicative0())(
									new Data_Either.Right(rm.value0)
								);
							}
							if (rm instanceof Data_Either.Left) {
								return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
									if (rn instanceof Data_Either.Right) {
										return Control_Applicative.pure(dictMonad.Applicative0())(
											new Data_Either.Right(rn.value0)
										);
									}
									if (rn instanceof Data_Either.Left) {
										return Control_Applicative.pure(dictMonad.Applicative0())(
											new Data_Either.Left(
												Data_Semigroup.append(dictSemigroup)(rm.value0)(
													rn.value0
												)
											)
										);
									}
									throw new Error(
										'Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): ' +
											[rn.constructor.name]
									);
								});
							}
							throw new Error(
								'Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): ' +
									[rm.constructor.name]
							);
						});
					};
				},
				Functor0: function () {
					return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
				},
			};
		};
	};
	exports['ExceptT'] = ExceptT;
	exports['runExceptT'] = runExceptT;
	exports['withExceptT'] = withExceptT;
	exports['functorExceptT'] = functorExceptT;
	exports['applicativeExceptT'] = applicativeExceptT;
	exports['bindExceptT'] = bindExceptT;
	exports['altExceptT'] = altExceptT;
	exports['monadThrowExceptT'] = monadThrowExceptT;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Identity'] = $PS['Data.Identity'] || {};
	var exports = $PS['Data.Identity'];
	var Identity = function (x) {
		return x;
	};
	var functorIdentity = {
		map: function (f) {
			return function (m) {
				return f(m);
			};
		},
	};
	var applyIdentity = {
		apply: function (v) {
			return function (v1) {
				return v(v1);
			};
		},
		Functor0: function () {
			return functorIdentity;
		},
	};
	var bindIdentity = {
		bind: function (v) {
			return function (f) {
				return f(v);
			};
		},
		Apply0: function () {
			return applyIdentity;
		},
	};
	var applicativeIdentity = {
		pure: Identity,
		Apply0: function () {
			return applyIdentity;
		},
	};
	var monadIdentity = {
		Applicative0: function () {
			return applicativeIdentity;
		},
		Bind1: function () {
			return bindIdentity;
		},
	};
	exports['functorIdentity'] = functorIdentity;
	exports['applicativeIdentity'] = applicativeIdentity;
	exports['monadIdentity'] = monadIdentity;
})(PS);
(function (exports) {
	'use strict';

	// module Unsafe.Coerce

	exports.unsafeCoerce = function (x) {
		return x;
	};
})((PS['Unsafe.Coerce'] = PS['Unsafe.Coerce'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Unsafe.Coerce'] = $PS['Unsafe.Coerce'] || {};
	var exports = $PS['Unsafe.Coerce'];
	var $foreign = $PS['Unsafe.Coerce'];
	exports['unsafeCoerce'] = $foreign.unsafeCoerce;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Safe.Coerce'] = $PS['Safe.Coerce'] || {};
	var exports = $PS['Safe.Coerce'];
	var Unsafe_Coerce = $PS['Unsafe.Coerce'];
	var coerce = function (dictCoercible) {
		return Unsafe_Coerce.unsafeCoerce;
	};
	exports['coerce'] = coerce;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Newtype'] = $PS['Data.Newtype'] || {};
	var exports = $PS['Data.Newtype'];
	var Safe_Coerce = $PS['Safe.Coerce'];
	var wrap = function (dictNewtype) {
		return Safe_Coerce.coerce();
	};
	var unwrap = function (dictNewtype) {
		return Safe_Coerce.coerce();
	};
	var alaF = function (dictCoercible) {
		return function (dictCoercible1) {
			return function (dictNewtype) {
				return function (dictNewtype1) {
					return function (v) {
						return Safe_Coerce.coerce();
					};
				};
			};
		};
	};
	exports['wrap'] = wrap;
	exports['unwrap'] = unwrap;
	exports['alaF'] = alaF;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.Except'] = $PS['Control.Monad.Except'] || {};
	var exports = $PS['Control.Monad.Except'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_Newtype = $PS['Data.Newtype'];
	var withExcept = Control_Monad_Except_Trans.withExceptT(
		Data_Identity.functorIdentity
	);
	var runExcept = (function () {
		var $0 = Data_Newtype.unwrap();
		return function ($1) {
			return $0(Control_Monad_Except_Trans.runExceptT($1));
		};
	})();
	exports['runExcept'] = runExcept;
	exports['withExcept'] = withExcept;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.Rec.Class'] = $PS['Control.Monad.Rec.Class'] || {};
	var exports = $PS['Control.Monad.Rec.Class'];
	var Data_Either = $PS['Data.Either'];
	var Loop = (function () {
		function Loop(value0) {
			this.value0 = value0;
		}
		Loop.create = function (value0) {
			return new Loop(value0);
		};
		return Loop;
	})();
	var Done = (function () {
		function Done(value0) {
			this.value0 = value0;
		}
		Done.create = function (value0) {
			return new Done(value0);
		};
		return Done;
	})();
	var tailRecM = function (dict) {
		return dict.tailRecM;
	};
	var tailRec = function (f) {
		var go = function ($copy_v) {
			var $tco_done = false;
			var $tco_result;
			function $tco_loop(v) {
				if (v instanceof Loop) {
					$copy_v = f(v.value0);
					return;
				}
				if (v instanceof Done) {
					$tco_done = true;
					return v.value0;
				}
				throw new Error(
					'Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): ' +
						[v.constructor.name]
				);
			}
			while (!$tco_done) {
				$tco_result = $tco_loop($copy_v);
			}
			return $tco_result;
		};
		return function ($59) {
			return go(f($59));
		};
	};
	var monadRecEither = {
		tailRecM: function (f) {
			return function (a0) {
				var g = function (v) {
					if (v instanceof Data_Either.Left) {
						return new Done(new Data_Either.Left(v.value0));
					}
					if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
						return new Loop(f(v.value0.value0));
					}
					if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
						return new Done(new Data_Either.Right(v.value0.value0));
					}
					throw new Error(
						'Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): ' +
							[v.constructor.name]
					);
				};
				return tailRec(g)(f(a0));
			};
		},
		Monad0: function () {
			return Data_Either.monadEither;
		},
	};
	var bifunctorStep = {
		bimap: function (v) {
			return function (v1) {
				return function (v2) {
					if (v2 instanceof Loop) {
						return new Loop(v(v2.value0));
					}
					if (v2 instanceof Done) {
						return new Done(v1(v2.value0));
					}
					throw new Error(
						'Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): ' +
							[v.constructor.name, v1.constructor.name, v2.constructor.name]
					);
				};
			};
		},
	};
	exports['Loop'] = Loop;
	exports['Done'] = Done;
	exports['tailRecM'] = tailRecM;
	exports['bifunctorStep'] = bifunctorStep;
	exports['monadRecEither'] = monadRecEither;
})(PS);
(function (exports) {
	'use strict';

	exports.map_ = function (f) {
		return function (a) {
			return function () {
				return f(a());
			};
		};
	};

	exports.pure_ = function (a) {
		return function () {
			return a;
		};
	};

	exports.bind_ = function (a) {
		return function (f) {
			return function () {
				return f(a())();
			};
		};
	};

	exports.foreach = function (as) {
		return function (f) {
			return function () {
				for (var i = 0, l = as.length; i < l; i++) {
					f(as[i])();
				}
			};
		};
	};

	exports.new = function (val) {
		return function () {
			return { value: val };
		};
	};

	exports.read = function (ref) {
		return function () {
			return ref.value;
		};
	};

	exports.modifyImpl = function (f) {
		return function (ref) {
			return function () {
				var t = f(ref.value);
				ref.value = t.state;
				return t.value;
			};
		};
	};

	exports.write = function (a) {
		return function (ref) {
			return function () {
				return (ref.value = a); // eslint-disable-line no-return-assign
			};
		};
	};
})((PS['Control.Monad.ST.Internal'] = PS['Control.Monad.ST.Internal'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.ST.Internal'] = $PS['Control.Monad.ST.Internal'] || {};
	var exports = $PS['Control.Monad.ST.Internal'];
	var $foreign = $PS['Control.Monad.ST.Internal'];
	var Control_Monad = $PS['Control.Monad'];
	var modify$prime = $foreign.modifyImpl;
	var modify = function (f) {
		return modify$prime(function (s) {
			var s$prime = f(s);
			return {
				state: s$prime,
				value: s$prime,
			};
		});
	};
	var functorST = {
		map: $foreign.map_,
	};
	var monadST = {
		Applicative0: function () {
			return applicativeST;
		},
		Bind1: function () {
			return bindST;
		},
	};
	var bindST = {
		bind: $foreign.bind_,
		Apply0: function () {
			return applyST;
		},
	};
	var applyST = {
		apply: Control_Monad.ap(monadST),
		Functor0: function () {
			return functorST;
		},
	};
	var applicativeST = {
		pure: $foreign.pure_,
		Apply0: function () {
			return applyST;
		},
	};
	exports['modify'] = modify;
	exports['functorST'] = functorST;
	exports['applyST'] = applyST;
	exports['applicativeST'] = applicativeST;
	exports['bindST'] = bindST;
	exports['monadST'] = monadST;
	exports['foreach'] = $foreign.foreach;
	exports['new'] = $foreign['new'];
	exports['read'] = $foreign.read;
	exports['write'] = $foreign.write;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.State'] = $PS['Control.Monad.State'] || {};
	var exports = $PS['Control.Monad.State'];
	var evalState = function (v) {
		return function (s) {
			var v1 = v(s);
			return v1.value0;
		};
	};
	exports['evalState'] = evalState;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.State.Class'] = $PS['Control.Monad.State.Class'] || {};
	var exports = $PS['Control.Monad.State.Class'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unit = $PS['Data.Unit'];
	var state = function (dict) {
		return dict.state;
	};
	var put = function (dictMonadState) {
		return function (s) {
			return state(dictMonadState)(function (v) {
				return new Data_Tuple.Tuple(Data_Unit.unit, s);
			});
		};
	};
	var get = function (dictMonadState) {
		return state(dictMonadState)(function (s) {
			return new Data_Tuple.Tuple(s, s);
		});
	};
	exports['state'] = state;
	exports['get'] = get;
	exports['put'] = put;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Monad.State.Trans'] = $PS['Control.Monad.State.Trans'] || {};
	var exports = $PS['Control.Monad.State.Trans'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad = $PS['Control.Monad'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Tuple = $PS['Data.Tuple'];
	var StateT = function (x) {
		return x;
	};
	var functorStateT = function (dictFunctor) {
		return {
			map: function (f) {
				return function (v) {
					return function (s) {
						return Data_Functor.map(dictFunctor)(function (v1) {
							return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
						})(v(s));
					};
				};
			},
		};
	};
	var monadStateT = function (dictMonad) {
		return {
			Applicative0: function () {
				return applicativeStateT(dictMonad);
			},
			Bind1: function () {
				return bindStateT(dictMonad);
			},
		};
	};
	var bindStateT = function (dictMonad) {
		return {
			bind: function (v) {
				return function (f) {
					return function (s) {
						return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
							var v3 = f(v1.value0);
							return v3(v1.value1);
						});
					};
				};
			},
			Apply0: function () {
				return applyStateT(dictMonad);
			},
		};
	};
	var applyStateT = function (dictMonad) {
		return {
			apply: Control_Monad.ap(monadStateT(dictMonad)),
			Functor0: function () {
				return functorStateT(dictMonad.Bind1().Apply0().Functor0());
			},
		};
	};
	var applicativeStateT = function (dictMonad) {
		return {
			pure: function (a) {
				return function (s) {
					return Control_Applicative.pure(dictMonad.Applicative0())(
						new Data_Tuple.Tuple(a, s)
					);
				};
			},
			Apply0: function () {
				return applyStateT(dictMonad);
			},
		};
	};
	var monadStateStateT = function (dictMonad) {
		return {
			state: function (f) {
				return StateT(
					(function () {
						var $113 = Control_Applicative.pure(dictMonad.Applicative0());
						return function ($114) {
							return $113(f($114));
						};
					})()
				);
			},
			Monad0: function () {
				return monadStateT(dictMonad);
			},
		};
	};
	exports['functorStateT'] = functorStateT;
	exports['applyStateT'] = applyStateT;
	exports['applicativeStateT'] = applicativeStateT;
	exports['bindStateT'] = bindStateT;
	exports['monadStateStateT'] = monadStateStateT;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Parallel.Class'] = $PS['Control.Parallel.Class'] || {};
	var exports = $PS['Control.Parallel.Class'];
	var sequential = function (dict) {
		return dict.sequential;
	};
	var parallel = function (dict) {
		return dict.parallel;
	};
	exports['parallel'] = parallel;
	exports['sequential'] = sequential;
})(PS);
(function (exports) {
	'use strict';

	exports.foldrArray = function (f) {
		return function (init) {
			return function (xs) {
				var acc = init;
				var len = xs.length;
				for (var i = len - 1; i >= 0; i--) {
					acc = f(xs[i])(acc);
				}
				return acc;
			};
		};
	};

	exports.foldlArray = function (f) {
		return function (init) {
			return function (xs) {
				var acc = init;
				var len = xs.length;
				for (var i = 0; i < len; i++) {
					acc = f(acc)(xs[i]);
				}
				return acc;
			};
		};
	};
})((PS['Data.Foldable'] = PS['Data.Foldable'] || {}));
(function (exports) {
	'use strict';

	exports.boolConj = function (b1) {
		return function (b2) {
			return b1 && b2;
		};
	};

	exports.boolDisj = function (b1) {
		return function (b2) {
			return b1 || b2;
		};
	};

	exports.boolNot = function (b) {
		return !b;
	};
})((PS['Data.HeytingAlgebra'] = PS['Data.HeytingAlgebra'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.HeytingAlgebra'] = $PS['Data.HeytingAlgebra'] || {};
	var exports = $PS['Data.HeytingAlgebra'];
	var $foreign = $PS['Data.HeytingAlgebra'];
	var not = function (dict) {
		return dict.not;
	};
	var ff = function (dict) {
		return dict.ff;
	};
	var disj = function (dict) {
		return dict.disj;
	};
	var heytingAlgebraBoolean = {
		ff: false,
		tt: true,
		implies: function (a) {
			return function (b) {
				return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
			};
		},
		conj: $foreign.boolConj,
		disj: $foreign.boolDisj,
		not: $foreign.boolNot,
	};
	exports['ff'] = ff;
	exports['disj'] = disj;
	exports['not'] = not;
	exports['heytingAlgebraBoolean'] = heytingAlgebraBoolean;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Monoid'] = $PS['Data.Monoid'] || {};
	var exports = $PS['Data.Monoid'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Unit = $PS['Data.Unit'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Type_Proxy = $PS['Type.Proxy'];
	var monoidUnit = {
		mempty: Data_Unit.unit,
		Semigroup0: function () {
			return Data_Semigroup.semigroupUnit;
		},
	};
	var monoidString = {
		mempty: '',
		Semigroup0: function () {
			return Data_Semigroup.semigroupString;
		},
	};
	var monoidRecordNil = {
		memptyRecord: function (v) {
			return {};
		},
		SemigroupRecord0: function () {
			return Data_Semigroup.semigroupRecordNil;
		},
	};
	var memptyRecord = function (dict) {
		return dict.memptyRecord;
	};
	var monoidRecord = function (dictRowToList) {
		return function (dictMonoidRecord) {
			return {
				mempty: memptyRecord(dictMonoidRecord)(Type_Proxy['Proxy'].value),
				Semigroup0: function () {
					return Data_Semigroup.semigroupRecord()(
						dictMonoidRecord.SemigroupRecord0()
					);
				},
			};
		};
	};
	var mempty = function (dict) {
		return dict.mempty;
	};
	var monoidRecordCons = function (dictIsSymbol) {
		return function (dictMonoid) {
			return function (dictCons) {
				return function (dictMonoidRecord) {
					return {
						memptyRecord: function (v) {
							var tail = memptyRecord(dictMonoidRecord)(
								Type_Proxy['Proxy'].value
							);
							var key = Data_Symbol.reflectSymbol(dictIsSymbol)(
								Type_Proxy['Proxy'].value
							);
							var insert = Record_Unsafe.unsafeSet(key);
							return insert(mempty(dictMonoid))(tail);
						},
						SemigroupRecord0: function () {
							return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(
								dictMonoidRecord.SemigroupRecord0()
							)(dictMonoid.Semigroup0());
						},
					};
				};
			};
		};
	};
	exports['mempty'] = mempty;
	exports['monoidUnit'] = monoidUnit;
	exports['monoidString'] = monoidString;
	exports['monoidRecord'] = monoidRecord;
	exports['monoidRecordNil'] = monoidRecordNil;
	exports['monoidRecordCons'] = monoidRecordCons;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Monoid.Disj'] = $PS['Data.Monoid.Disj'] || {};
	var exports = $PS['Data.Monoid.Disj'];
	var Data_HeytingAlgebra = $PS['Data.HeytingAlgebra'];
	var Disj = function (x) {
		return x;
	};
	var semigroupDisj = function (dictHeytingAlgebra) {
		return {
			append: function (v) {
				return function (v1) {
					return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
				};
			},
		};
	};
	var monoidDisj = function (dictHeytingAlgebra) {
		return {
			mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
			Semigroup0: function () {
				return semigroupDisj(dictHeytingAlgebra);
			},
		};
	};
	exports['Disj'] = Disj;
	exports['monoidDisj'] = monoidDisj;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Foldable'] = $PS['Data.Foldable'] || {};
	var exports = $PS['Data.Foldable'];
	var $foreign = $PS['Data.Foldable'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Category = $PS['Control.Category'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_HeytingAlgebra = $PS['Data.HeytingAlgebra'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Monoid_Disj = $PS['Data.Monoid.Disj'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Unit = $PS['Data.Unit'];
	var foldr = function (dict) {
		return dict.foldr;
	};
	var traverse_ = function (dictApplicative) {
		return function (dictFoldable) {
			return function (f) {
				return foldr(dictFoldable)(
					(function () {
						var $314 = Control_Apply.applySecond(dictApplicative.Apply0());
						return function ($315) {
							return $314(f($315));
						};
					})()
				)(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
			};
		};
	};
	var for_ = function (dictApplicative) {
		return function (dictFoldable) {
			return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
		};
	};
	var sequence_ = function (dictApplicative) {
		return function (dictFoldable) {
			return traverse_(dictApplicative)(dictFoldable)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	var foldl = function (dict) {
		return dict.foldl;
	};
	var intercalate = function (dictFoldable) {
		return function (dictMonoid) {
			return function (sep) {
				return function (xs) {
					var go = function (v) {
						return function (x) {
							if (v.init) {
								return {
									init: false,
									acc: x,
								};
							}
							return {
								init: false,
								acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(
									Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x)
								),
							};
						};
					};
					return foldl(dictFoldable)(go)({
						init: true,
						acc: Data_Monoid.mempty(dictMonoid),
					})(xs).acc;
				};
			};
		};
	};
	var foldableMaybe = {
		foldr: function (v) {
			return function (z) {
				return function (v1) {
					if (v1 instanceof Data_Maybe.Nothing) {
						return z;
					}
					if (v1 instanceof Data_Maybe.Just) {
						return v(v1.value0)(z);
					}
					throw new Error(
						'Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): ' +
							[v.constructor.name, z.constructor.name, v1.constructor.name]
					);
				};
			};
		},
		foldl: function (v) {
			return function (z) {
				return function (v1) {
					if (v1 instanceof Data_Maybe.Nothing) {
						return z;
					}
					if (v1 instanceof Data_Maybe.Just) {
						return v(z)(v1.value0);
					}
					throw new Error(
						'Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): ' +
							[v.constructor.name, z.constructor.name, v1.constructor.name]
					);
				};
			};
		},
		foldMap: function (dictMonoid) {
			return function (f) {
				return function (v) {
					if (v instanceof Data_Maybe.Nothing) {
						return Data_Monoid.mempty(dictMonoid);
					}
					if (v instanceof Data_Maybe.Just) {
						return f(v.value0);
					}
					throw new Error(
						'Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): ' +
							[f.constructor.name, v.constructor.name]
					);
				};
			};
		},
	};
	var foldMapDefaultR = function (dictFoldable) {
		return function (dictMonoid) {
			return function (f) {
				return foldr(dictFoldable)(function (x) {
					return function (acc) {
						return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
					};
				})(Data_Monoid.mempty(dictMonoid));
			};
		};
	};
	var foldableArray = {
		foldr: $foreign.foldrArray,
		foldl: $foreign.foldlArray,
		foldMap: function (dictMonoid) {
			return foldMapDefaultR(foldableArray)(dictMonoid);
		},
	};
	var foldMap = function (dict) {
		return dict.foldMap;
	};
	var fold = function (dictFoldable) {
		return function (dictMonoid) {
			return foldMap(dictFoldable)(dictMonoid)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	var any = function (dictFoldable) {
		return function (dictHeytingAlgebra) {
			return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(
				foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))
			);
		};
	};
	var elem = function (dictFoldable) {
		return function (dictEq) {
			var $324 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
			var $325 = Data_Eq.eq(dictEq);
			return function ($326) {
				return $324($325($326));
			};
		};
	};
	exports['foldr'] = foldr;
	exports['foldl'] = foldl;
	exports['foldMap'] = foldMap;
	exports['fold'] = fold;
	exports['traverse_'] = traverse_;
	exports['for_'] = for_;
	exports['sequence_'] = sequence_;
	exports['intercalate'] = intercalate;
	exports['elem'] = elem;
	exports['foldableArray'] = foldableArray;
	exports['foldableMaybe'] = foldableMaybe;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Parallel'] = $PS['Control.Parallel'] || {};
	var exports = $PS['Control.Parallel'];
	var Control_Category = $PS['Control.Category'];
	var Control_Parallel_Class = $PS['Control.Parallel.Class'];
	var Data_Foldable = $PS['Data.Foldable'];
	var parTraverse_ = function (dictParallel) {
		return function (dictFoldable) {
			return function (f) {
				var $17 = Control_Parallel_Class.sequential(dictParallel);
				var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(
					dictFoldable
				)(
					(function () {
						var $20 = Control_Parallel_Class.parallel(dictParallel);
						return function ($21) {
							return $20(f($21));
						};
					})()
				);
				return function ($19) {
					return $17($18($19));
				};
			};
		};
	};
	var parSequence_ = function (dictParallel) {
		return function (dictFoldable) {
			return parTraverse_(dictParallel)(dictFoldable)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	exports['parSequence_'] = parSequence_;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Plus'] = $PS['Control.Plus'] || {};
	var exports = $PS['Control.Plus'];
	var empty = function (dict) {
		return dict.empty;
	};
	exports['empty'] = empty;
})(PS);
(function (exports) {
	// module Control.Promise

	exports.promise = function (f) {
		return function () {
			return new Promise(function (success, error) {
				var succF = function (s) {
					return function () {
						return success(s);
					};
				};
				var failF = function (s) {
					return function () {
						return error(s);
					};
				};

				// This indicates the aff was wrong?
				try {
					f(succF)(failF)();
				} catch (e) {
					error(e);
				}
			});
		};
	};

	exports.thenImpl = function (promise) {
		return function (errCB) {
			return function (succCB) {
				return function () {
					promise.then(succCB, errCB);
				};
			};
		};
	};
})((PS['Control.Promise'] = PS['Control.Promise'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.FoldableWithIndex'] = $PS['Data.FoldableWithIndex'] || {};
	var exports = $PS['Data.FoldableWithIndex'];
	var foldrWithIndex = function (dict) {
		return dict.foldrWithIndex;
	};
	var foldlWithIndex = function (dict) {
		return dict.foldlWithIndex;
	};
	exports['foldrWithIndex'] = foldrWithIndex;
	exports['foldlWithIndex'] = foldlWithIndex;
})(PS);
(function (exports) {
	'use strict';

	exports.mapWithIndexArray = function (f) {
		return function (xs) {
			var l = xs.length;
			var result = Array(l);
			for (var i = 0; i < l; i++) {
				result[i] = f(i)(xs[i]);
			}
			return result;
		};
	};
})((PS['Data.FunctorWithIndex'] = PS['Data.FunctorWithIndex'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.FunctorWithIndex'] = $PS['Data.FunctorWithIndex'] || {};
	var exports = $PS['Data.FunctorWithIndex'];
	var $foreign = $PS['Data.FunctorWithIndex'];
	var Data_Functor = $PS['Data.Functor'];
	var mapWithIndex = function (dict) {
		return dict.mapWithIndex;
	};
	var functorWithIndexArray = {
		mapWithIndex: $foreign.mapWithIndexArray,
		Functor0: function () {
			return Data_Functor.functorArray;
		},
	};
	exports['mapWithIndex'] = mapWithIndex;
	exports['functorWithIndexArray'] = functorWithIndexArray;
})(PS);
(function (exports) {
	'use strict';

	exports.showIntImpl = function (n) {
		return n.toString();
	};

	exports.showCharImpl = function (c) {
		var code = c.charCodeAt(0);
		if (code < 0x20 || code === 0x7f) {
			switch (c) {
				case '\x07':
					return "'\\a'";
				case '\b':
					return "'\\b'";
				case '\f':
					return "'\\f'";
				case '\n':
					return "'\\n'";
				case '\r':
					return "'\\r'";
				case '\t':
					return "'\\t'";
				case '\v':
					return "'\\v'";
			}
			return "'\\" + code.toString(10) + "'";
		}
		return c === "'" || c === '\\' ? "'\\" + c + "'" : "'" + c + "'";
	};

	exports.showStringImpl = function (s) {
		var l = s.length;
		return (
			'"' +
			s.replace(
				/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
				function (c, i) {
					switch (c) {
						case '"':
						case '\\':
							return '\\' + c;
						case '\x07':
							return '\\a';
						case '\b':
							return '\\b';
						case '\f':
							return '\\f';
						case '\n':
							return '\\n';
						case '\r':
							return '\\r';
						case '\t':
							return '\\t';
						case '\v':
							return '\\v';
					}
					var k = i + 1;
					var empty = k < l && s[k] >= '0' && s[k] <= '9' ? '\\&' : '';
					return '\\' + c.charCodeAt(0).toString(10) + empty;
				}
			) +
			'"'
		);
	};

	exports.cons = function (head) {
		return function (tail) {
			return [head].concat(tail);
		};
	};

	exports.join = function (separator) {
		return function (xs) {
			return xs.join(separator);
		};
	};
})((PS['Data.Show'] = PS['Data.Show'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Show'] = $PS['Data.Show'] || {};
	var exports = $PS['Data.Show'];
	var $foreign = $PS['Data.Show'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Type_Proxy = $PS['Type.Proxy'];
	var showString = {
		show: $foreign.showStringImpl,
	};
	var showRecordFieldsNil = {
		showRecordFields: function (v) {
			return function (v1) {
				return [];
			};
		},
	};
	var showRecordFields = function (dict) {
		return dict.showRecordFields;
	};
	var showRecord = function (dictRowToList) {
		return function (dictShowRecordFields) {
			return {
				show: function (record) {
					var v = showRecordFields(dictShowRecordFields)(
						Type_Proxy['Proxy'].value
					)(record);
					if (v.length === 0) {
						return '{}';
					}
					return $foreign.join(' ')(['{', $foreign.join(', ')(v), '}']);
				},
			};
		};
	};
	var showInt = {
		show: $foreign.showIntImpl,
	};
	var showChar = {
		show: $foreign.showCharImpl,
	};
	var show = function (dict) {
		return dict.show;
	};
	var showRecordFieldsCons = function (dictIsSymbol) {
		return function (dictShowRecordFields) {
			return function (dictShow) {
				return {
					showRecordFields: function (v) {
						return function (record) {
							var tail = showRecordFields(dictShowRecordFields)(
								Type_Proxy['Proxy'].value
							)(record);
							var key = Data_Symbol.reflectSymbol(dictIsSymbol)(
								Type_Proxy['Proxy'].value
							);
							var focus = Record_Unsafe.unsafeGet(key)(record);
							return $foreign.cons(
								$foreign.join(': ')([key, show(dictShow)(focus)])
							)(tail);
						};
					},
				};
			};
		};
	};
	exports['show'] = show;
	exports['showInt'] = showInt;
	exports['showChar'] = showChar;
	exports['showString'] = showString;
	exports['showRecord'] = showRecord;
	exports['showRecordFieldsNil'] = showRecordFieldsNil;
	exports['showRecordFieldsCons'] = showRecordFieldsCons;
})(PS);
(function (exports) {
	'use strict';

	// jshint maxparams: 3

	exports.traverseArrayImpl = (function () {
		function array1(a) {
			return [a];
		}

		function array2(a) {
			return function (b) {
				return [a, b];
			};
		}

		function array3(a) {
			return function (b) {
				return function (c) {
					return [a, b, c];
				};
			};
		}

		function concat2(xs) {
			return function (ys) {
				return xs.concat(ys);
			};
		}

		return function (apply) {
			return function (map) {
				return function (pure) {
					return function (f) {
						return function (array) {
							function go(bot, top) {
								switch (top - bot) {
									case 0:
										return pure([]);
									case 1:
										return map(array1)(f(array[bot]));
									case 2:
										return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
									case 3:
										return apply(
											apply(map(array3)(f(array[bot])))(f(array[bot + 1]))
										)(f(array[bot + 2]));
									default:
										// This slightly tricky pivot selection aims to produce two
										// even-length partitions where possible.
										var pivot = bot + Math.floor((top - bot) / 4) * 2;
										return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
								}
							}
							return go(0, array.length);
						};
					};
				};
			};
		};
	})();
})((PS['Data.Traversable'] = PS['Data.Traversable'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Traversable'] = $PS['Data.Traversable'] || {};
	var exports = $PS['Data.Traversable'];
	var $foreign = $PS['Data.Traversable'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Category = $PS['Control.Category'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var traverse = function (dict) {
		return dict.traverse;
	};
	var sequenceDefault = function (dictTraversable) {
		return function (dictApplicative) {
			return traverse(dictTraversable)(dictApplicative)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	var traversableArray = {
		traverse: function (dictApplicative) {
			return $foreign.traverseArrayImpl(
				Control_Apply.apply(dictApplicative.Apply0())
			)(Data_Functor.map(dictApplicative.Apply0().Functor0()))(
				Control_Applicative.pure(dictApplicative)
			);
		},
		sequence: function (dictApplicative) {
			return sequenceDefault(traversableArray)(dictApplicative);
		},
		Functor0: function () {
			return Data_Functor.functorArray;
		},
		Foldable1: function () {
			return Data_Foldable.foldableArray;
		},
	};
	var sequence = function (dict) {
		return dict.sequence;
	};
	exports['traverse'] = traverse;
	exports['sequence'] = sequence;
	exports['traversableArray'] = traversableArray;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.NonEmpty'] = $PS['Data.NonEmpty'] || {};
	var exports = $PS['Data.NonEmpty'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Plus = $PS['Control.Plus'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Show = $PS['Data.Show'];
	var Data_Traversable = $PS['Data.Traversable'];
	var NonEmpty = (function () {
		function NonEmpty(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		NonEmpty.create = function (value0) {
			return function (value1) {
				return new NonEmpty(value0, value1);
			};
		};
		return NonEmpty;
	})();
	var singleton = function (dictPlus) {
		return function (a) {
			return new NonEmpty(a, Control_Plus.empty(dictPlus));
		};
	};
	var showNonEmpty = function (dictShow) {
		return function (dictShow1) {
			return {
				show: function (v) {
					return (
						'(NonEmpty ' +
						(Data_Show.show(dictShow)(v.value0) +
							(' ' + (Data_Show.show(dictShow1)(v.value1) + ')')))
					);
				},
			};
		};
	};
	var functorNonEmpty = function (dictFunctor) {
		return {
			map: function (f) {
				return function (m) {
					return new NonEmpty(
						f(m.value0),
						Data_Functor.map(dictFunctor)(f)(m.value1)
					);
				};
			},
		};
	};
	var functorWithIndex = function (dictFunctorWithIndex) {
		return {
			mapWithIndex: function (f) {
				return function (v) {
					return new NonEmpty(
						f(Data_Maybe.Nothing.value)(v.value0),
						Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function (
							$151
						) {
							return f(Data_Maybe.Just.create($151));
						})(v.value1)
					);
				};
			},
			Functor0: function () {
				return functorNonEmpty(dictFunctorWithIndex.Functor0());
			},
		};
	};
	var foldableNonEmpty = function (dictFoldable) {
		return {
			foldMap: function (dictMonoid) {
				return function (f) {
					return function (v) {
						return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(
							Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1)
						);
					};
				};
			},
			foldl: function (f) {
				return function (b) {
					return function (v) {
						return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(
							v.value1
						);
					};
				};
			},
			foldr: function (f) {
				return function (b) {
					return function (v) {
						return f(v.value0)(
							Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1)
						);
					};
				};
			},
		};
	};
	var traversableNonEmpty = function (dictTraversable) {
		return {
			sequence: function (dictApplicative) {
				return function (v) {
					return Control_Apply.apply(dictApplicative.Apply0())(
						Data_Functor.map(dictApplicative.Apply0().Functor0())(
							NonEmpty.create
						)(v.value0)
					)(
						Data_Traversable.sequence(dictTraversable)(dictApplicative)(
							v.value1
						)
					);
				};
			},
			traverse: function (dictApplicative) {
				return function (f) {
					return function (v) {
						return Control_Apply.apply(dictApplicative.Apply0())(
							Data_Functor.map(dictApplicative.Apply0().Functor0())(
								NonEmpty.create
							)(f(v.value0))
						)(
							Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(
								v.value1
							)
						);
					};
				};
			},
			Functor0: function () {
				return functorNonEmpty(dictTraversable.Functor0());
			},
			Foldable1: function () {
				return foldableNonEmpty(dictTraversable.Foldable1());
			},
		};
	};
	exports['NonEmpty'] = NonEmpty;
	exports['singleton'] = singleton;
	exports['showNonEmpty'] = showNonEmpty;
	exports['functorNonEmpty'] = functorNonEmpty;
	exports['functorWithIndex'] = functorWithIndex;
	exports['foldableNonEmpty'] = foldableNonEmpty;
	exports['traversableNonEmpty'] = traversableNonEmpty;
})(PS);
(function (exports) {
	'use strict';

	exports.intAdd = function (x) {
		return function (y) {
			/* jshint bitwise: false */
			return (x + y) | 0;
		};
	};

	exports.intMul = function (x) {
		return function (y) {
			/* jshint bitwise: false */
			return (x * y) | 0;
		};
	};

	exports.numAdd = function (n1) {
		return function (n2) {
			return n1 + n2;
		};
	};

	exports.numMul = function (n1) {
		return function (n2) {
			return n1 * n2;
		};
	};
})((PS['Data.Semiring'] = PS['Data.Semiring'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Semiring'] = $PS['Data.Semiring'] || {};
	var exports = $PS['Data.Semiring'];
	var $foreign = $PS['Data.Semiring'];
	var semiringNumber = {
		add: $foreign.numAdd,
		zero: 0.0,
		mul: $foreign.numMul,
		one: 1.0,
	};
	var semiringInt = {
		add: $foreign.intAdd,
		zero: 0,
		mul: $foreign.intMul,
		one: 1,
	};
	var mul = function (dict) {
		return dict.mul;
	};
	var add = function (dict) {
		return dict.add;
	};
	exports['add'] = add;
	exports['mul'] = mul;
	exports['semiringInt'] = semiringInt;
	exports['semiringNumber'] = semiringNumber;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.List.Types'] = $PS['Data.List.Types'] || {};
	var exports = $PS['Data.List.Types'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_FoldableWithIndex = $PS['Data.FoldableWithIndex'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Semiring = $PS['Data.Semiring'];
	var Data_Show = $PS['Data.Show'];
	var Data_Traversable = $PS['Data.Traversable'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Nil = (function () {
		function Nil() {}
		Nil.value = new Nil();
		return Nil;
	})();
	var Cons = (function () {
		function Cons(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		Cons.create = function (value0) {
			return function (value1) {
				return new Cons(value0, value1);
			};
		};
		return Cons;
	})();
	var NonEmptyList = function (x) {
		return x;
	};
	var toList = function (v) {
		return new Cons(v.value0, v.value1);
	};
	var listMap = function (f) {
		var chunkedRevMap = function ($copy_chunksAcc) {
			return function ($copy_v) {
				var $tco_var_chunksAcc = $copy_chunksAcc;
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(chunksAcc, v) {
					if (
						v instanceof Cons &&
						v.value1 instanceof Cons &&
						v.value1.value1 instanceof Cons
					) {
						$tco_var_chunksAcc = new Cons(v, chunksAcc);
						$copy_v = v.value1.value1.value1;
						return;
					}
					var unrolledMap = function (v1) {
						if (
							v1 instanceof Cons &&
							v1.value1 instanceof Cons &&
							v1.value1.value1 instanceof Nil
						) {
							return new Cons(
								f(v1.value0),
								new Cons(f(v1.value1.value0), Nil.value)
							);
						}
						if (v1 instanceof Cons && v1.value1 instanceof Nil) {
							return new Cons(f(v1.value0), Nil.value);
						}
						return Nil.value;
					};
					var reverseUnrolledMap = function ($copy_v1) {
						return function ($copy_acc) {
							var $tco_var_v1 = $copy_v1;
							var $tco_done1 = false;
							var $tco_result;
							function $tco_loop(v1, acc) {
								if (
									v1 instanceof Cons &&
									v1.value0 instanceof Cons &&
									v1.value0.value1 instanceof Cons &&
									v1.value0.value1.value1 instanceof Cons
								) {
									$tco_var_v1 = v1.value1;
									$copy_acc = new Cons(
										f(v1.value0.value0),
										new Cons(
											f(v1.value0.value1.value0),
											new Cons(f(v1.value0.value1.value1.value0), acc)
										)
									);
									return;
								}
								$tco_done1 = true;
								return acc;
							}
							while (!$tco_done1) {
								$tco_result = $tco_loop($tco_var_v1, $copy_acc);
							}
							return $tco_result;
						};
					};
					$tco_done = true;
					return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
				}
				return $tco_result;
			};
		};
		return chunkedRevMap(Nil.value);
	};
	var functorList = {
		map: listMap,
	};
	var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
	var foldableList = {
		foldr: function (f) {
			return function (b) {
				var rev = (function () {
					var go = function ($copy_acc) {
						return function ($copy_v) {
							var $tco_var_acc = $copy_acc;
							var $tco_done = false;
							var $tco_result;
							function $tco_loop(acc, v) {
								if (v instanceof Nil) {
									$tco_done = true;
									return acc;
								}
								if (v instanceof Cons) {
									$tco_var_acc = new Cons(v.value0, acc);
									$copy_v = v.value1;
									return;
								}
								throw new Error(
									'Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): ' +
										[acc.constructor.name, v.constructor.name]
								);
							}
							while (!$tco_done) {
								$tco_result = $tco_loop($tco_var_acc, $copy_v);
							}
							return $tco_result;
						};
					};
					return go(Nil.value);
				})();
				var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
				return function ($205) {
					return $204(rev($205));
				};
			};
		},
		foldl: function (f) {
			var go = function ($copy_b) {
				return function ($copy_v) {
					var $tco_var_b = $copy_b;
					var $tco_done1 = false;
					var $tco_result;
					function $tco_loop(b, v) {
						if (v instanceof Nil) {
							$tco_done1 = true;
							return b;
						}
						if (v instanceof Cons) {
							$tco_var_b = f(b)(v.value0);
							$copy_v = v.value1;
							return;
						}
						throw new Error(
							'Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): ' +
								[v.constructor.name]
						);
					}
					while (!$tco_done1) {
						$tco_result = $tco_loop($tco_var_b, $copy_v);
					}
					return $tco_result;
				};
			};
			return go;
		},
		foldMap: function (dictMonoid) {
			return function (f) {
				return Data_Foldable.foldl(foldableList)(function (acc) {
					var $206 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
					return function ($207) {
						return $206(f($207));
					};
				})(Data_Monoid.mempty(dictMonoid));
			};
		},
	};
	var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
	var foldableWithIndexList = {
		foldrWithIndex: function (f) {
			return function (b) {
				return function (xs) {
					var v = (function () {
						var rev = Data_Foldable.foldl(foldableList)(function (v1) {
							return function (a) {
								return new Data_Tuple.Tuple(
									(v1.value0 + 1) | 0,
									new Cons(a, v1.value1)
								);
							};
						});
						return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
					})();
					return Data_Tuple.snd(
						Data_Foldable.foldl(foldableList)(function (v1) {
							return function (a) {
								return new Data_Tuple.Tuple(
									(v1.value0 - 1) | 0,
									f((v1.value0 - 1) | 0)(a)(v1.value1)
								);
							};
						})(new Data_Tuple.Tuple(v.value0, b))(v.value1)
					);
				};
			};
		},
		foldlWithIndex: function (f) {
			return function (acc) {
				var $208 = Data_Foldable.foldl(foldableList)(function (v) {
					return function (a) {
						return new Data_Tuple.Tuple(
							(v.value0 + 1) | 0,
							f(v.value0)(v.value1)(a)
						);
					};
				})(new Data_Tuple.Tuple(0, acc));
				return function ($209) {
					return Data_Tuple.snd($208($209));
				};
			};
		},
		foldMapWithIndex: function (dictMonoid) {
			return function (f) {
				return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(
					function (i) {
						return function (acc) {
							var $210 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
							var $211 = f(i);
							return function ($212) {
								return $210($211($212));
							};
						};
					}
				)(Data_Monoid.mempty(dictMonoid));
			};
		},
		Foldable0: function () {
			return foldableList;
		},
	};
	var functorWithIndexList = {
		mapWithIndex: function (f) {
			return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(
				function (i) {
					return function (x) {
						return function (acc) {
							return new Cons(f(i)(x), acc);
						};
					};
				}
			)(Nil.value);
		},
		Functor0: function () {
			return functorList;
		},
	};
	var functorWithIndexNonEmptyList = {
		mapWithIndex: function (fn) {
			return function (v) {
				return NonEmptyList(
					Data_FunctorWithIndex.mapWithIndex(
						Data_NonEmpty.functorWithIndex(functorWithIndexList)
					)(
						(function () {
							var $219 = Data_Maybe.maybe(0)(
								Data_Semiring.add(Data_Semiring.semiringInt)(1)
							);
							return function ($220) {
								return fn($219($220));
							};
						})()
					)(v)
				);
			};
		},
		Functor0: function () {
			return functorNonEmptyList;
		},
	};
	var semigroupList = {
		append: function (xs) {
			return function (ys) {
				return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
			};
		},
	};
	var monoidList = {
		mempty: Nil.value,
		Semigroup0: function () {
			return semigroupList;
		},
	};
	var semigroupNonEmptyList = {
		append: function (v) {
			return function (as$prime) {
				return new Data_NonEmpty.NonEmpty(
					v.value0,
					Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime))
				);
			};
		},
	};
	var showList = function (dictShow) {
		return {
			show: function (v) {
				if (v instanceof Nil) {
					return 'Nil';
				}
				return (
					'(' +
					(Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(
						' : '
					)(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) +
						' : Nil)')
				);
			},
		};
	};
	var showNonEmptyList = function (dictShow) {
		return {
			show: function (v) {
				return (
					'(NonEmptyList ' +
					(Data_Show.show(
						Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow))
					)(v) +
						')')
				);
			},
		};
	};
	var traversableList = {
		traverse: function (dictApplicative) {
			return function (f) {
				var $221 = Data_Functor.map(dictApplicative.Apply0().Functor0())(
					Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(
						Nil.value
					)
				);
				var $222 = Data_Foldable.foldl(foldableList)(function (acc) {
					var $224 = Control_Apply.lift2(dictApplicative.Apply0())(
						Data_Function.flip(Cons.create)
					)(acc);
					return function ($225) {
						return $224(f($225));
					};
				})(Control_Applicative.pure(dictApplicative)(Nil.value));
				return function ($223) {
					return $221($222($223));
				};
			};
		},
		sequence: function (dictApplicative) {
			return Data_Traversable.traverse(traversableList)(dictApplicative)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		},
		Functor0: function () {
			return functorList;
		},
		Foldable1: function () {
			return foldableList;
		},
	};
	var traversableNonEmptyList =
		Data_NonEmpty.traversableNonEmpty(traversableList);
	var unfoldable1List = {
		unfoldr1: function (f) {
			return function (b) {
				var go = function ($copy_source) {
					return function ($copy_memo) {
						var $tco_var_source = $copy_source;
						var $tco_done = false;
						var $tco_result;
						function $tco_loop(source, memo) {
							var v = f(source);
							if (v.value1 instanceof Data_Maybe.Just) {
								$tco_var_source = v.value1.value0;
								$copy_memo = new Cons(v.value0, memo);
								return;
							}
							if (v.value1 instanceof Data_Maybe.Nothing) {
								$tco_done = true;
								return Data_Foldable.foldl(foldableList)(
									Data_Function.flip(Cons.create)
								)(Nil.value)(new Cons(v.value0, memo));
							}
							throw new Error(
								'Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): ' +
									[v.constructor.name]
							);
						}
						while (!$tco_done) {
							$tco_result = $tco_loop($tco_var_source, $copy_memo);
						}
						return $tco_result;
					};
				};
				return go(b)(Nil.value);
			};
		},
	};
	var unfoldableList = {
		unfoldr: function (f) {
			return function (b) {
				var go = function ($copy_source) {
					return function ($copy_memo) {
						var $tco_var_source = $copy_source;
						var $tco_done = false;
						var $tco_result;
						function $tco_loop(source, memo) {
							var v = f(source);
							if (v instanceof Data_Maybe.Nothing) {
								$tco_done = true;
								return Data_Foldable.foldl(foldableList)(
									Data_Function.flip(Cons.create)
								)(Nil.value)(memo);
							}
							if (v instanceof Data_Maybe.Just) {
								$tco_var_source = v.value0.value1;
								$copy_memo = new Cons(v.value0.value0, memo);
								return;
							}
							throw new Error(
								'Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): ' +
									[v.constructor.name]
							);
						}
						while (!$tco_done) {
							$tco_result = $tco_loop($tco_var_source, $copy_memo);
						}
						return $tco_result;
					};
				};
				return go(b)(Nil.value);
			};
		},
		Unfoldable10: function () {
			return unfoldable1List;
		},
	};
	var eq1List = {
		eq1: function (dictEq) {
			return function (xs) {
				return function (ys) {
					var go = function ($copy_v) {
						return function ($copy_v1) {
							return function ($copy_v2) {
								var $tco_var_v = $copy_v;
								var $tco_var_v1 = $copy_v1;
								var $tco_done = false;
								var $tco_result;
								function $tco_loop(v, v1, v2) {
									if (!v2) {
										$tco_done = true;
										return false;
									}
									if (v instanceof Nil && v1 instanceof Nil) {
										$tco_done = true;
										return v2;
									}
									if (v instanceof Cons && v1 instanceof Cons) {
										$tco_var_v = v.value1;
										$tco_var_v1 = v1.value1;
										$copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
										return;
									}
									$tco_done = true;
									return false;
								}
								while (!$tco_done) {
									$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
								}
								return $tco_result;
							};
						};
					};
					return go(xs)(ys)(true);
				};
			};
		},
	};
	var eqList = function (dictEq) {
		return {
			eq: Data_Eq.eq1(eq1List)(dictEq),
		};
	};
	var ord1List = {
		compare1: function (dictOrd) {
			return function (xs) {
				return function (ys) {
					var go = function ($copy_v) {
						return function ($copy_v1) {
							var $tco_var_v = $copy_v;
							var $tco_done = false;
							var $tco_result;
							function $tco_loop(v, v1) {
								if (v instanceof Nil && v1 instanceof Nil) {
									$tco_done = true;
									return Data_Ordering.EQ.value;
								}
								if (v instanceof Nil) {
									$tco_done = true;
									return Data_Ordering.LT.value;
								}
								if (v1 instanceof Nil) {
									$tco_done = true;
									return Data_Ordering.GT.value;
								}
								if (v instanceof Cons && v1 instanceof Cons) {
									var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
									if (v2 instanceof Data_Ordering.EQ) {
										$tco_var_v = v.value1;
										$copy_v1 = v1.value1;
										return;
									}
									$tco_done = true;
									return v2;
								}
								throw new Error(
									'Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): ' +
										[v.constructor.name, v1.constructor.name]
								);
							}
							while (!$tco_done) {
								$tco_result = $tco_loop($tco_var_v, $copy_v1);
							}
							return $tco_result;
						};
					};
					return go(xs)(ys);
				};
			};
		},
		Eq10: function () {
			return eq1List;
		},
	};
	var ordList = function (dictOrd) {
		return {
			compare: Data_Ord.compare1(ord1List)(dictOrd),
			Eq0: function () {
				return eqList(dictOrd.Eq0());
			},
		};
	};
	var applyList = {
		apply: function (v) {
			return function (v1) {
				if (v instanceof Nil) {
					return Nil.value;
				}
				if (v instanceof Cons) {
					return Data_Semigroup.append(semigroupList)(
						Data_Functor.map(functorList)(v.value0)(v1)
					)(Control_Apply.apply(applyList)(v.value1)(v1));
				}
				throw new Error(
					'Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		},
		Functor0: function () {
			return functorList;
		},
	};
	var applyNonEmptyList = {
		apply: function (v) {
			return function (v1) {
				return new Data_NonEmpty.NonEmpty(
					v.value0(v1.value0),
					Data_Semigroup.append(semigroupList)(
						Control_Apply.apply(applyList)(v.value1)(
							new Cons(v1.value0, Nil.value)
						)
					)(
						Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(
							v1.value1
						)
					)
				);
			};
		},
		Functor0: function () {
			return functorNonEmptyList;
		},
	};
	var bindList = {
		bind: function (v) {
			return function (v1) {
				if (v instanceof Nil) {
					return Nil.value;
				}
				if (v instanceof Cons) {
					return Data_Semigroup.append(semigroupList)(v1(v.value0))(
						Control_Bind.bind(bindList)(v.value1)(v1)
					);
				}
				throw new Error(
					'Failed pattern match at Data.List.Types (line 165, column 1 - line 167, column 37): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		},
		Apply0: function () {
			return applyList;
		},
	};
	var bindNonEmptyList = {
		bind: function (v) {
			return function (f) {
				var v1 = f(v.value0);
				return new Data_NonEmpty.NonEmpty(
					v1.value0,
					Data_Semigroup.append(semigroupList)(v1.value1)(
						Control_Bind.bind(bindList)(v.value1)(function ($234) {
							return toList(f($234));
						})
					)
				);
			};
		},
		Apply0: function () {
			return applyNonEmptyList;
		},
	};
	var applicativeList = {
		pure: function (a) {
			return new Cons(a, Nil.value);
		},
		Apply0: function () {
			return applyList;
		},
	};
	var altList = {
		alt: Data_Semigroup.append(semigroupList),
		Functor0: function () {
			return functorList;
		},
	};
	var plusList = {
		empty: Nil.value,
		Alt0: function () {
			return altList;
		},
	};
	var applicativeNonEmptyList = {
		pure: (function () {
			var $235 = Data_NonEmpty.singleton(plusList);
			return function ($236) {
				return NonEmptyList($235($236));
			};
		})(),
		Apply0: function () {
			return applyNonEmptyList;
		},
	};
	exports['Nil'] = Nil;
	exports['Cons'] = Cons;
	exports['NonEmptyList'] = NonEmptyList;
	exports['ordList'] = ordList;
	exports['semigroupList'] = semigroupList;
	exports['monoidList'] = monoidList;
	exports['functorList'] = functorList;
	exports['foldableList'] = foldableList;
	exports['unfoldableList'] = unfoldableList;
	exports['applicativeList'] = applicativeList;
	exports['altList'] = altList;
	exports['plusList'] = plusList;
	exports['showNonEmptyList'] = showNonEmptyList;
	exports['functorNonEmptyList'] = functorNonEmptyList;
	exports['applicativeNonEmptyList'] = applicativeNonEmptyList;
	exports['bindNonEmptyList'] = bindNonEmptyList;
	exports['semigroupNonEmptyList'] = semigroupNonEmptyList;
	exports['foldableNonEmptyList'] = foldableNonEmptyList;
	exports['traversableNonEmptyList'] = traversableNonEmptyList;
	exports['functorWithIndexNonEmptyList'] = functorWithIndexNonEmptyList;
})(PS);
(function (exports) {
	'use strict';

	exports.pureE = function (a) {
		return function () {
			return a;
		};
	};

	exports.bindE = function (a) {
		return function (f) {
			return function () {
				return f(a())();
			};
		};
	};
})((PS['Effect'] = PS['Effect'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect'] = $PS['Effect'] || {};
	var exports = $PS['Effect'];
	var $foreign = $PS['Effect'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Monad = $PS['Control.Monad'];
	var monadEffect = {
		Applicative0: function () {
			return applicativeEffect;
		},
		Bind1: function () {
			return bindEffect;
		},
	};
	var bindEffect = {
		bind: $foreign.bindE,
		Apply0: function () {
			return applyEffect;
		},
	};
	var applyEffect = {
		apply: Control_Monad.ap(monadEffect),
		Functor0: function () {
			return functorEffect;
		},
	};
	var applicativeEffect = {
		pure: $foreign.pureE,
		Apply0: function () {
			return applyEffect;
		},
	};
	var functorEffect = {
		map: Control_Applicative.liftA1(applicativeEffect),
	};
	exports['functorEffect'] = functorEffect;
	exports['applyEffect'] = applyEffect;
	exports['applicativeEffect'] = applicativeEffect;
	exports['bindEffect'] = bindEffect;
})(PS);
(function (exports) {
	/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
	/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */
	'use strict';

	var Aff = (function () {
		// A unique value for empty.
		var EMPTY = {};

		/*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */
		var PURE = 'Pure';
		var THROW = 'Throw';
		var CATCH = 'Catch';
		var SYNC = 'Sync';
		var ASYNC = 'Async';
		var BIND = 'Bind';
		var BRACKET = 'Bracket';
		var FORK = 'Fork';
		var SEQ = 'Sequential';

		/*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */
		var MAP = 'Map';
		var APPLY = 'Apply';
		var ALT = 'Alt';

		// Various constructors used in interpretation
		var CONS = 'Cons'; // Cons-list, for stacks
		var RESUME = 'Resume'; // Continue indiscriminately
		var RELEASE = 'Release'; // Continue with bracket finalizers
		var FINALIZER = 'Finalizer'; // A non-interruptible effect
		var FINALIZED = 'Finalized'; // Marker for finalization
		var FORKED = 'Forked'; // Reference to a forked fiber, with resumption stack
		var FIBER = 'Fiber'; // Actual fiber reference
		var THUNK = 'Thunk'; // Primed effect, ready to invoke

		function Aff(tag, _1, _2, _3) {
			this.tag = tag;
			this._1 = _1;
			this._2 = _2;
			this._3 = _3;
		}

		function AffCtr(tag) {
			var fn = function (_1, _2, _3) {
				return new Aff(tag, _1, _2, _3);
			};
			fn.tag = tag;
			return fn;
		}

		function nonCanceler(error) {
			return new Aff(PURE, void 0);
		}

		function runEff(eff) {
			try {
				eff();
			} catch (error) {
				setTimeout(function () {
					throw error;
				}, 0);
			}
		}

		function runSync(left, right, eff) {
			try {
				return right(eff());
			} catch (error) {
				return left(error);
			}
		}

		function runAsync(left, eff, k) {
			try {
				return eff(k)();
			} catch (error) {
				k(left(error))();
				return nonCanceler;
			}
		}

		var Scheduler = (function () {
			var limit = 1024;
			var size = 0;
			var ix = 0;
			var queue = new Array(limit);
			var draining = false;

			function drain() {
				var thunk;
				draining = true;
				while (size !== 0) {
					size--;
					thunk = queue[ix];
					queue[ix] = void 0;
					ix = (ix + 1) % limit;
					thunk();
				}
				draining = false;
			}

			return {
				isDraining: function () {
					return draining;
				},
				enqueue: function (cb) {
					var i, tmp;
					if (size === limit) {
						tmp = draining;
						drain();
						draining = tmp;
					}

					queue[(ix + size) % limit] = cb;
					size++;

					if (!draining) {
						drain();
					}
				},
			};
		})();

		function Supervisor(util) {
			var fibers = {};
			var fiberId = 0;
			var count = 0;

			return {
				register: function (fiber) {
					var fid = fiberId++;
					fiber.onComplete({
						rethrow: true,
						handler: function (result) {
							return function () {
								count--;
								delete fibers[fid];
							};
						},
					})();
					fibers[fid] = fiber;
					count++;
				},
				isEmpty: function () {
					return count === 0;
				},
				killAll: function (killError, cb) {
					return function () {
						if (count === 0) {
							return cb();
						}

						var killCount = 0;
						var kills = {};

						function kill(fid) {
							kills[fid] = fibers[fid].kill(killError, function (result) {
								return function () {
									delete kills[fid];
									killCount--;
									if (util.isLeft(result) && util.fromLeft(result)) {
										setTimeout(function () {
											throw util.fromLeft(result);
										}, 0);
									}
									if (killCount === 0) {
										cb();
									}
								};
							})();
						}

						for (var k in fibers) {
							if (fibers.hasOwnProperty(k)) {
								killCount++;
								kill(k);
							}
						}

						fibers = {};
						fiberId = 0;
						count = 0;

						return function (error) {
							return new Aff(SYNC, function () {
								for (var k in kills) {
									if (kills.hasOwnProperty(k)) {
										kills[k]();
									}
								}
							});
						};
					};
				},
			};
		}

		// Fiber state machine
		var SUSPENDED = 0; // Suspended, pending a join.
		var CONTINUE = 1; // Interpret the next instruction.
		var STEP_BIND = 2; // Apply the next bind.
		var STEP_RESULT = 3; // Handle potential failure from a result.
		var PENDING = 4; // An async effect is running.
		var RETURN = 5; // The current stack has returned.
		var COMPLETED = 6; // The entire fiber has completed.

		function Fiber(util, supervisor, aff) {
			// Monotonically increasing tick, increased on each asynchronous turn.
			var runTick = 0;

			// The current branch of the state machine.
			var status = SUSPENDED;

			// The current point of interest for the state machine branch.
			var step = aff; // Successful step
			var fail = null; // Failure step
			var interrupt = null; // Asynchronous interrupt

			// Stack of continuations for the current fiber.
			var bhead = null;
			var btail = null;

			// Stack of attempts and finalizers for error recovery. Every `Cons` is also
			// tagged with current `interrupt` state. We use this to track which items
			// should be ignored or evaluated as a result of a kill.
			var attempts = null;

			// A special state is needed for Bracket, because it cannot be killed. When
			// we enter a bracket acquisition or finalizer, we increment the counter,
			// and then decrement once complete.
			var bracketCount = 0;

			// Each join gets a new id so they can be revoked.
			var joinId = 0;
			var joins = null;
			var rethrow = true;

			// Each invocation of `run` requires a tick. When an asynchronous effect is
			// resolved, we must check that the local tick coincides with the fiber
			// tick before resuming. This prevents multiple async continuations from
			// accidentally resuming the same fiber. A common example may be invoking
			// the provided callback in `makeAff` more than once, but it may also be an
			// async effect resuming after the fiber was already cancelled.
			function run(localRunTick) {
				var tmp, result, attempt;
				while (true) {
					tmp = null;
					result = null;
					attempt = null;

					switch (status) {
						case STEP_BIND:
							status = CONTINUE;
							try {
								step = bhead(step);
								if (btail === null) {
									bhead = null;
								} else {
									bhead = btail._1;
									btail = btail._2;
								}
							} catch (e) {
								status = RETURN;
								fail = util.left(e);
								step = null;
							}
							break;

						case STEP_RESULT:
							if (util.isLeft(step)) {
								status = RETURN;
								fail = step;
								step = null;
							} else if (bhead === null) {
								status = RETURN;
							} else {
								status = STEP_BIND;
								step = util.fromRight(step);
							}
							break;

						case CONTINUE:
							switch (step.tag) {
								case BIND:
									if (bhead) {
										btail = new Aff(CONS, bhead, btail);
									}
									bhead = step._2;
									status = CONTINUE;
									step = step._1;
									break;

								case PURE:
									if (bhead === null) {
										status = RETURN;
										step = util.right(step._1);
									} else {
										status = STEP_BIND;
										step = step._1;
									}
									break;

								case SYNC:
									status = STEP_RESULT;
									step = runSync(util.left, util.right, step._1);
									break;

								case ASYNC:
									status = PENDING;
									step = runAsync(util.left, step._1, function (result) {
										return function () {
											if (runTick !== localRunTick) {
												return;
											}
											runTick++;
											Scheduler.enqueue(function () {
												// It's possible to interrupt the fiber between enqueuing and
												// resuming, so we need to check that the runTick is still
												// valid.
												if (runTick !== localRunTick + 1) {
													return;
												}
												status = STEP_RESULT;
												step = result;
												run(runTick);
											});
										};
									});
									return;

								case THROW:
									status = RETURN;
									fail = util.left(step._1);
									step = null;
									break;

								// Enqueue the Catch so that we can call the error handler later on
								// in case of an exception.
								case CATCH:
									if (bhead === null) {
										attempts = new Aff(CONS, step, attempts, interrupt);
									} else {
										attempts = new Aff(
											CONS,
											step,
											new Aff(
												CONS,
												new Aff(RESUME, bhead, btail),
												attempts,
												interrupt
											),
											interrupt
										);
									}
									bhead = null;
									btail = null;
									status = CONTINUE;
									step = step._1;
									break;

								// Enqueue the Bracket so that we can call the appropriate handlers
								// after resource acquisition.
								case BRACKET:
									bracketCount++;
									if (bhead === null) {
										attempts = new Aff(CONS, step, attempts, interrupt);
									} else {
										attempts = new Aff(
											CONS,
											step,
											new Aff(
												CONS,
												new Aff(RESUME, bhead, btail),
												attempts,
												interrupt
											),
											interrupt
										);
									}
									bhead = null;
									btail = null;
									status = CONTINUE;
									step = step._1;
									break;

								case FORK:
									status = STEP_RESULT;
									tmp = Fiber(util, supervisor, step._2);
									if (supervisor) {
										supervisor.register(tmp);
									}
									if (step._1) {
										tmp.run();
									}
									step = util.right(tmp);
									break;

								case SEQ:
									status = CONTINUE;
									step = sequential(util, supervisor, step._1);
									break;
							}
							break;

						case RETURN:
							bhead = null;
							btail = null;
							// If the current stack has returned, and we have no other stacks to
							// resume or finalizers to run, the fiber has halted and we can
							// invoke all join callbacks. Otherwise we need to resume.
							if (attempts === null) {
								status = COMPLETED;
								step = interrupt || fail || step;
							} else {
								// The interrupt status for the enqueued item.
								tmp = attempts._3;
								attempt = attempts._1;
								attempts = attempts._2;

								switch (attempt.tag) {
									// We cannot recover from an unmasked interrupt. Otherwise we should
									// continue stepping, or run the exception handler if an exception
									// was raised.
									case CATCH:
										// We should compare the interrupt status as well because we
										// only want it to apply if there has been an interrupt since
										// enqueuing the catch.
										if (interrupt && interrupt !== tmp && bracketCount === 0) {
											status = RETURN;
										} else if (fail) {
											status = CONTINUE;
											step = attempt._2(util.fromLeft(fail));
											fail = null;
										}
										break;

									// We cannot resume from an unmasked interrupt or exception.
									case RESUME:
										// As with Catch, we only want to ignore in the case of an
										// interrupt since enqueing the item.
										if (
											(interrupt && interrupt !== tmp && bracketCount === 0) ||
											fail
										) {
											status = RETURN;
										} else {
											bhead = attempt._1;
											btail = attempt._2;
											status = STEP_BIND;
											step = util.fromRight(step);
										}
										break;

									// If we have a bracket, we should enqueue the handlers,
									// and continue with the success branch only if the fiber has
									// not been interrupted. If the bracket acquisition failed, we
									// should not run either.
									case BRACKET:
										bracketCount--;
										if (fail === null) {
											result = util.fromRight(step);
											// We need to enqueue the Release with the same interrupt
											// status as the Bracket that is initiating it.
											attempts = new Aff(
												CONS,
												new Aff(RELEASE, attempt._2, result),
												attempts,
												tmp
											);
											// We should only coninue as long as the interrupt status has not changed or
											// we are currently within a non-interruptable finalizer.
											if (interrupt === tmp || bracketCount > 0) {
												status = CONTINUE;
												step = attempt._3(result);
											}
										}
										break;

									// Enqueue the appropriate handler. We increase the bracket count
									// because it should not be cancelled.
									case RELEASE:
										attempts = new Aff(
											CONS,
											new Aff(FINALIZED, step, fail),
											attempts,
											interrupt
										);
										status = CONTINUE;
										// It has only been killed if the interrupt status has changed
										// since we enqueued the item, and the bracket count is 0. If the
										// bracket count is non-zero then we are in a masked state so it's
										// impossible to be killed.
										if (interrupt && interrupt !== tmp && bracketCount === 0) {
											step = attempt._1.killed(util.fromLeft(interrupt))(
												attempt._2
											);
										} else if (fail) {
											step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
										} else {
											step = attempt._1.completed(util.fromRight(step))(
												attempt._2
											);
										}
										fail = null;
										bracketCount++;
										break;

									case FINALIZER:
										bracketCount++;
										attempts = new Aff(
											CONS,
											new Aff(FINALIZED, step, fail),
											attempts,
											interrupt
										);
										status = CONTINUE;
										step = attempt._1;
										break;

									case FINALIZED:
										bracketCount--;
										status = RETURN;
										step = attempt._1;
										fail = attempt._2;
										break;
								}
							}
							break;

						case COMPLETED:
							for (var k in joins) {
								if (joins.hasOwnProperty(k)) {
									rethrow = rethrow && joins[k].rethrow;
									runEff(joins[k].handler(step));
								}
							}
							joins = null;
							// If we have an interrupt and a fail, then the thread threw while
							// running finalizers. This should always rethrow in a fresh stack.
							if (interrupt && fail) {
								setTimeout(function () {
									throw util.fromLeft(fail);
								}, 0);
								// If we have an unhandled exception, and no other fiber has joined
								// then we need to throw the exception in a fresh stack.
							} else if (util.isLeft(step) && rethrow) {
								setTimeout(function () {
									// Guard on reathrow because a completely synchronous fiber can
									// still have an observer which was added after-the-fact.
									if (rethrow) {
										throw util.fromLeft(step);
									}
								}, 0);
							}
							return;
						case SUSPENDED:
							status = CONTINUE;
							break;
						case PENDING:
							return;
					}
				}
			}

			function onComplete(join) {
				return function () {
					if (status === COMPLETED) {
						rethrow = rethrow && join.rethrow;
						join.handler(step)();
						return function () {};
					}

					var jid = joinId++;
					joins = joins || {};
					joins[jid] = join;

					return function () {
						if (joins !== null) {
							delete joins[jid];
						}
					};
				};
			}

			function kill(error, cb) {
				return function () {
					if (status === COMPLETED) {
						cb(util.right(void 0))();
						return function () {};
					}

					var canceler = onComplete({
						rethrow: false,
						handler: function (/* unused */) {
							return cb(util.right(void 0));
						},
					})();

					switch (status) {
						case SUSPENDED:
							interrupt = util.left(error);
							status = COMPLETED;
							step = interrupt;
							run(runTick);
							break;
						case PENDING:
							if (interrupt === null) {
								interrupt = util.left(error);
							}
							if (bracketCount === 0) {
								if (status === PENDING) {
									attempts = new Aff(
										CONS,
										new Aff(FINALIZER, step(error)),
										attempts,
										interrupt
									);
								}
								status = RETURN;
								step = null;
								fail = null;
								run(++runTick);
							}
							break;
						default:
							if (interrupt === null) {
								interrupt = util.left(error);
							}
							if (bracketCount === 0) {
								status = RETURN;
								step = null;
								fail = null;
							}
					}

					return canceler;
				};
			}

			function join(cb) {
				return function () {
					var canceler = onComplete({
						rethrow: false,
						handler: cb,
					})();
					if (status === SUSPENDED) {
						run(runTick);
					}
					return canceler;
				};
			}

			return {
				kill: kill,
				join: join,
				onComplete: onComplete,
				isSuspended: function () {
					return status === SUSPENDED;
				},
				run: function () {
					if (status === SUSPENDED) {
						if (!Scheduler.isDraining()) {
							Scheduler.enqueue(function () {
								run(runTick);
							});
						} else {
							run(runTick);
						}
					}
				},
			};
		}

		function runPar(util, supervisor, par, cb) {
			// Table of all forked fibers.
			var fiberId = 0;
			var fibers = {};

			// Table of currently running cancelers, as a product of `Alt` behavior.
			var killId = 0;
			var kills = {};

			// Error used for early cancelation on Alt branches.
			var early = new Error('[ParAff] Early exit');

			// Error used to kill the entire tree.
			var interrupt = null;

			// The root pointer of the tree.
			var root = EMPTY;

			// Walks a tree, invoking all the cancelers. Returns the table of pending
			// cancellation fibers.
			function kill(error, par, cb) {
				var step = par;
				var head = null;
				var tail = null;
				var count = 0;
				var kills = {};
				var tmp, kid;

				loop: while (true) {
					tmp = null;

					switch (step.tag) {
						case FORKED:
							if (step._3 === EMPTY) {
								tmp = fibers[step._1];
								kills[count++] = tmp.kill(error, function (result) {
									return function () {
										count--;
										if (count === 0) {
											cb(result)();
										}
									};
								});
							}
							// Terminal case.
							if (head === null) {
								break loop;
							}
							// Go down the right side of the tree.
							step = head._2;
							if (tail === null) {
								head = null;
							} else {
								head = tail._1;
								tail = tail._2;
							}
							break;
						case MAP:
							step = step._2;
							break;
						case APPLY:
						case ALT:
							if (head) {
								tail = new Aff(CONS, head, tail);
							}
							head = step;
							step = step._1;
							break;
					}
				}

				if (count === 0) {
					cb(util.right(void 0))();
				} else {
					// Run the cancelation effects. We alias `count` because it's mutable.
					kid = 0;
					tmp = count;
					for (; kid < tmp; kid++) {
						kills[kid] = kills[kid]();
					}
				}

				return kills;
			}

			// When a fiber resolves, we need to bubble back up the tree with the
			// result, computing the applicative nodes.
			function join(result, head, tail) {
				var fail, step, lhs, rhs, tmp, kid;

				if (util.isLeft(result)) {
					fail = result;
					step = null;
				} else {
					step = result;
					fail = null;
				}

				loop: while (true) {
					lhs = null;
					rhs = null;
					tmp = null;
					kid = null;

					// We should never continue if the entire tree has been interrupted.
					if (interrupt !== null) {
						return;
					}

					// We've made it all the way to the root of the tree, which means
					// the tree has fully evaluated.
					if (head === null) {
						cb(fail || step)();
						return;
					}

					// The tree has already been computed, so we shouldn't try to do it
					// again. This should never happen.
					// TODO: Remove this?
					if (head._3 !== EMPTY) {
						return;
					}

					switch (head.tag) {
						case MAP:
							if (fail === null) {
								head._3 = util.right(head._1(util.fromRight(step)));
								step = head._3;
							} else {
								head._3 = fail;
							}
							break;
						case APPLY:
							lhs = head._1._3;
							rhs = head._2._3;
							// If we have a failure we should kill the other side because we
							// can't possible yield a result anymore.
							if (fail) {
								head._3 = fail;
								tmp = true;
								kid = killId++;

								kills[kid] = kill(
									early,
									fail === lhs ? head._2 : head._1,
									function (/* unused */) {
										return function () {
											delete kills[kid];
											if (tmp) {
												tmp = false;
											} else if (tail === null) {
												join(fail, null, null);
											} else {
												join(fail, tail._1, tail._2);
											}
										};
									}
								);

								if (tmp) {
									tmp = false;
									return;
								}
							} else if (lhs === EMPTY || rhs === EMPTY) {
								// We can only proceed if both sides have resolved.
								return;
							} else {
								step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
								head._3 = step;
							}
							break;
						case ALT:
							lhs = head._1._3;
							rhs = head._2._3;
							// We can only proceed if both have resolved or we have a success
							if (
								(lhs === EMPTY && util.isLeft(rhs)) ||
								(rhs === EMPTY && util.isLeft(lhs))
							) {
								return;
							}
							// If both sides resolve with an error, we should continue with the
							// first error
							if (
								lhs !== EMPTY &&
								util.isLeft(lhs) &&
								rhs !== EMPTY &&
								util.isLeft(rhs)
							) {
								fail = step === lhs ? rhs : lhs;
								step = null;
								head._3 = fail;
							} else {
								head._3 = step;
								tmp = true;
								kid = killId++;
								// Once a side has resolved, we need to cancel the side that is still
								// pending before we can continue.
								kills[kid] = kill(
									early,
									step === lhs ? head._2 : head._1,
									function (/* unused */) {
										return function () {
											delete kills[kid];
											if (tmp) {
												tmp = false;
											} else if (tail === null) {
												join(step, null, null);
											} else {
												join(step, tail._1, tail._2);
											}
										};
									}
								);

								if (tmp) {
									tmp = false;
									return;
								}
							}
							break;
					}

					if (tail === null) {
						head = null;
					} else {
						head = tail._1;
						tail = tail._2;
					}
				}
			}

			function resolve(fiber) {
				return function (result) {
					return function () {
						delete fibers[fiber._1];
						fiber._3 = result;
						join(result, fiber._2._1, fiber._2._2);
					};
				};
			}

			// Walks the applicative tree, substituting non-applicative nodes with
			// `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
			// as a mutable slot for memoization. In an unresolved state, the `_3`
			// slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
			// the left side first, because both operations are left-associative. As
			// we `RETURN` from those branches, we then walk the right side.
			function run() {
				var status = CONTINUE;
				var step = par;
				var head = null;
				var tail = null;
				var tmp, fid;

				loop: while (true) {
					tmp = null;
					fid = null;

					switch (status) {
						case CONTINUE:
							switch (step.tag) {
								case MAP:
									if (head) {
										tail = new Aff(CONS, head, tail);
									}
									head = new Aff(MAP, step._1, EMPTY, EMPTY);
									step = step._2;
									break;
								case APPLY:
									if (head) {
										tail = new Aff(CONS, head, tail);
									}
									head = new Aff(APPLY, EMPTY, step._2, EMPTY);
									step = step._1;
									break;
								case ALT:
									if (head) {
										tail = new Aff(CONS, head, tail);
									}
									head = new Aff(ALT, EMPTY, step._2, EMPTY);
									step = step._1;
									break;
								default:
									// When we hit a leaf value, we suspend the stack in the `FORKED`.
									// When the fiber resolves, it can bubble back up the tree.
									fid = fiberId++;
									status = RETURN;
									tmp = step;
									step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
									tmp = Fiber(util, supervisor, tmp);
									tmp.onComplete({
										rethrow: false,
										handler: resolve(step),
									})();
									fibers[fid] = tmp;
									if (supervisor) {
										supervisor.register(tmp);
									}
							}
							break;
						case RETURN:
							// Terminal case, we are back at the root.
							if (head === null) {
								break loop;
							}
							// If we are done with the right side, we need to continue down the
							// left. Otherwise we should continue up the stack.
							if (head._1 === EMPTY) {
								head._1 = step;
								status = CONTINUE;
								step = head._2;
								head._2 = EMPTY;
							} else {
								head._2 = step;
								step = head;
								if (tail === null) {
									head = null;
								} else {
									head = tail._1;
									tail = tail._2;
								}
							}
					}
				}

				// Keep a reference to the tree root so it can be cancelled.
				root = step;

				for (fid = 0; fid < fiberId; fid++) {
					fibers[fid].run();
				}
			}

			// Cancels the entire tree. If there are already subtrees being canceled,
			// we need to first cancel those joins. We will then add fresh joins for
			// all pending branches including those that were in the process of being
			// canceled.
			function cancel(error, cb) {
				interrupt = util.left(error);
				var innerKills;
				for (var kid in kills) {
					if (kills.hasOwnProperty(kid)) {
						innerKills = kills[kid];
						for (kid in innerKills) {
							if (innerKills.hasOwnProperty(kid)) {
								innerKills[kid]();
							}
						}
					}
				}

				kills = null;
				var newKills = kill(error, root, cb);

				return function (killError) {
					return new Aff(ASYNC, function (killCb) {
						return function () {
							for (var kid in newKills) {
								if (newKills.hasOwnProperty(kid)) {
									newKills[kid]();
								}
							}
							return nonCanceler;
						};
					});
				};
			}

			run();

			return function (killError) {
				return new Aff(ASYNC, function (killCb) {
					return function () {
						return cancel(killError, killCb);
					};
				});
			};
		}

		function sequential(util, supervisor, par) {
			return new Aff(ASYNC, function (cb) {
				return function () {
					return runPar(util, supervisor, par, cb);
				};
			});
		}

		Aff.EMPTY = EMPTY;
		Aff.Pure = AffCtr(PURE);
		Aff.Throw = AffCtr(THROW);
		Aff.Catch = AffCtr(CATCH);
		Aff.Sync = AffCtr(SYNC);
		Aff.Async = AffCtr(ASYNC);
		Aff.Bind = AffCtr(BIND);
		Aff.Bracket = AffCtr(BRACKET);
		Aff.Fork = AffCtr(FORK);
		Aff.Seq = AffCtr(SEQ);
		Aff.ParMap = AffCtr(MAP);
		Aff.ParApply = AffCtr(APPLY);
		Aff.ParAlt = AffCtr(ALT);
		Aff.Fiber = Fiber;
		Aff.Supervisor = Supervisor;
		Aff.Scheduler = Scheduler;
		Aff.nonCanceler = nonCanceler;

		return Aff;
	})();

	exports._pure = Aff.Pure;

	exports._throwError = Aff.Throw;

	exports._catchError = function (aff) {
		return function (k) {
			return Aff.Catch(aff, k);
		};
	};

	exports._map = function (f) {
		return function (aff) {
			if (aff.tag === Aff.Pure.tag) {
				return Aff.Pure(f(aff._1));
			} else {
				return Aff.Bind(aff, function (value) {
					return Aff.Pure(f(value));
				});
			}
		};
	};

	exports._bind = function (aff) {
		return function (k) {
			return Aff.Bind(aff, k);
		};
	};

	exports._liftEffect = Aff.Sync;

	exports._parAffMap = function (f) {
		return function (aff) {
			return Aff.ParMap(f, aff);
		};
	};

	exports._parAffApply = function (aff1) {
		return function (aff2) {
			return Aff.ParApply(aff1, aff2);
		};
	};

	exports.makeAff = Aff.Async;

	exports._makeFiber = function (util, aff) {
		return function () {
			return Aff.Fiber(util, null, aff);
		};
	};

	exports._delay = (function () {
		function setDelay(n, k) {
			if (n === 0 && typeof setImmediate !== 'undefined') {
				return setImmediate(k);
			} else {
				return setTimeout(k, n);
			}
		}

		function clearDelay(n, t) {
			if (n === 0 && typeof clearImmediate !== 'undefined') {
				return clearImmediate(t);
			} else {
				return clearTimeout(t);
			}
		}

		return function (right, ms) {
			return Aff.Async(function (cb) {
				return function () {
					var timer = setDelay(ms, cb(right()));
					return function () {
						return Aff.Sync(function () {
							return right(clearDelay(ms, timer));
						});
					};
				};
			});
		};
	})();

	exports._sequential = Aff.Seq;
})((PS['Effect.Aff'] = PS['Effect.Aff'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Class'] = $PS['Effect.Class'] || {};
	var exports = $PS['Effect.Class'];
	var liftEffect = function (dict) {
		return dict.liftEffect;
	};
	exports['liftEffect'] = liftEffect;
})(PS);
(function (exports) {
	'use strict';

	// module Partial.Unsafe

	exports._unsafePartial = function (f) {
		return f();
	};
})((PS['Partial.Unsafe'] = PS['Partial.Unsafe'] || {}));
(function (exports) {
	'use strict';

	// module Partial

	exports._crashWith = function (msg) {
		throw new Error(msg);
	};
})((PS['Partial'] = PS['Partial'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Partial'] = $PS['Partial'] || {};
	var exports = $PS['Partial'];
	var $foreign = $PS['Partial'];
	var crashWith = function (dictPartial) {
		return $foreign['_crashWith'];
	};
	exports['crashWith'] = crashWith;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Partial.Unsafe'] = $PS['Partial.Unsafe'] || {};
	var exports = $PS['Partial.Unsafe'];
	var $foreign = $PS['Partial.Unsafe'];
	var Partial = $PS['Partial'];
	var unsafePartial = $foreign['_unsafePartial'];
	var unsafeCrashWith = function (msg) {
		return unsafePartial(function (dictPartial) {
			return Partial.crashWith()(msg);
		});
	};
	exports['unsafeCrashWith'] = unsafeCrashWith;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Aff'] = $PS['Effect.Aff'] || {};
	var exports = $PS['Effect.Aff'];
	var $foreign = $PS['Effect.Aff'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad = $PS['Control.Monad'];
	var Control_Monad_Error_Class = $PS['Control.Monad.Error.Class'];
	var Control_Parallel = $PS['Control.Parallel'];
	var Control_Parallel_Class = $PS['Control.Parallel.Class'];
	var Data_Either = $PS['Data.Either'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Unit = $PS['Data.Unit'];
	var Effect = $PS['Effect'];
	var Effect_Class = $PS['Effect.Class'];
	var Partial_Unsafe = $PS['Partial.Unsafe'];
	var Unsafe_Coerce = $PS['Unsafe.Coerce'];
	var functorParAff = {
		map: $foreign['_parAffMap'],
	};
	var functorAff = {
		map: $foreign['_map'],
	};
	var ffiUtil = (function () {
		var unsafeFromRight = function (v) {
			if (v instanceof Data_Either.Right) {
				return v.value0;
			}
			if (v instanceof Data_Either.Left) {
				return Partial_Unsafe.unsafeCrashWith('unsafeFromRight: Left');
			}
			throw new Error(
				'Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): ' +
					[v.constructor.name]
			);
		};
		var unsafeFromLeft = function (v) {
			if (v instanceof Data_Either.Left) {
				return v.value0;
			}
			if (v instanceof Data_Either.Right) {
				return Partial_Unsafe.unsafeCrashWith('unsafeFromLeft: Right');
			}
			throw new Error(
				'Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): ' +
					[v.constructor.name]
			);
		};
		var isLeft = function (v) {
			if (v instanceof Data_Either.Left) {
				return true;
			}
			if (v instanceof Data_Either.Right) {
				return false;
			}
			throw new Error(
				'Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): ' +
					[v.constructor.name]
			);
		};
		return {
			isLeft: isLeft,
			fromLeft: unsafeFromLeft,
			fromRight: unsafeFromRight,
			left: Data_Either.Left.create,
			right: Data_Either.Right.create,
		};
	})();
	var makeFiber = function (aff) {
		return $foreign['_makeFiber'](ffiUtil, aff);
	};
	var launchAff = function (aff) {
		return function __do() {
			var fiber = makeFiber(aff)();
			fiber.run();
			return fiber;
		};
	};
	var delay = function (v) {
		return $foreign['_delay'](Data_Either.Right.create, v);
	};
	var applyParAff = {
		apply: $foreign['_parAffApply'],
		Functor0: function () {
			return functorParAff;
		},
	};
	var monadAff = {
		Applicative0: function () {
			return applicativeAff;
		},
		Bind1: function () {
			return bindAff;
		},
	};
	var bindAff = {
		bind: $foreign['_bind'],
		Apply0: function () {
			return applyAff;
		},
	};
	var applyAff = {
		apply: Control_Monad.ap(monadAff),
		Functor0: function () {
			return functorAff;
		},
	};
	var applicativeAff = {
		pure: $foreign['_pure'],
		Apply0: function () {
			return applyAff;
		},
	};
	var monadEffectAff = {
		liftEffect: $foreign['_liftEffect'],
		Monad0: function () {
			return monadAff;
		},
	};
	var monadThrowAff = {
		throwError: $foreign['_throwError'],
		Monad0: function () {
			return monadAff;
		},
	};
	var monadErrorAff = {
		catchError: $foreign['_catchError'],
		MonadThrow0: function () {
			return monadThrowAff;
		},
	};
	var runAff = function (k) {
		return function (aff) {
			return launchAff(
				Control_Bind.bindFlipped(bindAff)(
					(function () {
						var $46 = Effect_Class.liftEffect(monadEffectAff);
						return function ($47) {
							return $46(k($47));
						};
					})()
				)(Control_Monad_Error_Class['try'](monadErrorAff)(aff))
			);
		};
	};
	var runAff_ = function (k) {
		return function (aff) {
			return Data_Functor['void'](Effect.functorEffect)(runAff(k)(aff));
		};
	};
	var parallelAff = {
		parallel: Unsafe_Coerce.unsafeCoerce,
		sequential: $foreign['_sequential'],
		Monad0: function () {
			return monadAff;
		},
		Applicative1: function () {
			return applicativeParAff;
		},
	};
	var applicativeParAff = {
		pure: (function () {
			var $50 = Control_Parallel_Class.parallel(parallelAff);
			var $51 = Control_Applicative.pure(applicativeAff);
			return function ($52) {
				return $50($51($52));
			};
		})(),
		Apply0: function () {
			return applyParAff;
		},
	};
	var semigroupCanceler = {
		append: function (v) {
			return function (v1) {
				return function (err) {
					return Control_Parallel.parSequence_(parallelAff)(
						Data_Foldable.foldableArray
					)([v(err), v1(err)]);
				};
			};
		},
	};
	var nonCanceler = Data_Function['const'](
		Control_Applicative.pure(applicativeAff)(Data_Unit.unit)
	);
	var monoidCanceler = {
		mempty: nonCanceler,
		Semigroup0: function () {
			return semigroupCanceler;
		},
	};
	exports['runAff_'] = runAff_;
	exports['delay'] = delay;
	exports['functorAff'] = functorAff;
	exports['applyAff'] = applyAff;
	exports['applicativeAff'] = applicativeAff;
	exports['bindAff'] = bindAff;
	exports['monadThrowAff'] = monadThrowAff;
	exports['monadErrorAff'] = monadErrorAff;
	exports['monadEffectAff'] = monadEffectAff;
	exports['applicativeParAff'] = applicativeParAff;
	exports['parallelAff'] = parallelAff;
	exports['monoidCanceler'] = monoidCanceler;
	exports['makeAff'] = $foreign.makeAff;
})(PS);
(function (exports) {
	'use strict';

	exports.showErrorImpl = function (err) {
		return err.stack || err.toString();
	};

	exports.error = function (msg) {
		return new Error(msg);
	};
})((PS['Effect.Exception'] = PS['Effect.Exception'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Exception'] = $PS['Effect.Exception'] || {};
	var exports = $PS['Effect.Exception'];
	var $foreign = $PS['Effect.Exception'];
	var showError = {
		show: $foreign.showErrorImpl,
	};
	exports['showError'] = showError;
	exports['error'] = $foreign.error;
})(PS);
(function (exports) {
	'use strict';

	exports.typeOf = function (value) {
		return typeof value;
	};

	exports.tagOf = function (value) {
		return Object.prototype.toString.call(value).slice(8, -1);
	};
})((PS['Foreign'] = PS['Foreign'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Boolean'] = $PS['Data.Boolean'] || {};
	var exports = $PS['Data.Boolean'];
	var otherwise = true;
	exports['otherwise'] = otherwise;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Bifunctor'] = $PS['Data.Bifunctor'] || {};
	var exports = $PS['Data.Bifunctor'];
	var Control_Category = $PS['Control.Category'];
	var Data_Either = $PS['Data.Either'];
	var bimap = function (dict) {
		return dict.bimap;
	};
	var lmap = function (dictBifunctor) {
		return function (f) {
			return bimap(dictBifunctor)(f)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	var bifunctorEither = {
		bimap: function (v) {
			return function (v1) {
				return function (v2) {
					if (v2 instanceof Data_Either.Left) {
						return new Data_Either.Left(v(v2.value0));
					}
					if (v2 instanceof Data_Either.Right) {
						return new Data_Either.Right(v1(v2.value0));
					}
					throw new Error(
						'Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): ' +
							[v.constructor.name, v1.constructor.name, v2.constructor.name]
					);
				};
			};
		},
	};
	exports['bimap'] = bimap;
	exports['lmap'] = lmap;
	exports['bifunctorEither'] = bifunctorEither;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.List'] = $PS['Data.List'] || {};
	var exports = $PS['Data.List'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Control_Monad_Rec_Class = $PS['Control.Monad.Rec.Class'];
	var Data_Bifunctor = $PS['Data.Bifunctor'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Unit = $PS['Data.Unit'];
	var singleton = function (a) {
		return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
	};
	var sortBy = function (cmp) {
		var merge = function (v) {
			return function (v1) {
				if (
					v instanceof Data_List_Types.Cons &&
					v1 instanceof Data_List_Types.Cons
				) {
					if (
						Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(
							Data_Ordering.GT.value
						)
					) {
						return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
					}
					if (Data_Boolean.otherwise) {
						return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
					}
				}
				if (v instanceof Data_List_Types.Nil) {
					return v1;
				}
				if (v1 instanceof Data_List_Types.Nil) {
					return v;
				}
				throw new Error(
					'Failed pattern match at Data.List (line 477, column 3 - line 477, column 38): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		};
		var mergePairs = function (v) {
			if (
				v instanceof Data_List_Types.Cons &&
				v.value1 instanceof Data_List_Types.Cons
			) {
				return new Data_List_Types.Cons(
					merge(v.value0)(v.value1.value0),
					mergePairs(v.value1.value1)
				);
			}
			return v;
		};
		var mergeAll = function ($copy_v) {
			var $tco_done = false;
			var $tco_result;
			function $tco_loop(v) {
				if (
					v instanceof Data_List_Types.Cons &&
					v.value1 instanceof Data_List_Types.Nil
				) {
					$tco_done = true;
					return v.value0;
				}
				$copy_v = mergePairs(v);
				return;
			}
			while (!$tco_done) {
				$tco_result = $tco_loop($copy_v);
			}
			return $tco_result;
		};
		var sequences = function (v) {
			if (
				v instanceof Data_List_Types.Cons &&
				v.value1 instanceof Data_List_Types.Cons
			) {
				if (
					Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(
						Data_Ordering.GT.value
					)
				) {
					return descending(v.value1.value0)(singleton(v.value0))(
						v.value1.value1
					);
				}
				if (Data_Boolean.otherwise) {
					return ascending(v.value1.value0)(function (v1) {
						return new Data_List_Types.Cons(v.value0, v1);
					})(v.value1.value1);
				}
			}
			return singleton(v);
		};
		var descending = function ($copy_a) {
			return function ($copy_as) {
				return function ($copy_v) {
					var $tco_var_a = $copy_a;
					var $tco_var_as = $copy_as;
					var $tco_done1 = false;
					var $tco_result;
					function $tco_loop(a, as, v) {
						if (
							v instanceof Data_List_Types.Cons &&
							Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(
								Data_Ordering.GT.value
							)
						) {
							$tco_var_a = v.value0;
							$tco_var_as = new Data_List_Types.Cons(a, as);
							$copy_v = v.value1;
							return;
						}
						$tco_done1 = true;
						return new Data_List_Types.Cons(
							new Data_List_Types.Cons(a, as),
							sequences(v)
						);
					}
					while (!$tco_done1) {
						$tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
					}
					return $tco_result;
				};
			};
		};
		var ascending = function ($copy_a) {
			return function ($copy_as) {
				return function ($copy_v) {
					var $tco_var_a = $copy_a;
					var $tco_var_as = $copy_as;
					var $tco_done2 = false;
					var $tco_result;
					function $tco_loop(a, as, v) {
						if (
							v instanceof Data_List_Types.Cons &&
							Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(
								Data_Ordering.GT.value
							)
						) {
							$tco_var_a = v.value0;
							$tco_var_as = function (ys) {
								return as(new Data_List_Types.Cons(a, ys));
							};
							$copy_v = v.value1;
							return;
						}
						$tco_done2 = true;
						return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
					}
					while (!$tco_done2) {
						$tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
					}
					return $tco_result;
				};
			};
		};
		return function ($344) {
			return mergeAll(sequences($344));
		};
	};
	var reverse = (function () {
		var go = function ($copy_acc) {
			return function ($copy_v) {
				var $tco_var_acc = $copy_acc;
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(acc, v) {
					if (v instanceof Data_List_Types.Nil) {
						$tco_done = true;
						return acc;
					}
					if (v instanceof Data_List_Types.Cons) {
						$tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
						$copy_v = v.value1;
						return;
					}
					throw new Error(
						'Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): ' +
							[acc.constructor.name, v.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($tco_var_acc, $copy_v);
				}
				return $tco_result;
			};
		};
		return go(Data_List_Types.Nil.value);
	})();
	var $$null = function (v) {
		if (v instanceof Data_List_Types.Nil) {
			return true;
		}
		return false;
	};
	var mapMaybe = function (f) {
		var go = function ($copy_acc) {
			return function ($copy_v) {
				var $tco_var_acc = $copy_acc;
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(acc, v) {
					if (v instanceof Data_List_Types.Nil) {
						$tco_done = true;
						return reverse(acc);
					}
					if (v instanceof Data_List_Types.Cons) {
						var v1 = f(v.value0);
						if (v1 instanceof Data_Maybe.Nothing) {
							$tco_var_acc = acc;
							$copy_v = v.value1;
							return;
						}
						if (v1 instanceof Data_Maybe.Just) {
							$tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
							$copy_v = v.value1;
							return;
						}
						throw new Error(
							'Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): ' +
								[v1.constructor.name]
						);
					}
					throw new Error(
						'Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): ' +
							[acc.constructor.name, v.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($tco_var_acc, $copy_v);
				}
				return $tco_result;
			};
		};
		return go(Data_List_Types.Nil.value);
	};
	var manyRec = function (dictMonadRec) {
		return function (dictAlternative) {
			return function (p) {
				var go = function (acc) {
					return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(
						Control_Alt.alt(dictAlternative.Plus1().Alt0())(
							Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(
								Control_Monad_Rec_Class.Loop.create
							)(p)
						)(
							Control_Applicative.pure(dictAlternative.Applicative0())(
								new Control_Monad_Rec_Class.Done(Data_Unit.unit)
							)
						)
					)(function (aa) {
						return Control_Applicative.pure(dictAlternative.Applicative0())(
							Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(
								function (v) {
									return new Data_List_Types.Cons(v, acc);
								}
							)(function (v) {
								return reverse(acc);
							})(aa)
						);
					});
				};
				return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(
					Data_List_Types.Nil.value
				);
			};
		};
	};
	var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (
		acc
	) {
		return function (v) {
			return (acc + 1) | 0;
		};
	})(0);
	var fromFoldable = function (dictFoldable) {
		return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(
			Data_List_Types.Nil.value
		);
	};
	var filter = function (p) {
		var go = function ($copy_acc) {
			return function ($copy_v) {
				var $tco_var_acc = $copy_acc;
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(acc, v) {
					if (v instanceof Data_List_Types.Nil) {
						$tco_done = true;
						return reverse(acc);
					}
					if (v instanceof Data_List_Types.Cons) {
						if (p(v.value0)) {
							$tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
							$copy_v = v.value1;
							return;
						}
						if (Data_Boolean.otherwise) {
							$tco_var_acc = acc;
							$copy_v = v.value1;
							return;
						}
					}
					throw new Error(
						'Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): ' +
							[acc.constructor.name, v.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($tco_var_acc, $copy_v);
				}
				return $tco_result;
			};
		};
		return go(Data_List_Types.Nil.value);
	};
	var catMaybes = mapMaybe(
		Control_Category.identity(Control_Category.categoryFn)
	);
	exports['fromFoldable'] = fromFoldable;
	exports['manyRec'] = manyRec;
	exports['null'] = $$null;
	exports['length'] = length;
	exports['filter'] = filter;
	exports['mapMaybe'] = mapMaybe;
	exports['catMaybes'] = catMaybes;
	exports['sortBy'] = sortBy;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.List.NonEmpty'] = $PS['Data.List.NonEmpty'] || {};
	var exports = $PS['Data.List.NonEmpty'];
	var Data_List = $PS['Data.List'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Partial_Unsafe = $PS['Partial.Unsafe'];
	var wrappedOperation = function (name) {
		return function (f) {
			return function (v) {
				var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
				if (v1 instanceof Data_List_Types.Cons) {
					return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
				}
				if (v1 instanceof Data_List_Types.Nil) {
					return Partial_Unsafe.unsafeCrashWith(
						'Impossible: empty list in NonEmptyList ' + name
					);
				}
				throw new Error(
					'Failed pattern match at Data.List.NonEmpty (line 97, column 3 - line 99, column 81): ' +
						[v1.constructor.name]
				);
			};
		};
	};
	var toList = function (v) {
		return new Data_List_Types.Cons(v.value0, v.value1);
	};
	var sortBy = (function () {
		var $170 = wrappedOperation('sortBy');
		return function ($171) {
			return $170(Data_List.sortBy($171));
		};
	})();
	var singleton = (function () {
		var $172 = Data_NonEmpty.singleton(Data_List_Types.plusList);
		return function ($173) {
			return Data_List_Types.NonEmptyList($172($173));
		};
	})();
	var length = function (v) {
		return (1 + Data_List.length(v.value1)) | 0;
	};
	var head = function (v) {
		return v.value0;
	};
	var fromList = function (v) {
		if (v instanceof Data_List_Types.Nil) {
			return Data_Maybe.Nothing.value;
		}
		if (v instanceof Data_List_Types.Cons) {
			return new Data_Maybe.Just(
				new Data_NonEmpty.NonEmpty(v.value0, v.value1)
			);
		}
		throw new Error(
			'Failed pattern match at Data.List.NonEmpty (line 126, column 1 - line 126, column 57): ' +
				[v.constructor.name]
		);
	};
	exports['fromList'] = fromList;
	exports['toList'] = toList;
	exports['singleton'] = singleton;
	exports['length'] = length;
	exports['head'] = head;
	exports['sortBy'] = sortBy;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Foreign'] = $PS['Foreign'] || {};
	var exports = $PS['Foreign'];
	var $foreign = $PS['Foreign'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Monad_Error_Class = $PS['Control.Monad.Error.Class'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_List_NonEmpty = $PS['Data.List.NonEmpty'];
	var Data_Show = $PS['Data.Show'];
	var Unsafe_Coerce = $PS['Unsafe.Coerce'];
	var ForeignError = (function () {
		function ForeignError(value0) {
			this.value0 = value0;
		}
		ForeignError.create = function (value0) {
			return new ForeignError(value0);
		};
		return ForeignError;
	})();
	var TypeMismatch = (function () {
		function TypeMismatch(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		TypeMismatch.create = function (value0) {
			return function (value1) {
				return new TypeMismatch(value0, value1);
			};
		};
		return TypeMismatch;
	})();
	var ErrorAtIndex = (function () {
		function ErrorAtIndex(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		ErrorAtIndex.create = function (value0) {
			return function (value1) {
				return new ErrorAtIndex(value0, value1);
			};
		};
		return ErrorAtIndex;
	})();
	var ErrorAtProperty = (function () {
		function ErrorAtProperty(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		ErrorAtProperty.create = function (value0) {
			return function (value1) {
				return new ErrorAtProperty(value0, value1);
			};
		};
		return ErrorAtProperty;
	})();
	var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
	var showForeignError = {
		show: function (v) {
			if (v instanceof ForeignError) {
				return (
					'(ForeignError ' +
					(Data_Show.show(Data_Show.showString)(v.value0) + ')')
				);
			}
			if (v instanceof ErrorAtIndex) {
				return (
					'(ErrorAtIndex ' +
					(Data_Show.show(Data_Show.showInt)(v.value0) +
						(' ' + (Data_Show.show(showForeignError)(v.value1) + ')')))
				);
			}
			if (v instanceof ErrorAtProperty) {
				return (
					'(ErrorAtProperty ' +
					(Data_Show.show(Data_Show.showString)(v.value0) +
						(' ' + (Data_Show.show(showForeignError)(v.value1) + ')')))
				);
			}
			if (v instanceof TypeMismatch) {
				return (
					'(TypeMismatch ' +
					(Data_Show.show(Data_Show.showString)(v.value0) +
						(' ' + (Data_Show.show(Data_Show.showString)(v.value1) + ')')))
				);
			}
			throw new Error(
				'Failed pattern match at Foreign (line 64, column 1 - line 68, column 89): ' +
					[v.constructor.name]
			);
		},
	};
	var fail = function (dictMonad) {
		var $118 = Control_Monad_Error_Class.throwError(
			Control_Monad_Except_Trans.monadThrowExceptT(dictMonad)
		);
		return function ($119) {
			return $118(Data_List_NonEmpty.singleton($119));
		};
	};
	var unsafeReadTagged = function (dictMonad) {
		return function (tag) {
			return function (value) {
				if ($foreign.tagOf(value) === tag) {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(dictMonad)
					)(unsafeFromForeign(value));
				}
				if (Data_Boolean.otherwise) {
					return fail(dictMonad)(new TypeMismatch(tag, $foreign.tagOf(value)));
				}
				throw new Error(
					'Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): ' +
						[tag.constructor.name, value.constructor.name]
				);
			};
		};
	};
	var readBoolean = function (dictMonad) {
		return unsafeReadTagged(dictMonad)('Boolean');
	};
	var readNumber = function (dictMonad) {
		return unsafeReadTagged(dictMonad)('Number');
	};
	var readString = function (dictMonad) {
		return unsafeReadTagged(dictMonad)('String');
	};
	exports['ForeignError'] = ForeignError;
	exports['TypeMismatch'] = TypeMismatch;
	exports['ErrorAtProperty'] = ErrorAtProperty;
	exports['unsafeReadTagged'] = unsafeReadTagged;
	exports['readString'] = readString;
	exports['readBoolean'] = readBoolean;
	exports['readNumber'] = readNumber;
	exports['fail'] = fail;
	exports['showForeignError'] = showForeignError;
	exports['typeOf'] = $foreign.typeOf;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Control.Promise'] = $PS['Control.Promise'] || {};
	var exports = $PS['Control.Promise'];
	var $foreign = $PS['Control.Promise'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Control_Monad_Except = $PS['Control.Monad.Except'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Data_Either = $PS['Data.Either'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Effect = $PS['Effect'];
	var Effect_Aff = $PS['Effect.Aff'];
	var Effect_Class = $PS['Effect.Class'];
	var Effect_Exception = $PS['Effect.Exception'];
	var Foreign = $PS['Foreign'];
	var toAff$prime = function (customCoerce) {
		return function (p) {
			return Effect_Aff.makeAff(function (cb) {
				return Data_Functor.voidRight(Effect.functorEffect)(
					Data_Monoid.mempty(Effect_Aff.monoidCanceler)
				)(
					$foreign.thenImpl(p)(function ($1) {
						console.error('makenna and mike look here', $1);
						return cb(Data_Either.Left.create(customCoerce($1)))();
					})(function ($2) {
						return cb(Data_Either.Right.create($2))();
					})
				);
			});
		};
	};
	var fromAff = function (aff) {
		return $foreign.promise(function (succ) {
			return function (err) {
				return Effect_Aff.runAff_(Data_Either.either(err)(succ))(aff);
			};
		});
	};
	var coerce = function (fn) {
		return Data_Either.either(function (v) {
			return Effect_Exception.error(
				"Promise failed, couldn't extract JS Error or String"
			);
		})(Control_Category.identity(Control_Category.categoryFn))(
			Control_Monad_Except.runExcept(
				Control_Alt.alt(
					Control_Monad_Except_Trans.altExceptT(
						Data_List_Types.semigroupNonEmptyList
					)(Data_Identity.monadIdentity)
				)(Foreign.unsafeReadTagged(Data_Identity.monadIdentity)('Error')(fn))(
					Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(Effect_Exception.error)(
						Foreign.readString(Data_Identity.monadIdentity)(fn)
					)
				)
			)
		);
	};
	var toAff = toAff$prime(coerce);
	var toAffE = function (f) {
		return Control_Bind.bind(Effect_Aff.bindAff)(
			Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f)
		)(toAff);
	};
	exports['fromAff'] = fromAff;
	exports['toAffE'] = toAffE;
})(PS);
(function (exports) {
	'use strict';

	exports.unsafeUnionFn = function (r1, r2) {
		var copy = {};
		for (var k1 in r2) {
			if ({}.hasOwnProperty.call(r2, k1)) {
				copy[k1] = r2[k1];
			}
		}
		for (var k2 in r1) {
			if ({}.hasOwnProperty.call(r1, k2)) {
				copy[k2] = r1[k2];
			}
		}
		return copy;
	};
})((PS['Record.Unsafe.Union'] = PS['Record.Unsafe.Union'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Record.Unsafe.Union'] = $PS['Record.Unsafe.Union'] || {};
	var exports = $PS['Record.Unsafe.Union'];
	var $foreign = $PS['Record.Unsafe.Union'];
	exports['unsafeUnionFn'] = $foreign.unsafeUnionFn;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Record'] = $PS['Record'] || {};
	var exports = $PS['Record'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Record_Unsafe = $PS['Record.Unsafe'];
	var Record_Unsafe_Union = $PS['Record.Unsafe.Union'];
	var union = function (dictUnion) {
		return function (l) {
			return function (r) {
				return Record_Unsafe_Union.unsafeUnionFn(l, r);
			};
		};
	};
	var set = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictCons1) {
				return function (l) {
					return function (b) {
						return function (r) {
							return Record_Unsafe.unsafeSet(
								Data_Symbol.reflectSymbol(dictIsSymbol)(l)
							)(b)(r);
						};
					};
				};
			};
		};
	};
	var merge = function (dictUnion) {
		return function (dictNub) {
			return function (l) {
				return function (r) {
					return Record_Unsafe_Union.unsafeUnionFn(l, r);
				};
			};
		};
	};
	var insert = function (dictIsSymbol) {
		return function (dictLacks) {
			return function (dictCons) {
				return function (l) {
					return function (a) {
						return function (r) {
							return Record_Unsafe.unsafeSet(
								Data_Symbol.reflectSymbol(dictIsSymbol)(l)
							)(a)(r);
						};
					};
				};
			};
		};
	};
	var get = function (dictIsSymbol) {
		return function (dictCons) {
			return function (l) {
				return function (r) {
					return Record_Unsafe.unsafeGet(
						Data_Symbol.reflectSymbol(dictIsSymbol)(l)
					)(r);
				};
			};
		};
	};
	exports['get'] = get;
	exports['set'] = set;
	exports['insert'] = insert;
	exports['merge'] = merge;
	exports['union'] = union;
})(PS);
(function (exports) {
	'use strict';

	exports.copyRecord = function (rec) {
		var copy = {};
		for (var key in rec) {
			if ({}.hasOwnProperty.call(rec, key)) {
				copy[key] = rec[key];
			}
		}
		return copy;
	};

	exports.unsafeInsert = function (l) {
		return function (a) {
			return function (rec) {
				rec[l] = a;
				return rec;
			};
		};
	};

	exports.unsafeModify = function (l) {
		return function (f) {
			return function (rec) {
				rec[l] = f(rec[l]);
				return rec;
			};
		};
	};

	exports.unsafeDelete = function (l) {
		return function (rec) {
			delete rec[l];
			return rec;
		};
	};
})((PS['Record.Builder'] = PS['Record.Builder'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Record.Builder'] = $PS['Record.Builder'] || {};
	var exports = $PS['Record.Builder'];
	var $foreign = $PS['Record.Builder'];
	var Control_Category = $PS['Control.Category'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Data_Function = $PS['Data.Function'];
	var Data_Symbol = $PS['Data.Symbol'];
	var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
	var modify = function (dictCons) {
		return function (dictCons1) {
			return function (dictIsSymbol) {
				return function (l) {
					return function (f) {
						return function (r1) {
							return $foreign.unsafeModify(
								Data_Symbol.reflectSymbol(dictIsSymbol)(l)
							)(f)(r1);
						};
					};
				};
			};
		};
	};
	var insert = function (dictCons) {
		return function (dictLacks) {
			return function (dictIsSymbol) {
				return function (l) {
					return function (a) {
						return function (r1) {
							return $foreign.unsafeInsert(
								Data_Symbol.reflectSymbol(dictIsSymbol)(l)
							)(a)(r1);
						};
					};
				};
			};
		};
	};
	var $$delete = function (dictIsSymbol) {
		return function (dictLacks) {
			return function (dictCons) {
				return function (l) {
					return function (r2) {
						return $foreign.unsafeDelete(
							Data_Symbol.reflectSymbol(dictIsSymbol)(l)
						)(r2);
					};
				};
			};
		};
	};
	var categoryBuilder = Control_Category.categoryFn;
	var build = function (v) {
		return function (r1) {
			return v($foreign.copyRecord(r1));
		};
	};
	var buildFromScratch = Data_Function.flip(build)({});
	var flip = function (f) {
		return function (b) {
			return function (a) {
				return build(f(a))(b);
			};
		};
	};
	exports['build'] = build;
	exports['buildFromScratch'] = buildFromScratch;
	exports['insert'] = insert;
	exports['modify'] = modify;
	exports['delete'] = $$delete;
	exports['semigroupoidBuilder'] = semigroupoidBuilder;
	exports['categoryBuilder'] = categoryBuilder;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['ConvertableOptions'] = $PS['ConvertableOptions'] || {};
	var exports = $PS['ConvertableOptions'];
	var Control_Category = $PS['Control.Category'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Data_Function = $PS['Data.Function'];
	var Record = $PS['Record'];
	var Record_Builder = $PS['Record.Builder'];
	var Type_Proxy = $PS['Type.Proxy'];
	var defaultsRecord = function (dictUnion) {
		return function (dictNub) {
			return {
				defaults: Data_Function.flip(Record.merge()()),
			};
		};
	};
	var defaults = function (dict) {
		return dict.defaults;
	};
	var convertRecordOptionsNil = {
		convertRecordOptions: function (v) {
			return function (v1) {
				return function (v2) {
					return Control_Category.identity(Record_Builder.categoryBuilder);
				};
			};
		},
	};
	var convertRecordOptions = function (dict) {
		return dict.convertRecordOptions;
	};
	var convertOptionsWithDefaults = function (dict) {
		return dict.convertOptionsWithDefaults;
	};
	var convertOptionsRecord = function (dictRowToList) {
		return function (dictConvertRecordOptions) {
			return {
				convertOptions: function (t) {
					return function (i) {
						return Record_Builder.buildFromScratch(
							convertRecordOptions(dictConvertRecordOptions)(t)(
								Type_Proxy['Proxy'].value
							)(i)
						);
					};
				},
			};
		};
	};
	var convertOptions = function (dict) {
		return dict.convertOptions;
	};
	var convertOptionsWithDefaultsRecord = function (dictConvertOptions) {
		return function (dictDefaults) {
			return {
				convertOptionsWithDefaults: function (t) {
					return function (def) {
						var $21 = defaults(dictDefaults)(def);
						var $22 = convertOptions(dictConvertOptions)(t);
						return function ($23) {
							return $21($22($23));
						};
					};
				},
			};
		};
	};
	var convertOption = function (dict) {
		return dict.convertOption;
	};
	var convertRecordOptionsCons = function (dictConvertRecordOptions) {
		return function (dictConvertOption) {
			return function (dictCons) {
				return function (dictCons1) {
					return function (dictLacks) {
						return function (dictIsSymbol) {
							return {
								convertRecordOptions: function (t) {
									return function (v) {
										return function (r) {
											return Control_Semigroupoid.compose(
												Record_Builder.semigroupoidBuilder
											)(
												Record_Builder.insert()()(dictIsSymbol)(
													Type_Proxy['Proxy'].value
												)(
													convertOption(dictConvertOption)(t)(
														Type_Proxy['Proxy'].value
													)(
														Record.get(dictIsSymbol)()(
															Type_Proxy['Proxy'].value
														)(r)
													)
												)
											)(
												convertRecordOptions(dictConvertRecordOptions)(t)(
													Type_Proxy['Proxy'].value
												)(r)
											);
										};
									};
								},
							};
						};
					};
				};
			};
		};
	};
	exports['convertOptionsWithDefaults'] = convertOptionsWithDefaults;
	exports['convertOptionsWithDefaultsRecord'] =
		convertOptionsWithDefaultsRecord;
	exports['convertRecordOptionsNil'] = convertRecordOptionsNil;
	exports['convertRecordOptionsCons'] = convertRecordOptionsCons;
	exports['convertOptionsRecord'] = convertOptionsRecord;
	exports['defaultsRecord'] = defaultsRecord;
})(PS);
(function (exports) {
	'use strict';

	//------------------------------------------------------------------------------
	// Array creation --------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.range = function (start) {
		return function (end) {
			var step = start > end ? -1 : 1;
			var result = new Array(step * (end - start) + 1);
			var i = start,
				n = 0;
			while (i !== end) {
				result[n++] = i;
				i += step;
			}
			result[n] = i;
			return result;
		};
	};

	exports.fromFoldableImpl = (function () {
		function Cons(head, tail) {
			this.head = head;
			this.tail = tail;
		}
		var emptyList = {};

		function curryCons(head) {
			return function (tail) {
				return new Cons(head, tail);
			};
		}

		function listToArray(list) {
			var result = [];
			var count = 0;
			var xs = list;
			while (xs !== emptyList) {
				result[count++] = xs.head;
				xs = xs.tail;
			}
			return result;
		}

		return function (foldr) {
			return function (xs) {
				return listToArray(foldr(curryCons)(emptyList)(xs));
			};
		};
	})();

	//------------------------------------------------------------------------------
	// Array size ------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.length = function (xs) {
		return xs.length;
	};

	//------------------------------------------------------------------------------
	// Indexed operations ----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.indexImpl = function (just) {
		return function (nothing) {
			return function (xs) {
				return function (i) {
					return i < 0 || i >= xs.length ? nothing : just(xs[i]);
				};
			};
		};
	};

	exports.findIndexImpl = function (just) {
		return function (nothing) {
			return function (f) {
				return function (xs) {
					for (var i = 0, l = xs.length; i < l; i++) {
						if (f(xs[i])) return just(i);
					}
					return nothing;
				};
			};
		};
	};

	exports._deleteAt = function (just) {
		return function (nothing) {
			return function (i) {
				return function (l) {
					if (i < 0 || i >= l.length) return nothing;
					var l1 = l.slice();
					l1.splice(i, 1);
					return just(l1);
				};
			};
		};
	};

	//------------------------------------------------------------------------------
	// Sorting ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.sortByImpl = (function () {
		function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
			var mid;
			var i;
			var j;
			var k;
			var x;
			var y;
			var c;

			mid = from + ((to - from) >> 1);
			if (mid - from > 1)
				mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
			if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);

			i = from;
			j = mid;
			k = from;
			while (i < mid && j < to) {
				x = xs2[i];
				y = xs2[j];
				c = fromOrdering(compare(x)(y));
				if (c > 0) {
					xs1[k++] = y;
					++j;
				} else {
					xs1[k++] = x;
					++i;
				}
			}
			while (i < mid) {
				xs1[k++] = xs2[i++];
			}
			while (j < to) {
				xs1[k++] = xs2[j++];
			}
		}

		return function (compare) {
			return function (fromOrdering) {
				return function (xs) {
					var out;

					if (xs.length < 2) return xs;

					out = xs.slice(0);
					mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);

					return out;
				};
			};
		};
	})();

	//------------------------------------------------------------------------------
	// Subarrays -------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.slice = function (s) {
		return function (e) {
			return function (l) {
				return l.slice(s, e);
			};
		};
	};

	//------------------------------------------------------------------------------
	// Zipping ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.zipWith = function (f) {
		return function (xs) {
			return function (ys) {
				var l = xs.length < ys.length ? xs.length : ys.length;
				var result = new Array(l);
				for (var i = 0; i < l; i++) {
					result[i] = f(xs[i])(ys[i]);
				}
				return result;
			};
		};
	};

	//------------------------------------------------------------------------------
	// Partial ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.unsafeIndexImpl = function (xs) {
		return function (n) {
			return xs[n];
		};
	};
})((PS['Data.Array'] = PS['Data.Array'] || {}));
(function (exports) {
	'use strict';

	exports.unfoldrArrayImpl = function (isNothing) {
		return function (fromJust) {
			return function (fst) {
				return function (snd) {
					return function (f) {
						return function (b) {
							var result = [];
							var value = b;
							while (true) {
								// eslint-disable-line no-constant-condition
								var maybe = f(value);
								if (isNothing(maybe)) return result;
								var tuple = fromJust(maybe);
								result.push(fst(tuple));
								value = snd(tuple);
							}
						};
					};
				};
			};
		};
	};
})((PS['Data.Unfoldable'] = PS['Data.Unfoldable'] || {}));
(function (exports) {
	'use strict';

	exports.unfoldr1ArrayImpl = function (isNothing) {
		return function (fromJust) {
			return function (fst) {
				return function (snd) {
					return function (f) {
						return function (b) {
							var result = [];
							var value = b;
							while (true) {
								// eslint-disable-line no-constant-condition
								var tuple = f(value);
								result.push(fst(tuple));
								var maybe = snd(tuple);
								if (isNothing(maybe)) return result;
								value = fromJust(maybe);
							}
						};
					};
				};
			};
		};
	};
})((PS['Data.Unfoldable1'] = PS['Data.Unfoldable1'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Unfoldable1'] = $PS['Data.Unfoldable1'] || {};
	var exports = $PS['Data.Unfoldable1'];
	var $foreign = $PS['Data.Unfoldable1'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Tuple = $PS['Data.Tuple'];
	var unfoldable1Array = {
		unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(
			Data_Maybe.fromJust()
		)(Data_Tuple.fst)(Data_Tuple.snd),
	};
	exports['unfoldable1Array'] = unfoldable1Array;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Unfoldable'] = $PS['Data.Unfoldable'] || {};
	var exports = $PS['Data.Unfoldable'];
	var $foreign = $PS['Data.Unfoldable'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable1 = $PS['Data.Unfoldable1'];
	var unfoldr = function (dict) {
		return dict.unfoldr;
	};
	var unfoldableArray = {
		unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(
			Data_Maybe.fromJust()
		)(Data_Tuple.fst)(Data_Tuple.snd),
		Unfoldable10: function () {
			return Data_Unfoldable1.unfoldable1Array;
		},
	};
	var replicate = function (dictUnfoldable) {
		return function (n) {
			return function (v) {
				var step = function (i) {
					var $8 = i <= 0;
					if ($8) {
						return Data_Maybe.Nothing.value;
					}
					return new Data_Maybe.Just(new Data_Tuple.Tuple(v, (i - 1) | 0));
				};
				return unfoldr(dictUnfoldable)(step)(n);
			};
		};
	};
	exports['unfoldr'] = unfoldr;
	exports['replicate'] = replicate;
	exports['unfoldableArray'] = unfoldableArray;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Array'] = $PS['Data.Array'] || {};
	var exports = $PS['Data.Array'];
	var $foreign = $PS['Data.Array'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var unsafeIndex = function (dictPartial) {
		return $foreign.unsafeIndexImpl;
	};
	var toUnfoldable = function (dictUnfoldable) {
		return function (xs) {
			var len = $foreign.length(xs);
			var f = function (i) {
				if (i < len) {
					return new Data_Maybe.Just(
						new Data_Tuple.Tuple(unsafeIndex()(xs)(i), (i + 1) | 0)
					);
				}
				if (Data_Boolean.otherwise) {
					return Data_Maybe.Nothing.value;
				}
				throw new Error(
					'Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): ' +
						[i.constructor.name]
				);
			};
			return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
		};
	};
	var take = function (n) {
		return function (xs) {
			var $67 = n < 1;
			if ($67) {
				return [];
			}
			return $foreign.slice(0)(n)(xs);
		};
	};
	var sortBy = function (comp) {
		return $foreign.sortByImpl(comp)(function (v) {
			if (v instanceof Data_Ordering.GT) {
				return 1;
			}
			if (v instanceof Data_Ordering.EQ) {
				return 0;
			}
			if (v instanceof Data_Ordering.LT) {
				return -1 | 0;
			}
			throw new Error(
				'Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): ' +
					[v.constructor.name]
			);
		});
	};
	var sortWith = function (dictOrd) {
		return function (f) {
			return sortBy(Data_Ord.comparing(dictOrd)(f));
		};
	};
	var $$null = function (xs) {
		return $foreign.length(xs) === 0;
	};
	var index = $foreign.indexImpl(Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var fromFoldable = function (dictFoldable) {
		return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
	};
	var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
	var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var drop = function (n) {
		return function (xs) {
			var $89 = n < 1;
			if ($89) {
				return xs;
			}
			return $foreign.slice(n)($foreign.length(xs))(xs);
		};
	};
	var deleteAt = $foreign['_deleteAt'](Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var deleteBy = function (v) {
		return function (v1) {
			return function (v2) {
				if (v2.length === 0) {
					return [];
				}
				return Data_Maybe.maybe(v2)(function (i) {
					return Data_Maybe.fromJust()(deleteAt(i)(v2));
				})(findIndex(v(v1))(v2));
			};
		};
	};
	var cons = function (x) {
		return function (xs) {
			return Data_Semigroup.append(Data_Semigroup.semigroupArray)([x])(xs);
		};
	};
	exports['fromFoldable'] = fromFoldable;
	exports['toUnfoldable'] = toUnfoldable;
	exports['null'] = $$null;
	exports['cons'] = cons;
	exports['index'] = index;
	exports['sortBy'] = sortBy;
	exports['sortWith'] = sortWith;
	exports['take'] = take;
	exports['drop'] = drop;
	exports['deleteBy'] = deleteBy;
	exports['range'] = $foreign.range;
	exports['zipWith'] = $foreign.zipWith;
})(PS);
(function (exports) {
	'use strict';

	exports['new'] = function () {
		return [];
	};

	exports.pushAll = function (as) {
		return function (xs) {
			return function () {
				return xs.push.apply(xs, as);
			};
		};
	};

	exports.unsafeFreeze = function (xs) {
		return function () {
			return xs;
		};
	};
})((PS['Data.Array.ST'] = PS['Data.Array.ST'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Array.ST'] = $PS['Data.Array.ST'] || {};
	var exports = $PS['Data.Array.ST'];
	var $foreign = $PS['Data.Array.ST'];
	var push = function (a) {
		return $foreign.pushAll([a]);
	};
	exports['push'] = push;
	exports['new'] = $foreign['new'];
	exports['unsafeFreeze'] = $foreign.unsafeFreeze;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Array.ST.Iterator'] = $PS['Data.Array.ST.Iterator'] || {};
	var exports = $PS['Data.Array.ST.Iterator'];
	var Control_Monad_ST_Internal = $PS['Control.Monad.ST.Internal'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_HeytingAlgebra = $PS['Data.HeytingAlgebra'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Iterator = (function () {
		function Iterator(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		Iterator.create = function (value0) {
			return function (value1) {
				return new Iterator(value0, value1);
			};
		};
		return Iterator;
	})();
	var next = function (v) {
		return function __do() {
			var i = Control_Monad_ST_Internal.read(v.value1)();
			Control_Monad_ST_Internal.modify(function (v1) {
				return (v1 + 1) | 0;
			})(v.value1)();
			return v.value0(i);
		};
	};
	var iterator = function (f) {
		return Data_Functor.map(Control_Monad_ST_Internal.functorST)(
			Iterator.create(f)
		)(Control_Monad_ST_Internal['new'](0));
	};
	var iterate = function (iter) {
		return function (f) {
			return function __do() {
				var $$break = Control_Monad_ST_Internal['new'](false)();
				while (
					Data_Functor.map(Control_Monad_ST_Internal.functorST)(
						Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)
					)(Control_Monad_ST_Internal.read($$break))()
				) {
					(function __do() {
						var mx = next(iter)();
						if (mx instanceof Data_Maybe.Just) {
							return f(mx.value0)();
						}
						if (mx instanceof Data_Maybe.Nothing) {
							return Data_Functor['void'](Control_Monad_ST_Internal.functorST)(
								Control_Monad_ST_Internal.write(true)($$break)
							)();
						}
						throw new Error(
							'Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): ' +
								[mx.constructor.name]
						);
					})();
				}
				return {};
			};
		};
	};
	exports['iterator'] = iterator;
	exports['iterate'] = iterate;
})(PS);
(function (exports) {
	'use strict';

	exports.topInt = 2147483647;
	exports.bottomInt = -2147483648;

	exports.topChar = String.fromCharCode(65535);
	exports.bottomChar = String.fromCharCode(0);
})((PS['Data.Bounded'] = PS['Data.Bounded'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Bounded'] = $PS['Data.Bounded'] || {};
	var exports = $PS['Data.Bounded'];
	var $foreign = $PS['Data.Bounded'];
	var Data_Ord = $PS['Data.Ord'];
	var top = function (dict) {
		return dict.top;
	};
	var boundedInt = {
		top: $foreign.topInt,
		bottom: $foreign.bottomInt,
		Ord0: function () {
			return Data_Ord.ordInt;
		},
	};
	var boundedChar = {
		top: $foreign.topChar,
		bottom: $foreign.bottomChar,
		Ord0: function () {
			return Data_Ord.ordChar;
		},
	};
	var bottom = function (dict) {
		return dict.bottom;
	};
	exports['bottom'] = bottom;
	exports['top'] = top;
	exports['boundedInt'] = boundedInt;
	exports['boundedChar'] = boundedChar;
})(PS);
(function (exports) {
	'use strict';

	exports.toCharCode = function (c) {
		return c.charCodeAt(0);
	};

	exports.fromCharCode = function (c) {
		return String.fromCharCode(c);
	};
})((PS['Data.Enum'] = PS['Data.Enum'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Enum'] = $PS['Data.Enum'] || {};
	var exports = $PS['Data.Enum'];
	var $foreign = $PS['Data.Enum'];
	var Data_Bounded = $PS['Data.Bounded'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var fromEnum = function (dict) {
		return dict.fromEnum;
	};
	var defaultSucc = function (toEnum$prime) {
		return function (fromEnum$prime) {
			return function (a) {
				return toEnum$prime((fromEnum$prime(a) + 1) | 0);
			};
		};
	};
	var defaultPred = function (toEnum$prime) {
		return function (fromEnum$prime) {
			return function (a) {
				return toEnum$prime((fromEnum$prime(a) - 1) | 0);
			};
		};
	};
	var charToEnum = function (v) {
		if (
			v >= Data_Bounded.bottom(Data_Bounded.boundedInt) &&
			v <= Data_Bounded.top(Data_Bounded.boundedInt)
		) {
			return new Data_Maybe.Just($foreign.fromCharCode(v));
		}
		return Data_Maybe.Nothing.value;
	};
	var enumChar = {
		succ: defaultSucc(charToEnum)($foreign.toCharCode),
		pred: defaultPred(charToEnum)($foreign.toCharCode),
		Ord0: function () {
			return Data_Ord.ordChar;
		},
	};
	var boundedEnumChar = {
		cardinality:
			($foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) -
				$foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar))) |
			0,
		toEnum: charToEnum,
		fromEnum: $foreign.toCharCode,
		Bounded0: function () {
			return Data_Bounded.boundedChar;
		},
		Enum1: function () {
			return enumChar;
		},
	};
	exports['fromEnum'] = fromEnum;
	exports['boundedEnumChar'] = boundedEnumChar;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Char'] = $PS['Data.Char'] || {};
	var exports = $PS['Data.Char'];
	var Data_Enum = $PS['Data.Enum'];
	var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
	exports['toCharCode'] = toCharCode;
})(PS);
(function (exports) {
	'use strict';

	exports.intSub = function (x) {
		return function (y) {
			/* jshint bitwise: false */
			return (x - y) | 0;
		};
	};
})((PS['Data.Ring'] = PS['Data.Ring'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Ring'] = $PS['Data.Ring'] || {};
	var exports = $PS['Data.Ring'];
	var $foreign = $PS['Data.Ring'];
	var Data_Semiring = $PS['Data.Semiring'];
	var ringInt = {
		sub: $foreign.intSub,
		Semiring0: function () {
			return Data_Semiring.semiringInt;
		},
	};
	exports['ringInt'] = ringInt;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.CommutativeRing'] = $PS['Data.CommutativeRing'] || {};
	var exports = $PS['Data.CommutativeRing'];
	var Data_Ring = $PS['Data.Ring'];
	var commutativeRingInt = {
		Ring0: function () {
			return Data_Ring.ringInt;
		},
	};
	exports['commutativeRingInt'] = commutativeRingInt;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Compactable'] = $PS['Data.Compactable'] || {};
	var exports = $PS['Data.Compactable'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Monad_ST_Internal = $PS['Control.Monad.ST.Internal'];
	var Control_Plus = $PS['Control.Plus'];
	var Data_Array = $PS['Data.Array'];
	var Data_Array_ST = $PS['Data.Array.ST'];
	var Data_Array_ST_Iterator = $PS['Data.Array.ST.Iterator'];
	var Data_Either = $PS['Data.Either'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_List = $PS['Data.List'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var compactableList = {
		compact: Data_List.catMaybes,
		separate: (function () {
			var go = function (acc) {
				return function (v) {
					if (v instanceof Data_Either.Left) {
						return {
							left: Control_Alt.alt(Data_List_Types.altList)(acc.left)(
								Control_Applicative.pure(Data_List_Types.applicativeList)(
									v.value0
								)
							),
							right: acc.right,
						};
					}
					if (v instanceof Data_Either.Right) {
						return {
							right: Control_Alt.alt(Data_List_Types.altList)(acc.right)(
								Control_Applicative.pure(Data_List_Types.applicativeList)(
									v.value0
								)
							),
							left: acc.left,
						};
					}
					throw new Error(
						'Failed pattern match at Data.Compactable (line 131, column 14 - line 133, column 54): ' +
							[v.constructor.name]
					);
				};
			};
			return Data_Foldable.foldl(Data_List_Types.foldableList)(go)({
				left: Control_Plus.empty(Data_List_Types.plusList),
				right: Control_Plus.empty(Data_List_Types.plusList),
			});
		})(),
	};
	var compactableArray = {
		compact: function (xs) {
			return (function __do() {
				var result = Data_Array_ST['new']();
				var iter = Data_Array_ST_Iterator.iterator(function (v) {
					return Data_Array.index(xs)(v);
				})();
				Data_Array_ST_Iterator.iterate(iter)(
					(function () {
						var $79 = Data_Functor['void'](Control_Monad_ST_Internal.functorST);
						return function ($80) {
							return $79(
								(function (v) {
									if (v instanceof Data_Maybe.Nothing) {
										return Control_Applicative.pure(
											Control_Monad_ST_Internal.applicativeST
										)(0);
									}
									if (v instanceof Data_Maybe.Just) {
										return Data_Array_ST.push(v.value0)(result);
									}
									throw new Error(
										'Failed pattern match at Data.Compactable (line 111, column 34 - line 113, column 35): ' +
											[v.constructor.name]
									);
								})($80)
							);
						};
					})()
				)();
				return Data_Array_ST.unsafeFreeze(result)();
			})();
		},
		separate: function (xs) {
			return (function __do() {
				var ls = Data_Array_ST['new']();
				var rs = Data_Array_ST['new']();
				var iter = Data_Array_ST_Iterator.iterator(function (v) {
					return Data_Array.index(xs)(v);
				})();
				Data_Array_ST_Iterator.iterate(iter)(
					(function () {
						var $81 = Data_Functor['void'](Control_Monad_ST_Internal.functorST);
						return function ($82) {
							return $81(
								(function (v) {
									if (v instanceof Data_Either.Left) {
										return Data_Array_ST.push(v.value0)(ls);
									}
									if (v instanceof Data_Either.Right) {
										return Data_Array_ST.push(v.value0)(rs);
									}
									throw new Error(
										'Failed pattern match at Data.Compactable (line 122, column 34 - line 124, column 31): ' +
											[v.constructor.name]
									);
								})($82)
							);
						};
					})()
				)();
				return Control_Apply.apply(Control_Monad_ST_Internal.applyST)(
					Data_Functor.map(Control_Monad_ST_Internal.functorST)(function (v) {
						return function (v1) {
							return {
								left: v,
								right: v1,
							};
						};
					})(Data_Array_ST.unsafeFreeze(ls))
				)(Data_Array_ST.unsafeFreeze(rs))();
			})();
		},
	};
	var compact = function (dict) {
		return dict.compact;
	};
	exports['compact'] = compact;
	exports['compactableArray'] = compactableArray;
	exports['compactableList'] = compactableList;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.DateTime.Instant'] = $PS['Data.DateTime.Instant'] || {};
	var exports = $PS['Data.DateTime.Instant'];
	var unInstant = function (v) {
		return v;
	};
	exports['unInstant'] = unInstant;
})(PS);
(function (exports) {
	'use strict';

	exports.intDegree = function (x) {
		return Math.min(Math.abs(x), 2147483647);
	};

	// See the Euclidean definition in
	// https://en.m.wikipedia.org/wiki/Modulo_operation.
	exports.intDiv = function (x) {
		return function (y) {
			if (y === 0) return 0;
			return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
		};
	};

	exports.intMod = function (x) {
		return function (y) {
			if (y === 0) return 0;
			var yy = Math.abs(y);
			return ((x % yy) + yy) % yy;
		};
	};
})((PS['Data.EuclideanRing'] = PS['Data.EuclideanRing'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.EuclideanRing'] = $PS['Data.EuclideanRing'] || {};
	var exports = $PS['Data.EuclideanRing'];
	var $foreign = $PS['Data.EuclideanRing'];
	var Data_CommutativeRing = $PS['Data.CommutativeRing'];
	var mod = function (dict) {
		return dict.mod;
	};
	var euclideanRingInt = {
		degree: $foreign.intDegree,
		div: $foreign.intDiv,
		mod: $foreign.intMod,
		CommutativeRing0: function () {
			return Data_CommutativeRing.commutativeRingInt;
		},
	};
	exports['mod'] = mod;
	exports['euclideanRingInt'] = euclideanRingInt;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Filterable'] = $PS['Data.Filterable'] || {};
	var exports = $PS['Data.Filterable'];
	var Data_Compactable = $PS['Data.Compactable'];
	var Data_Either = $PS['Data.Either'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_List = $PS['Data.List'];
	var Data_List_Types = $PS['Data.List.Types'];
	var filterableList = {
		partitionMap: function (p) {
			return function (xs) {
				var select = function (x) {
					return function (v) {
						var v1 = p(x);
						if (v1 instanceof Data_Either.Left) {
							return {
								left: new Data_List_Types.Cons(v1.value0, v.left),
								right: v.right,
							};
						}
						if (v1 instanceof Data_Either.Right) {
							return {
								left: v.left,
								right: new Data_List_Types.Cons(v1.value0, v.right),
							};
						}
						throw new Error(
							'Failed pattern match at Data.Filterable (line 190, column 36 - line 192, column 83): ' +
								[v1.constructor.name]
						);
					};
				};
				return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
					left: Data_List_Types.Nil.value,
					right: Data_List_Types.Nil.value,
				})(xs);
			};
		},
		partition: function (p) {
			return function (xs) {
				var select = function (x) {
					return function (v) {
						var $45 = p(x);
						if ($45) {
							return {
								no: v.no,
								yes: new Data_List_Types.Cons(x, v.yes),
							};
						}
						return {
							no: new Data_List_Types.Cons(x, v.no),
							yes: v.yes,
						};
					};
				};
				return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
					no: Data_List_Types.Nil.value,
					yes: Data_List_Types.Nil.value,
				})(xs);
			};
		},
		filterMap: function (p) {
			return Data_List.mapMaybe(p);
		},
		filter: Data_List.filter,
		Compactable0: function () {
			return Data_Compactable.compactableList;
		},
		Functor1: function () {
			return Data_List_Types.functorList;
		},
	};
	var filterMap = function (dict) {
		return dict.filterMap;
	};
	var filter = function (dict) {
		return dict.filter;
	};
	exports['filterMap'] = filterMap;
	exports['filter'] = filter;
	exports['filterableList'] = filterableList;
})(PS);
(function (exports) {
	'use strict';

	exports.runFn4 = function (fn) {
		return function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return fn(a, b, c, d);
					};
				};
			};
		};
	};
})((PS['Data.Function.Uncurried'] = PS['Data.Function.Uncurried'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Function.Uncurried'] = $PS['Data.Function.Uncurried'] || {};
	var exports = $PS['Data.Function.Uncurried'];
	var $foreign = $PS['Data.Function.Uncurried'];
	exports['runFn4'] = $foreign.runFn4;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Generic.Rep'] = $PS['Data.Generic.Rep'] || {};
	var exports = $PS['Data.Generic.Rep'];
	var Inl = (function () {
		function Inl(value0) {
			this.value0 = value0;
		}
		Inl.create = function (value0) {
			return new Inl(value0);
		};
		return Inl;
	})();
	var Inr = (function () {
		function Inr(value0) {
			this.value0 = value0;
		}
		Inr.create = function (value0) {
			return new Inr(value0);
		};
		return Inr;
	})();
	var NoArguments = (function () {
		function NoArguments() {}
		NoArguments.value = new NoArguments();
		return NoArguments;
	})();
	var from = function (dict) {
		return dict.from;
	};
	exports['from'] = from;
	exports['NoArguments'] = NoArguments;
	exports['Inl'] = Inl;
	exports['Inr'] = Inr;
})(PS);
(function (exports) {
	'use strict';

	exports.fromNumberImpl = function (just) {
		return function (nothing) {
			return function (n) {
				/* jshint bitwise: false */
				return (n | 0) === n ? just(n) : nothing;
			};
		};
	};

	exports.toNumber = function (n) {
		return n;
	};

	exports.fromStringAsImpl = function (just) {
		return function (nothing) {
			return function (radix) {
				var digits;
				if (radix < 11) {
					digits = '[0-' + (radix - 1).toString() + ']';
				} else if (radix === 11) {
					digits = '[0-9a]';
				} else {
					digits = '[0-9a-' + String.fromCharCode(86 + radix) + ']';
				}
				var pattern = new RegExp('^[\\+\\-]?' + digits + '+$', 'i');

				return function (s) {
					/* jshint bitwise: false */
					if (pattern.test(s)) {
						var i = parseInt(s, radix);
						return (i | 0) === i ? just(i) : nothing;
					} else {
						return nothing;
					}
				};
			};
		};
	};
})((PS['Data.Int'] = PS['Data.Int'] || {}));
(function (exports) {
	/* globals exports */
	'use strict';

	exports.isFinite = isFinite;
})((PS['Data.Number'] = PS['Data.Number'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Number'] = $PS['Data.Number'] || {};
	var exports = $PS['Data.Number'];
	var $foreign = $PS['Data.Number'];
	exports['isFinite'] = $foreign['isFinite'];
})(PS);
(function (exports) {
	'use strict';

	exports.floor = Math.floor;

	exports.remainder = function (n) {
		return function (m) {
			return n % m;
		};
	};
})((PS['Math'] = PS['Math'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Math'] = $PS['Math'] || {};
	var exports = $PS['Math'];
	var $foreign = $PS['Math'];
	exports['floor'] = $foreign.floor;
	exports['remainder'] = $foreign.remainder;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Int'] = $PS['Data.Int'] || {};
	var exports = $PS['Data.Int'];
	var $foreign = $PS['Data.Int'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Bounded = $PS['Data.Bounded'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Number = $PS['Data.Number'];
	var $$Math = $PS['Math'];
	var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var fromString = fromStringAs(10);
	var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var unsafeClamp = function (x) {
		if (!Data_Number['isFinite'](x)) {
			return 0;
		}
		if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
			return Data_Bounded.top(Data_Bounded.boundedInt);
		}
		if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
			return Data_Bounded.bottom(Data_Bounded.boundedInt);
		}
		if (Data_Boolean.otherwise) {
			return Data_Maybe.fromMaybe(0)(fromNumber(x));
		}
		throw new Error(
			'Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): ' +
				[x.constructor.name]
		);
	};
	var floor = function ($24) {
		return unsafeClamp($$Math.floor($24));
	};
	exports['fromNumber'] = fromNumber;
	exports['floor'] = floor;
	exports['fromString'] = fromString;
	exports['toNumber'] = $foreign.toNumber;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Profunctor'] = $PS['Data.Profunctor'] || {};
	var exports = $PS['Data.Profunctor'];
	var Control_Category = $PS['Control.Category'];
	var profunctorFn = {
		dimap: function (a2b) {
			return function (c2d) {
				return function (b2c) {
					return function ($10) {
						return c2d(b2c(a2b($10)));
					};
				};
			};
		},
	};
	var dimap = function (dict) {
		return dict.dimap;
	};
	var lcmap = function (dictProfunctor) {
		return function (a2b) {
			return dimap(dictProfunctor)(a2b)(
				Control_Category.identity(Control_Category.categoryFn)
			);
		};
	};
	exports['dimap'] = dimap;
	exports['lcmap'] = lcmap;
	exports['profunctorFn'] = profunctorFn;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Profunctor.Strong'] = $PS['Data.Profunctor.Strong'] || {};
	var exports = $PS['Data.Profunctor.Strong'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Profunctor = $PS['Data.Profunctor'];
	var Data_Tuple = $PS['Data.Tuple'];
	var strongFn = {
		first: function (a2b) {
			return function (v) {
				return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
			};
		},
		second: Data_Functor.map(Data_Tuple.functorTuple),
		Profunctor0: function () {
			return Data_Profunctor.profunctorFn;
		},
	};
	var first = function (dict) {
		return dict.first;
	};
	exports['first'] = first;
	exports['strongFn'] = strongFn;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Lens.Lens'] = $PS['Data.Lens.Lens'] || {};
	var exports = $PS['Data.Lens.Lens'];
	var Data_Profunctor = $PS['Data.Profunctor'];
	var Data_Profunctor_Strong = $PS['Data.Profunctor.Strong'];
	var Data_Tuple = $PS['Data.Tuple'];
	var lens$prime = function (to) {
		return function (dictStrong) {
			return function (pab) {
				return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (
					v
				) {
					return v.value1(v.value0);
				})(Data_Profunctor_Strong.first(dictStrong)(pab));
			};
		};
	};
	var lens = function (get) {
		return function (set) {
			return function (dictStrong) {
				return lens$prime(function (s) {
					return new Data_Tuple.Tuple(get(s), function (b) {
						return set(s)(b);
					});
				})(dictStrong);
			};
		};
	};
	exports['lens'] = lens;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Lens.Lens.Tuple'] = $PS['Data.Lens.Lens.Tuple'] || {};
	var exports = $PS['Data.Lens.Lens.Tuple'];
	var Data_Profunctor_Strong = $PS['Data.Profunctor.Strong'];
	var _1 = function (dictStrong) {
		return Data_Profunctor_Strong.first(dictStrong);
	};
	exports['_1'] = _1;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Lens.Record'] = $PS['Data.Lens.Record'] || {};
	var exports = $PS['Data.Lens.Record'];
	var Data_Function = $PS['Data.Function'];
	var Data_Lens_Lens = $PS['Data.Lens.Lens'];
	var Record = $PS['Record'];
	var prop = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictCons1) {
				return function (l) {
					return function (dictStrong) {
						return Data_Lens_Lens.lens(Record.get(dictIsSymbol)()(l))(
							Data_Function.flip(Record.set(dictIsSymbol)()()(l))
						)(dictStrong);
					};
				};
			};
		};
	};
	exports['prop'] = prop;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Lens.Setter'] = $PS['Data.Lens.Setter'] || {};
	var exports = $PS['Data.Lens.Setter'];
	var over = function (l) {
		return l;
	};
	exports['over'] = over;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Map.Internal'] = $PS['Data.Map.Internal'] || {};
	var exports = $PS['Data.Map.Internal'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Category = $PS['Control.Category'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_FoldableWithIndex = $PS['Data.FoldableWithIndex'];
	var Data_Function = $PS['Data.Function'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Leaf = (function () {
		function Leaf() {}
		Leaf.value = new Leaf();
		return Leaf;
	})();
	var Two = (function () {
		function Two(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		Two.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new Two(value0, value1, value2, value3);
					};
				};
			};
		};
		return Two;
	})();
	var Three = (function () {
		function Three(value0, value1, value2, value3, value4, value5, value6) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
			this.value6 = value6;
		}
		Three.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return function (value6) {
									return new Three(
										value0,
										value1,
										value2,
										value3,
										value4,
										value5,
										value6
									);
								};
							};
						};
					};
				};
			};
		};
		return Three;
	})();
	var TwoLeft = (function () {
		function TwoLeft(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		TwoLeft.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new TwoLeft(value0, value1, value2);
				};
			};
		};
		return TwoLeft;
	})();
	var TwoRight = (function () {
		function TwoRight(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		TwoRight.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new TwoRight(value0, value1, value2);
				};
			};
		};
		return TwoRight;
	})();
	var ThreeLeft = (function () {
		function ThreeLeft(value0, value1, value2, value3, value4, value5) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
		}
		ThreeLeft.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return new ThreeLeft(
									value0,
									value1,
									value2,
									value3,
									value4,
									value5
								);
							};
						};
					};
				};
			};
		};
		return ThreeLeft;
	})();
	var ThreeMiddle = (function () {
		function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
		}
		ThreeMiddle.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return new ThreeMiddle(
									value0,
									value1,
									value2,
									value3,
									value4,
									value5
								);
							};
						};
					};
				};
			};
		};
		return ThreeMiddle;
	})();
	var ThreeRight = (function () {
		function ThreeRight(value0, value1, value2, value3, value4, value5) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
		}
		ThreeRight.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return new ThreeRight(
									value0,
									value1,
									value2,
									value3,
									value4,
									value5
								);
							};
						};
					};
				};
			};
		};
		return ThreeRight;
	})();
	var KickUp = (function () {
		function KickUp(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		KickUp.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new KickUp(value0, value1, value2, value3);
					};
				};
			};
		};
		return KickUp;
	})();
	var values = function (v) {
		if (v instanceof Leaf) {
			return Data_List_Types.Nil.value;
		}
		if (v instanceof Two) {
			return Data_Semigroup.append(Data_List_Types.semigroupList)(
				values(v.value0)
			)(
				Data_Semigroup.append(Data_List_Types.semigroupList)(
					Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2)
				)(values(v.value3))
			);
		}
		if (v instanceof Three) {
			return Data_Semigroup.append(Data_List_Types.semigroupList)(
				values(v.value0)
			)(
				Data_Semigroup.append(Data_List_Types.semigroupList)(
					Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2)
				)(
					Data_Semigroup.append(Data_List_Types.semigroupList)(
						values(v.value3)
					)(
						Data_Semigroup.append(Data_List_Types.semigroupList)(
							Control_Applicative.pure(Data_List_Types.applicativeList)(
								v.value5
							)
						)(values(v.value6))
					)
				)
			);
		}
		throw new Error(
			'Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): ' +
				[v.constructor.name]
		);
	};
	var singleton = function (k) {
		return function (v) {
			return new Two(Leaf.value, k, v, Leaf.value);
		};
	};
	var toUnfoldable = function (dictUnfoldable) {
		return function (m) {
			var go = function ($copy_v) {
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(v) {
					if (v instanceof Data_List_Types.Nil) {
						$tco_done = true;
						return Data_Maybe.Nothing.value;
					}
					if (v instanceof Data_List_Types.Cons) {
						if (v.value0 instanceof Leaf) {
							$copy_v = v.value1;
							return;
						}
						if (
							v.value0 instanceof Two &&
							v.value0.value0 instanceof Leaf &&
							v.value0.value3 instanceof Leaf
						) {
							$tco_done = true;
							return Data_Maybe.Just.create(
								new Data_Tuple.Tuple(
									new Data_Tuple.Tuple(v.value0.value1, v.value0.value2),
									v.value1
								)
							);
						}
						if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
							$tco_done = true;
							return Data_Maybe.Just.create(
								new Data_Tuple.Tuple(
									new Data_Tuple.Tuple(v.value0.value1, v.value0.value2),
									new Data_List_Types.Cons(v.value0.value3, v.value1)
								)
							);
						}
						if (v.value0 instanceof Two) {
							$copy_v = new Data_List_Types.Cons(
								v.value0.value0,
								new Data_List_Types.Cons(
									singleton(v.value0.value1)(v.value0.value2),
									new Data_List_Types.Cons(v.value0.value3, v.value1)
								)
							);
							return;
						}
						if (v.value0 instanceof Three) {
							$copy_v = new Data_List_Types.Cons(
								v.value0.value0,
								new Data_List_Types.Cons(
									singleton(v.value0.value1)(v.value0.value2),
									new Data_List_Types.Cons(
										v.value0.value3,
										new Data_List_Types.Cons(
											singleton(v.value0.value4)(v.value0.value5),
											new Data_List_Types.Cons(v.value0.value6, v.value1)
										)
									)
								)
							);
							return;
						}
						throw new Error(
							'Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): ' +
								[v.value0.constructor.name]
						);
					}
					throw new Error(
						'Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): ' +
							[v.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($copy_v);
				}
				return $tco_result;
			};
			return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(
				new Data_List_Types.Cons(m, Data_List_Types.Nil.value)
			);
		};
	};
	var toAscArray = toUnfoldable(Data_Unfoldable.unfoldableArray);
	var lookup = function (dictOrd) {
		return function (k) {
			var comp = Data_Ord.compare(dictOrd);
			var go = function ($copy_v) {
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(v) {
					if (v instanceof Leaf) {
						$tco_done = true;
						return Data_Maybe.Nothing.value;
					}
					if (v instanceof Two) {
						var v2 = comp(k)(v.value1);
						if (v2 instanceof Data_Ordering.EQ) {
							$tco_done = true;
							return new Data_Maybe.Just(v.value2);
						}
						if (v2 instanceof Data_Ordering.LT) {
							$copy_v = v.value0;
							return;
						}
						$copy_v = v.value3;
						return;
					}
					if (v instanceof Three) {
						var v3 = comp(k)(v.value1);
						if (v3 instanceof Data_Ordering.EQ) {
							$tco_done = true;
							return new Data_Maybe.Just(v.value2);
						}
						var v4 = comp(k)(v.value4);
						if (v4 instanceof Data_Ordering.EQ) {
							$tco_done = true;
							return new Data_Maybe.Just(v.value5);
						}
						if (v3 instanceof Data_Ordering.LT) {
							$copy_v = v.value0;
							return;
						}
						if (v4 instanceof Data_Ordering.GT) {
							$copy_v = v.value6;
							return;
						}
						$copy_v = v.value3;
						return;
					}
					throw new Error(
						'Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): ' +
							[v.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($copy_v);
				}
				return $tco_result;
			};
			return go;
		};
	};
	var keys = function (v) {
		if (v instanceof Leaf) {
			return Data_List_Types.Nil.value;
		}
		if (v instanceof Two) {
			return Data_Semigroup.append(Data_List_Types.semigroupList)(
				keys(v.value0)
			)(
				Data_Semigroup.append(Data_List_Types.semigroupList)(
					Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1)
				)(keys(v.value3))
			);
		}
		if (v instanceof Three) {
			return Data_Semigroup.append(Data_List_Types.semigroupList)(
				keys(v.value0)
			)(
				Data_Semigroup.append(Data_List_Types.semigroupList)(
					Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1)
				)(
					Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(
						Data_Semigroup.append(Data_List_Types.semigroupList)(
							Control_Applicative.pure(Data_List_Types.applicativeList)(
								v.value4
							)
						)(keys(v.value6))
					)
				)
			);
		}
		throw new Error(
			'Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): ' +
				[v.constructor.name]
		);
	};
	var fromZipper = function ($copy_dictOrd) {
		return function ($copy_v) {
			return function ($copy_tree) {
				var $tco_var_dictOrd = $copy_dictOrd;
				var $tco_var_v = $copy_v;
				var $tco_done = false;
				var $tco_result;
				function $tco_loop(dictOrd, v, tree) {
					if (v instanceof Data_List_Types.Nil) {
						$tco_done = true;
						return tree;
					}
					if (v instanceof Data_List_Types.Cons) {
						if (v.value0 instanceof TwoLeft) {
							$tco_var_dictOrd = dictOrd;
							$tco_var_v = v.value1;
							$copy_tree = new Two(
								tree,
								v.value0.value0,
								v.value0.value1,
								v.value0.value2
							);
							return;
						}
						if (v.value0 instanceof TwoRight) {
							$tco_var_dictOrd = dictOrd;
							$tco_var_v = v.value1;
							$copy_tree = new Two(
								v.value0.value0,
								v.value0.value1,
								v.value0.value2,
								tree
							);
							return;
						}
						if (v.value0 instanceof ThreeLeft) {
							$tco_var_dictOrd = dictOrd;
							$tco_var_v = v.value1;
							$copy_tree = new Three(
								tree,
								v.value0.value0,
								v.value0.value1,
								v.value0.value2,
								v.value0.value3,
								v.value0.value4,
								v.value0.value5
							);
							return;
						}
						if (v.value0 instanceof ThreeMiddle) {
							$tco_var_dictOrd = dictOrd;
							$tco_var_v = v.value1;
							$copy_tree = new Three(
								v.value0.value0,
								v.value0.value1,
								v.value0.value2,
								tree,
								v.value0.value3,
								v.value0.value4,
								v.value0.value5
							);
							return;
						}
						if (v.value0 instanceof ThreeRight) {
							$tco_var_dictOrd = dictOrd;
							$tco_var_v = v.value1;
							$copy_tree = new Three(
								v.value0.value0,
								v.value0.value1,
								v.value0.value2,
								v.value0.value3,
								v.value0.value4,
								v.value0.value5,
								tree
							);
							return;
						}
						throw new Error(
							'Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): ' +
								[v.value0.constructor.name]
						);
					}
					throw new Error(
						'Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): ' +
							[v.constructor.name, tree.constructor.name]
					);
				}
				while (!$tco_done) {
					$tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
				}
				return $tco_result;
			};
		};
	};
	var insert = function (dictOrd) {
		return function (k) {
			return function (v) {
				var up = function ($copy_v1) {
					return function ($copy_v2) {
						var $tco_var_v1 = $copy_v1;
						var $tco_done = false;
						var $tco_result;
						function $tco_loop(v1, v2) {
							if (v1 instanceof Data_List_Types.Nil) {
								$tco_done = true;
								return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
							}
							if (v1 instanceof Data_List_Types.Cons) {
								if (v1.value0 instanceof TwoLeft) {
									$tco_done = true;
									return fromZipper(dictOrd)(v1.value1)(
										new Three(
											v2.value0,
											v2.value1,
											v2.value2,
											v2.value3,
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2
										)
									);
								}
								if (v1.value0 instanceof TwoRight) {
									$tco_done = true;
									return fromZipper(dictOrd)(v1.value1)(
										new Three(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v2.value0,
											v2.value1,
											v2.value2,
											v2.value3
										)
									);
								}
								if (v1.value0 instanceof ThreeLeft) {
									$tco_var_v1 = v1.value1;
									$copy_v2 = new KickUp(
										new Two(v2.value0, v2.value1, v2.value2, v2.value3),
										v1.value0.value0,
										v1.value0.value1,
										new Two(
											v1.value0.value2,
											v1.value0.value3,
											v1.value0.value4,
											v1.value0.value5
										)
									);
									return;
								}
								if (v1.value0 instanceof ThreeMiddle) {
									$tco_var_v1 = v1.value1;
									$copy_v2 = new KickUp(
										new Two(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v2.value0
										),
										v2.value1,
										v2.value2,
										new Two(
											v2.value3,
											v1.value0.value3,
											v1.value0.value4,
											v1.value0.value5
										)
									);
									return;
								}
								if (v1.value0 instanceof ThreeRight) {
									$tco_var_v1 = v1.value1;
									$copy_v2 = new KickUp(
										new Two(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v1.value0.value3
										),
										v1.value0.value4,
										v1.value0.value5,
										new Two(v2.value0, v2.value1, v2.value2, v2.value3)
									);
									return;
								}
								throw new Error(
									'Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): ' +
										[v1.value0.constructor.name, v2.constructor.name]
								);
							}
							throw new Error(
								'Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): ' +
									[v1.constructor.name, v2.constructor.name]
							);
						}
						while (!$tco_done) {
							$tco_result = $tco_loop($tco_var_v1, $copy_v2);
						}
						return $tco_result;
					};
				};
				var comp = Data_Ord.compare(dictOrd);
				var down = function ($copy_ctx) {
					return function ($copy_v1) {
						var $tco_var_ctx = $copy_ctx;
						var $tco_done1 = false;
						var $tco_result;
						function $tco_loop(ctx, v1) {
							if (v1 instanceof Leaf) {
								$tco_done1 = true;
								return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
							}
							if (v1 instanceof Two) {
								var v2 = comp(k)(v1.value1);
								if (v2 instanceof Data_Ordering.EQ) {
									$tco_done1 = true;
									return fromZipper(dictOrd)(ctx)(
										new Two(v1.value0, k, v, v1.value3)
									);
								}
								if (v2 instanceof Data_Ordering.LT) {
									$tco_var_ctx = new Data_List_Types.Cons(
										new TwoLeft(v1.value1, v1.value2, v1.value3),
										ctx
									);
									$copy_v1 = v1.value0;
									return;
								}
								$tco_var_ctx = new Data_List_Types.Cons(
									new TwoRight(v1.value0, v1.value1, v1.value2),
									ctx
								);
								$copy_v1 = v1.value3;
								return;
							}
							if (v1 instanceof Three) {
								var v3 = comp(k)(v1.value1);
								if (v3 instanceof Data_Ordering.EQ) {
									$tco_done1 = true;
									return fromZipper(dictOrd)(ctx)(
										new Three(
											v1.value0,
											k,
											v,
											v1.value3,
											v1.value4,
											v1.value5,
											v1.value6
										)
									);
								}
								var v4 = comp(k)(v1.value4);
								if (v4 instanceof Data_Ordering.EQ) {
									$tco_done1 = true;
									return fromZipper(dictOrd)(ctx)(
										new Three(
											v1.value0,
											v1.value1,
											v1.value2,
											v1.value3,
											k,
											v,
											v1.value6
										)
									);
								}
								if (v3 instanceof Data_Ordering.LT) {
									$tco_var_ctx = new Data_List_Types.Cons(
										new ThreeLeft(
											v1.value1,
											v1.value2,
											v1.value3,
											v1.value4,
											v1.value5,
											v1.value6
										),
										ctx
									);
									$copy_v1 = v1.value0;
									return;
								}
								if (
									v3 instanceof Data_Ordering.GT &&
									v4 instanceof Data_Ordering.LT
								) {
									$tco_var_ctx = new Data_List_Types.Cons(
										new ThreeMiddle(
											v1.value0,
											v1.value1,
											v1.value2,
											v1.value4,
											v1.value5,
											v1.value6
										),
										ctx
									);
									$copy_v1 = v1.value3;
									return;
								}
								$tco_var_ctx = new Data_List_Types.Cons(
									new ThreeRight(
										v1.value0,
										v1.value1,
										v1.value2,
										v1.value3,
										v1.value4,
										v1.value5
									),
									ctx
								);
								$copy_v1 = v1.value6;
								return;
							}
							throw new Error(
								'Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): ' +
									[ctx.constructor.name, v1.constructor.name]
							);
						}
						while (!$tco_done1) {
							$tco_result = $tco_loop($tco_var_ctx, $copy_v1);
						}
						return $tco_result;
					};
				};
				return down(Data_List_Types.Nil.value);
			};
		};
	};
	var pop = function (dictOrd) {
		return function (k) {
			var up = function ($copy_ctxs) {
				return function ($copy_tree) {
					var $tco_var_ctxs = $copy_ctxs;
					var $tco_done = false;
					var $tco_result;
					function $tco_loop(ctxs, tree) {
						if (ctxs instanceof Data_List_Types.Nil) {
							$tco_done = true;
							return tree;
						}
						if (ctxs instanceof Data_List_Types.Cons) {
							if (
								ctxs.value0 instanceof TwoLeft &&
								ctxs.value0.value2 instanceof Leaf &&
								tree instanceof Leaf
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										Leaf.value,
										ctxs.value0.value0,
										ctxs.value0.value1,
										Leaf.value
									)
								);
							}
							if (
								ctxs.value0 instanceof TwoRight &&
								ctxs.value0.value0 instanceof Leaf &&
								tree instanceof Leaf
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										Leaf.value,
										ctxs.value0.value1,
										ctxs.value0.value2,
										Leaf.value
									)
								);
							}
							if (
								ctxs.value0 instanceof TwoLeft &&
								ctxs.value0.value2 instanceof Two
							) {
								$tco_var_ctxs = ctxs.value1;
								$copy_tree = new Three(
									tree,
									ctxs.value0.value0,
									ctxs.value0.value1,
									ctxs.value0.value2.value0,
									ctxs.value0.value2.value1,
									ctxs.value0.value2.value2,
									ctxs.value0.value2.value3
								);
								return;
							}
							if (
								ctxs.value0 instanceof TwoRight &&
								ctxs.value0.value0 instanceof Two
							) {
								$tco_var_ctxs = ctxs.value1;
								$copy_tree = new Three(
									ctxs.value0.value0.value0,
									ctxs.value0.value0.value1,
									ctxs.value0.value0.value2,
									ctxs.value0.value0.value3,
									ctxs.value0.value1,
									ctxs.value0.value2,
									tree
								);
								return;
							}
							if (
								ctxs.value0 instanceof TwoLeft &&
								ctxs.value0.value2 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										new Two(
											tree,
											ctxs.value0.value0,
											ctxs.value0.value1,
											ctxs.value0.value2.value0
										),
										ctxs.value0.value2.value1,
										ctxs.value0.value2.value2,
										new Two(
											ctxs.value0.value2.value3,
											ctxs.value0.value2.value4,
											ctxs.value0.value2.value5,
											ctxs.value0.value2.value6
										)
									)
								);
							}
							if (
								ctxs.value0 instanceof TwoRight &&
								ctxs.value0.value0 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										new Two(
											ctxs.value0.value0.value0,
											ctxs.value0.value0.value1,
											ctxs.value0.value0.value2,
											ctxs.value0.value0.value3
										),
										ctxs.value0.value0.value4,
										ctxs.value0.value0.value5,
										new Two(
											ctxs.value0.value0.value6,
											ctxs.value0.value1,
											ctxs.value0.value2,
											tree
										)
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeLeft &&
								ctxs.value0.value2 instanceof Leaf &&
								ctxs.value0.value5 instanceof Leaf &&
								tree instanceof Leaf
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										Leaf.value,
										ctxs.value0.value0,
										ctxs.value0.value1,
										Leaf.value,
										ctxs.value0.value3,
										ctxs.value0.value4,
										Leaf.value
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeMiddle &&
								ctxs.value0.value0 instanceof Leaf &&
								ctxs.value0.value5 instanceof Leaf &&
								tree instanceof Leaf
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										Leaf.value,
										ctxs.value0.value1,
										ctxs.value0.value2,
										Leaf.value,
										ctxs.value0.value3,
										ctxs.value0.value4,
										Leaf.value
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeRight &&
								ctxs.value0.value0 instanceof Leaf &&
								ctxs.value0.value3 instanceof Leaf &&
								tree instanceof Leaf
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										Leaf.value,
										ctxs.value0.value1,
										ctxs.value0.value2,
										Leaf.value,
										ctxs.value0.value4,
										ctxs.value0.value5,
										Leaf.value
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeLeft &&
								ctxs.value0.value2 instanceof Two
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										new Three(
											tree,
											ctxs.value0.value0,
											ctxs.value0.value1,
											ctxs.value0.value2.value0,
											ctxs.value0.value2.value1,
											ctxs.value0.value2.value2,
											ctxs.value0.value2.value3
										),
										ctxs.value0.value3,
										ctxs.value0.value4,
										ctxs.value0.value5
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeMiddle &&
								ctxs.value0.value0 instanceof Two
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										new Three(
											ctxs.value0.value0.value0,
											ctxs.value0.value0.value1,
											ctxs.value0.value0.value2,
											ctxs.value0.value0.value3,
											ctxs.value0.value1,
											ctxs.value0.value2,
											tree
										),
										ctxs.value0.value3,
										ctxs.value0.value4,
										ctxs.value0.value5
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeMiddle &&
								ctxs.value0.value5 instanceof Two
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										ctxs.value0.value0,
										ctxs.value0.value1,
										ctxs.value0.value2,
										new Three(
											tree,
											ctxs.value0.value3,
											ctxs.value0.value4,
											ctxs.value0.value5.value0,
											ctxs.value0.value5.value1,
											ctxs.value0.value5.value2,
											ctxs.value0.value5.value3
										)
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeRight &&
								ctxs.value0.value3 instanceof Two
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Two(
										ctxs.value0.value0,
										ctxs.value0.value1,
										ctxs.value0.value2,
										new Three(
											ctxs.value0.value3.value0,
											ctxs.value0.value3.value1,
											ctxs.value0.value3.value2,
											ctxs.value0.value3.value3,
											ctxs.value0.value4,
											ctxs.value0.value5,
											tree
										)
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeLeft &&
								ctxs.value0.value2 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										new Two(
											tree,
											ctxs.value0.value0,
											ctxs.value0.value1,
											ctxs.value0.value2.value0
										),
										ctxs.value0.value2.value1,
										ctxs.value0.value2.value2,
										new Two(
											ctxs.value0.value2.value3,
											ctxs.value0.value2.value4,
											ctxs.value0.value2.value5,
											ctxs.value0.value2.value6
										),
										ctxs.value0.value3,
										ctxs.value0.value4,
										ctxs.value0.value5
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeMiddle &&
								ctxs.value0.value0 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										new Two(
											ctxs.value0.value0.value0,
											ctxs.value0.value0.value1,
											ctxs.value0.value0.value2,
											ctxs.value0.value0.value3
										),
										ctxs.value0.value0.value4,
										ctxs.value0.value0.value5,
										new Two(
											ctxs.value0.value0.value6,
											ctxs.value0.value1,
											ctxs.value0.value2,
											tree
										),
										ctxs.value0.value3,
										ctxs.value0.value4,
										ctxs.value0.value5
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeMiddle &&
								ctxs.value0.value5 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										ctxs.value0.value0,
										ctxs.value0.value1,
										ctxs.value0.value2,
										new Two(
											tree,
											ctxs.value0.value3,
											ctxs.value0.value4,
											ctxs.value0.value5.value0
										),
										ctxs.value0.value5.value1,
										ctxs.value0.value5.value2,
										new Two(
											ctxs.value0.value5.value3,
											ctxs.value0.value5.value4,
											ctxs.value0.value5.value5,
											ctxs.value0.value5.value6
										)
									)
								);
							}
							if (
								ctxs.value0 instanceof ThreeRight &&
								ctxs.value0.value3 instanceof Three
							) {
								$tco_done = true;
								return fromZipper(dictOrd)(ctxs.value1)(
									new Three(
										ctxs.value0.value0,
										ctxs.value0.value1,
										ctxs.value0.value2,
										new Two(
											ctxs.value0.value3.value0,
											ctxs.value0.value3.value1,
											ctxs.value0.value3.value2,
											ctxs.value0.value3.value3
										),
										ctxs.value0.value3.value4,
										ctxs.value0.value3.value5,
										new Two(
											ctxs.value0.value3.value6,
											ctxs.value0.value4,
											ctxs.value0.value5,
											tree
										)
									)
								);
							}
							throw new Error(
								'Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): ' +
									[ctxs.value0.constructor.name, tree.constructor.name]
							);
						}
						throw new Error(
							'Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): ' +
								[ctxs.constructor.name]
						);
					}
					while (!$tco_done) {
						$tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
					}
					return $tco_result;
				};
			};
			var removeMaxNode = function ($copy_ctx) {
				return function ($copy_m) {
					var $tco_var_ctx = $copy_ctx;
					var $tco_done1 = false;
					var $tco_result;
					function $tco_loop(ctx, m) {
						if (
							m instanceof Two &&
							m.value0 instanceof Leaf &&
							m.value3 instanceof Leaf
						) {
							$tco_done1 = true;
							return up(ctx)(Leaf.value);
						}
						if (m instanceof Two) {
							$tco_var_ctx = new Data_List_Types.Cons(
								new TwoRight(m.value0, m.value1, m.value2),
								ctx
							);
							$copy_m = m.value3;
							return;
						}
						if (
							m instanceof Three &&
							m.value0 instanceof Leaf &&
							m.value3 instanceof Leaf &&
							m.value6 instanceof Leaf
						) {
							$tco_done1 = true;
							return up(
								new Data_List_Types.Cons(
									new TwoRight(Leaf.value, m.value1, m.value2),
									ctx
								)
							)(Leaf.value);
						}
						if (m instanceof Three) {
							$tco_var_ctx = new Data_List_Types.Cons(
								new ThreeRight(
									m.value0,
									m.value1,
									m.value2,
									m.value3,
									m.value4,
									m.value5
								),
								ctx
							);
							$copy_m = m.value6;
							return;
						}
						throw new Error(
							'Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): ' +
								[m.constructor.name]
						);
					}
					while (!$tco_done1) {
						$tco_result = $tco_loop($tco_var_ctx, $copy_m);
					}
					return $tco_result;
				};
			};
			var maxNode = function ($copy_m) {
				var $tco_done2 = false;
				var $tco_result;
				function $tco_loop(m) {
					if (m instanceof Two && m.value3 instanceof Leaf) {
						$tco_done2 = true;
						return {
							key: m.value1,
							value: m.value2,
						};
					}
					if (m instanceof Two) {
						$copy_m = m.value3;
						return;
					}
					if (m instanceof Three && m.value6 instanceof Leaf) {
						$tco_done2 = true;
						return {
							key: m.value4,
							value: m.value5,
						};
					}
					if (m instanceof Three) {
						$copy_m = m.value6;
						return;
					}
					throw new Error(
						'Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): ' +
							[m.constructor.name]
					);
				}
				while (!$tco_done2) {
					$tco_result = $tco_loop($copy_m);
				}
				return $tco_result;
			};
			var comp = Data_Ord.compare(dictOrd);
			var down = function ($copy_ctx) {
				return function ($copy_m) {
					var $tco_var_ctx = $copy_ctx;
					var $tco_done3 = false;
					var $tco_result;
					function $tco_loop(ctx, m) {
						if (m instanceof Leaf) {
							$tco_done3 = true;
							return Data_Maybe.Nothing.value;
						}
						if (m instanceof Two) {
							var v = comp(k)(m.value1);
							if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value))
								);
							}
							if (v instanceof Data_Ordering.EQ) {
								var max = maxNode(m.value0);
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(
										m.value2,
										removeMaxNode(
											new Data_List_Types.Cons(
												new TwoLeft(max.key, max.value, m.value3),
												ctx
											)
										)(m.value0)
									)
								);
							}
							if (v instanceof Data_Ordering.LT) {
								$tco_var_ctx = new Data_List_Types.Cons(
									new TwoLeft(m.value1, m.value2, m.value3),
									ctx
								);
								$copy_m = m.value0;
								return;
							}
							$tco_var_ctx = new Data_List_Types.Cons(
								new TwoRight(m.value0, m.value1, m.value2),
								ctx
							);
							$copy_m = m.value3;
							return;
						}
						if (m instanceof Three) {
							var leaves = (function () {
								if (
									m.value0 instanceof Leaf &&
									m.value3 instanceof Leaf &&
									m.value6 instanceof Leaf
								) {
									return true;
								}
								return false;
							})();
							var v = comp(k)(m.value4);
							var v3 = comp(k)(m.value1);
							if (leaves && v3 instanceof Data_Ordering.EQ) {
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(
										m.value2,
										fromZipper(dictOrd)(ctx)(
											new Two(Leaf.value, m.value4, m.value5, Leaf.value)
										)
									)
								);
							}
							if (leaves && v instanceof Data_Ordering.EQ) {
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(
										m.value5,
										fromZipper(dictOrd)(ctx)(
											new Two(Leaf.value, m.value1, m.value2, Leaf.value)
										)
									)
								);
							}
							if (v3 instanceof Data_Ordering.EQ) {
								var max = maxNode(m.value0);
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(
										m.value2,
										removeMaxNode(
											new Data_List_Types.Cons(
												new ThreeLeft(
													max.key,
													max.value,
													m.value3,
													m.value4,
													m.value5,
													m.value6
												),
												ctx
											)
										)(m.value0)
									)
								);
							}
							if (v instanceof Data_Ordering.EQ) {
								var max = maxNode(m.value3);
								$tco_done3 = true;
								return new Data_Maybe.Just(
									new Data_Tuple.Tuple(
										m.value5,
										removeMaxNode(
											new Data_List_Types.Cons(
												new ThreeMiddle(
													m.value0,
													m.value1,
													m.value2,
													max.key,
													max.value,
													m.value6
												),
												ctx
											)
										)(m.value3)
									)
								);
							}
							if (v3 instanceof Data_Ordering.LT) {
								$tco_var_ctx = new Data_List_Types.Cons(
									new ThreeLeft(
										m.value1,
										m.value2,
										m.value3,
										m.value4,
										m.value5,
										m.value6
									),
									ctx
								);
								$copy_m = m.value0;
								return;
							}
							if (
								v3 instanceof Data_Ordering.GT &&
								v instanceof Data_Ordering.LT
							) {
								$tco_var_ctx = new Data_List_Types.Cons(
									new ThreeMiddle(
										m.value0,
										m.value1,
										m.value2,
										m.value4,
										m.value5,
										m.value6
									),
									ctx
								);
								$copy_m = m.value3;
								return;
							}
							$tco_var_ctx = new Data_List_Types.Cons(
								new ThreeRight(
									m.value0,
									m.value1,
									m.value2,
									m.value3,
									m.value4,
									m.value5
								),
								ctx
							);
							$copy_m = m.value6;
							return;
						}
						throw new Error(
							'Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): ' +
								[m.constructor.name]
						);
					}
					while (!$tco_done3) {
						$tco_result = $tco_loop($tco_var_ctx, $copy_m);
					}
					return $tco_result;
				};
			};
			return down(Data_List_Types.Nil.value);
		};
	};
	var foldableMap = {
		foldl: function (f) {
			return function (z) {
				return function (m) {
					return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(
						values(m)
					);
				};
			};
		},
		foldr: function (f) {
			return function (z) {
				return function (m) {
					return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(
						values(m)
					);
				};
			};
		},
		foldMap: function (dictMonoid) {
			return function (f) {
				return function (m) {
					return Data_Foldable.foldMap(Data_List_Types.foldableList)(
						dictMonoid
					)(f)(values(m));
				};
			};
		},
	};
	var eqMap = function (dictEq) {
		return function (dictEq1) {
			return {
				eq: function (m1) {
					return function (m2) {
						return Data_Eq.eq(
							Data_Eq.eqArray(Data_Tuple.eqTuple(dictEq)(dictEq1))
						)(toAscArray(m1))(toAscArray(m2));
					};
				},
			};
		};
	};
	var empty = Leaf.value;
	var fromFoldable = function (dictOrd) {
		return function (dictFoldable) {
			return Data_Foldable.foldl(dictFoldable)(function (m) {
				return function (v) {
					return insert(dictOrd)(v.value0)(v.value1)(m);
				};
			})(empty);
		};
	};
	var $$delete = function (dictOrd) {
		return function (k) {
			return function (m) {
				return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
			};
		};
	};
	var asList = Control_Category.identity(Control_Category.categoryFn);
	var foldableWithIndexMap = {
		foldlWithIndex: function (f) {
			return function (z) {
				return function (m) {
					return Data_Foldable.foldl(Data_List_Types.foldableList)(
						(function () {
							var $767 = Data_Function.flip(f);
							return function ($768) {
								return Data_Tuple.uncurry($767($768));
							};
						})()
					)(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
				};
			};
		},
		foldrWithIndex: function (f) {
			return function (z) {
				return function (m) {
					return Data_Foldable.foldr(Data_List_Types.foldableList)(
						Data_Tuple.uncurry(f)
					)(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
				};
			};
		},
		foldMapWithIndex: function (dictMonoid) {
			return function (f) {
				return function (m) {
					return Data_Foldable.foldMap(Data_List_Types.foldableList)(
						dictMonoid
					)(Data_Tuple.uncurry(f))(
						asList(toUnfoldable(Data_List_Types.unfoldableList)(m))
					);
				};
			};
		},
		Foldable0: function () {
			return foldableMap;
		},
	};
	var mapMaybeWithKey = function (dictOrd) {
		return function (f) {
			return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(
				function (k) {
					return function (a) {
						return function (acc) {
							return Data_Maybe.maybe(acc)(function (b) {
								return insert(dictOrd)(k)(b)(acc);
							})(f(k)(a));
						};
					};
				}
			)(empty);
		};
	};
	var alter = function (dictOrd) {
		return function (f) {
			return function (k) {
				return function (m) {
					var v = f(lookup(dictOrd)(k)(m));
					if (v instanceof Data_Maybe.Nothing) {
						return $$delete(dictOrd)(k)(m);
					}
					if (v instanceof Data_Maybe.Just) {
						return insert(dictOrd)(k)(v.value0)(m);
					}
					throw new Error(
						'Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): ' +
							[v.constructor.name]
					);
				};
			};
		};
	};
	var unionWith = function (dictOrd) {
		return function (f) {
			return function (m1) {
				return function (m2) {
					var go = function (m) {
						return function (v) {
							return alter(dictOrd)(
								(function () {
									var $775 = Data_Maybe.maybe(v.value1)(f(v.value1));
									return function ($776) {
										return Data_Maybe.Just.create($775($776));
									};
								})()
							)(v.value0)(m);
						};
					};
					return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(
						toUnfoldable(Data_List_Types.unfoldableList)(m1)
					);
				};
			};
		};
	};
	var union = function (dictOrd) {
		return unionWith(dictOrd)(Data_Function['const']);
	};
	exports['empty'] = empty;
	exports['singleton'] = singleton;
	exports['insert'] = insert;
	exports['lookup'] = lookup;
	exports['fromFoldable'] = fromFoldable;
	exports['toUnfoldable'] = toUnfoldable;
	exports['delete'] = $$delete;
	exports['keys'] = keys;
	exports['union'] = union;
	exports['mapMaybeWithKey'] = mapMaybeWithKey;
	exports['eqMap'] = eqMap;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Set'] = $PS['Data.Set'] || {};
	var exports = $PS['Data.Set'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Unit = $PS['Data.Unit'];
	var union = function (dictOrd) {
		return function (v) {
			return function (v1) {
				return Data_Map_Internal.union(dictOrd)(v)(v1);
			};
		};
	};
	var toMap = function (v) {
		return v;
	};
	var toList = function (v) {
		return Data_Map_Internal.keys(v);
	};
	var singleton = function (a) {
		return Data_Map_Internal.singleton(a)(Data_Unit.unit);
	};
	var semigroupSet = function (dictOrd) {
		return {
			append: union(dictOrd),
		};
	};
	var insert = function (dictOrd) {
		return function (a) {
			return function (v) {
				return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
			};
		};
	};
	var foldableSet = {
		foldMap: function (dictMonoid) {
			return function (f) {
				var $68 = Data_Foldable.foldMap(Data_List_Types.foldableList)(
					dictMonoid
				)(f);
				return function ($69) {
					return $68(toList($69));
				};
			};
		},
		foldl: function (f) {
			return function (x) {
				var $70 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
				return function ($71) {
					return $70(toList($71));
				};
			};
		},
		foldr: function (f) {
			return function (x) {
				var $72 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
				return function ($73) {
					return $72(toList($73));
				};
			};
		},
	};
	var eqSet = function (dictEq) {
		return {
			eq: function (v) {
				return function (v1) {
					return Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit))(v)(
						v1
					);
				};
			},
		};
	};
	var ordSet = function (dictOrd) {
		return {
			compare: function (s1) {
				return function (s2) {
					return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(toList(s1))(
						toList(s2)
					);
				};
			},
			Eq0: function () {
				return eqSet(dictOrd.Eq0());
			},
		};
	};
	var empty = Data_Map_Internal.empty;
	var fromFoldable = function (dictFoldable) {
		return function (dictOrd) {
			return Data_Foldable.foldl(dictFoldable)(function (m) {
				return function (a) {
					return insert(dictOrd)(a)(m);
				};
			})(empty);
		};
	};
	var monoidSet = function (dictOrd) {
		return {
			mempty: empty,
			Semigroup0: function () {
				return semigroupSet(dictOrd);
			},
		};
	};
	var $$delete = function (dictOrd) {
		return function (a) {
			return function (v) {
				return Data_Map_Internal['delete'](dictOrd)(a)(v);
			};
		};
	};
	exports['fromFoldable'] = fromFoldable;
	exports['empty'] = empty;
	exports['singleton'] = singleton;
	exports['insert'] = insert;
	exports['delete'] = $$delete;
	exports['union'] = union;
	exports['toMap'] = toMap;
	exports['eqSet'] = eqSet;
	exports['ordSet'] = ordSet;
	exports['monoidSet'] = monoidSet;
	exports['semigroupSet'] = semigroupSet;
	exports['foldableSet'] = foldableSet;
})(PS);
(function (exports) {
	'use strict';

	exports.intercalate = function (separator) {
		return function (xs) {
			var len = xs.length;
			if (len === 0) return '';

			var res = xs[0];
			for (var i = 1; i < len; i++) {
				res = res + separator + xs[i];
			}
			return res;
		};
	};
})((PS['Data.Show.Generic'] = PS['Data.Show.Generic'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Show.Generic'] = $PS['Data.Show.Generic'] || {};
	var exports = $PS['Data.Show.Generic'];
	var $foreign = $PS['Data.Show.Generic'];
	var Data_Generic_Rep = $PS['Data.Generic.Rep'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Type_Proxy = $PS['Type.Proxy'];
	var genericShowArgsNoArguments = {
		genericShowArgs: function (v) {
			return [];
		},
	};
	var genericShowArgs = function (dict) {
		return dict.genericShowArgs;
	};
	var genericShowConstructor = function (dictGenericShowArgs) {
		return function (dictIsSymbol) {
			return {
				"genericShow'": function (v) {
					var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(
						Type_Proxy['Proxy'].value
					);
					var v1 = genericShowArgs(dictGenericShowArgs)(v);
					if (v1.length === 0) {
						return ctor;
					}
					return (
						'(' +
						($foreign.intercalate(' ')(
							Data_Semigroup.append(Data_Semigroup.semigroupArray)([ctor])(v1)
						) +
							')')
					);
				},
			};
		};
	};
	var genericShow$prime = function (dict) {
		return dict["genericShow'"];
	};
	var genericShowSum = function (dictGenericShow) {
		return function (dictGenericShow1) {
			return {
				"genericShow'": function (v) {
					if (v instanceof Data_Generic_Rep.Inl) {
						return genericShow$prime(dictGenericShow)(v.value0);
					}
					if (v instanceof Data_Generic_Rep.Inr) {
						return genericShow$prime(dictGenericShow1)(v.value0);
					}
					throw new Error(
						'Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): ' +
							[v.constructor.name]
					);
				},
			};
		};
	};
	var genericShow = function (dictGeneric) {
		return function (dictGenericShow) {
			return function (x) {
				return genericShow$prime(dictGenericShow)(
					Data_Generic_Rep.from(dictGeneric)(x)
				);
			};
		};
	};
	exports['genericShow'] = genericShow;
	exports['genericShowArgsNoArguments'] = genericShowArgsNoArguments;
	exports['genericShowSum'] = genericShowSum;
	exports['genericShowConstructor'] = genericShowConstructor;
})(PS);
(function (exports) {
	'use strict';

	exports.fromCharArray = function (a) {
		return a.join('');
	};

	exports.singleton = function (c) {
		return c;
	};

	exports._charAt = function (just) {
		return function (nothing) {
			return function (i) {
				return function (s) {
					return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
				};
			};
		};
	};

	exports.length = function (s) {
		return s.length;
	};

	exports._indexOfStartingAt = function (just) {
		return function (nothing) {
			return function (x) {
				return function (startAt) {
					return function (s) {
						if (startAt < 0 || startAt > s.length) return nothing;
						var i = s.indexOf(x, startAt);
						return i === -1 ? nothing : just(i);
					};
				};
			};
		};
	};
})((PS['Data.String.CodeUnits'] = PS['Data.String.CodeUnits'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.String.CodeUnits'] = $PS['Data.String.CodeUnits'] || {};
	var exports = $PS['Data.String.CodeUnits'];
	var $foreign = $PS['Data.String.CodeUnits'];
	var Data_Maybe = $PS['Data.Maybe'];
	var indexOf$prime = $foreign['_indexOfStartingAt'](Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	var charAt = $foreign['_charAt'](Data_Maybe.Just.create)(
		Data_Maybe.Nothing.value
	);
	exports['charAt'] = charAt;
	exports["indexOf'"] = indexOf$prime;
	exports['singleton'] = $foreign.singleton;
	exports['fromCharArray'] = $foreign.fromCharArray;
	exports['length'] = $foreign.length;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Typelevel.Undefined'] = $PS['Data.Typelevel.Undefined'] || {};
	var exports = $PS['Data.Typelevel.Undefined'];
	var Data_Unit = $PS['Data.Unit'];
	var $$undefined = Data_Unit.unit;
	exports['undefined'] = $$undefined;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Typelevel.Num.Sets'] = $PS['Data.Typelevel.Num.Sets'] || {};
	var exports = $PS['Data.Typelevel.Num.Sets'];
	var Data_Typelevel_Undefined = $PS['Data.Typelevel.Undefined'];
	var toInt = function (dict) {
		return dict.toInt;
	};
	var toInt$prime = function (dictNat) {
		return function (v) {
			return toInt(dictNat)(Data_Typelevel_Undefined['undefined']);
		};
	};
	var natD8 = {
		toInt: function (v) {
			return 8;
		},
	};
	var posD8 = {
		Nat0: function () {
			return natD8;
		},
	};
	var natD3 = {
		toInt: function (v) {
			return 3;
		},
	};
	var posD3 = {
		Nat0: function () {
			return natD3;
		},
	};
	var natD2 = {
		toInt: function (v) {
			return 2;
		},
	};
	var posD2 = {
		Nat0: function () {
			return natD2;
		},
	};
	var natD1 = {
		toInt: function (v) {
			return 1;
		},
	};
	var posD1 = {
		Nat0: function () {
			return natD1;
		},
	};
	var natD0 = {
		toInt: function (v) {
			return 0;
		},
	};
	exports['toInt'] = toInt;
	exports["toInt'"] = toInt$prime;
	exports['natD0'] = natD0;
	exports['natD1'] = natD1;
	exports['natD2'] = natD2;
	exports['natD3'] = natD3;
	exports['natD8'] = natD8;
	exports['posD1'] = posD1;
	exports['posD2'] = posD2;
	exports['posD3'] = posD3;
	exports['posD8'] = posD8;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Typelevel.Num.Ops'] = $PS['Data.Typelevel.Num.Ops'] || {};
	var exports = $PS['Data.Typelevel.Num.Ops'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var typelevelSucc = function (dictPos) {
		return function (dictIsZero) {
			return function (dictDivMod10) {
				return function (dictSuccP) {
					return function (dictDivMod101) {
						return {
							Nat0: dictDivMod10.Nat1,
							Pos1: function () {
								return dictPos;
							},
						};
					};
				};
			};
		};
	};
	var divMod10D3D0 = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
		Nat1: function () {
			return Data_Typelevel_Num_Sets.natD3;
		},
	};
	var divMod10D2D0 = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
		Nat1: function () {
			return Data_Typelevel_Num_Sets.natD2;
		},
	};
	var divMod10D1D0 = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
		Nat1: function () {
			return Data_Typelevel_Num_Sets.natD1;
		},
	};
	var divMod10D0D0 = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
		Nat1: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
	};
	exports['typelevelSucc'] = typelevelSucc;
	exports['divMod10D0D0'] = divMod10D0D0;
	exports['divMod10D1D0'] = divMod10D1D0;
	exports['divMod10D2D0'] = divMod10D2D0;
	exports['divMod10D3D0'] = divMod10D3D0;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Data.Vec'] = $PS['Data.Vec'] || {};
	var exports = $PS['Data.Vec'];
	var Data_Array = $PS['Data.Array'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_Traversable = $PS['Data.Traversable'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var Type_Proxy = $PS['Type.Proxy'];
	var zipWithE = function (f) {
		return function (v) {
			return function (v1) {
				return Data_Array.zipWith(f)(v)(v1);
			};
		};
	};
	var zipWith = function (dictMin) {
		return function (f) {
			return function (v) {
				return function (v1) {
					return Data_Array.zipWith(f)(v)(v1);
				};
			};
		};
	};
	var traversableVec = Data_Traversable.traversableArray;
	var toArray = function (v) {
		return v;
	};
	var sortBy = function (f) {
		return function (v) {
			return Data_Array.sortBy(f)(v);
		};
	};
	var range = function (dictNat) {
		return function (dictNat1) {
			return function (dictMax) {
				return function (dictMin) {
					return function (dictSub) {
						return function (dictSucc) {
							return function (a) {
								return function (b) {
									return Data_Array.range(
										Data_Typelevel_Num_Sets.toInt(dictNat)(a)
									)(Data_Typelevel_Num_Sets.toInt(dictNat1)(b));
								};
							};
						};
					};
				};
			};
		};
	};
	var functorWithIndexVec = Data_FunctorWithIndex.functorWithIndexArray;
	var functorVec = Data_Functor.functorArray;
	var fill = function (dictNat) {
		return function (f) {
			var s = Data_Typelevel_Num_Sets["toInt'"](dictNat)(
				Type_Proxy['Proxy'].value
			);
			var range_ = (function () {
				if (s === 0) {
					return [];
				}
				return Data_Array.range(0)((s - 1) | 0);
			})();
			return Data_Functor.map(Data_Functor.functorArray)(f)(range_);
		};
	};
	var empty = [];
	var cons = function (dictSucc) {
		return function (x) {
			return function (v) {
				return Data_Array.cons(x)(v);
			};
		};
	};
	exports['empty'] = empty;
	exports['cons'] = cons;
	exports['fill'] = fill;
	exports['toArray'] = toArray;
	exports['zipWithE'] = zipWithE;
	exports['sortBy'] = sortBy;
	exports['functorVec'] = functorVec;
	exports['functorWithIndexVec'] = functorWithIndexVec;
	exports['traversableVec'] = traversableVec;
})(PS);
(function (exports) {
	'use strict';

	exports.error = function (s) {
		return function () {
			console.error(s);
		};
	};
})((PS['Effect.Console'] = PS['Effect.Console'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Console'] = $PS['Effect.Console'] || {};
	var exports = $PS['Effect.Console'];
	var $foreign = $PS['Effect.Console'];
	exports['error'] = $foreign.error;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Class.Console'] = $PS['Effect.Class.Console'] || {};
	var exports = $PS['Effect.Class.Console'];
	var Effect_Class = $PS['Effect.Class'];
	var Effect_Console = $PS['Effect.Console'];
	var error = function (dictMonadEffect) {
		var $40 = Effect_Class.liftEffect(dictMonadEffect);
		return function ($41) {
			return $40(Effect_Console.error($41));
		};
	};
	exports['error'] = error;
})(PS);
(function (exports) {
	'use strict';

	exports.now = function () {
		return Date.now();
	};
})((PS['Effect.Now'] = PS['Effect.Now'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Now'] = $PS['Effect.Now'] || {};
	var exports = $PS['Effect.Now'];
	var $foreign = $PS['Effect.Now'];
	exports['now'] = $foreign.now;
})(PS);
(function (exports) {
	'use strict';

	exports.random = Math.random;
})((PS['Effect.Random'] = PS['Effect.Random'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Random'] = $PS['Effect.Random'] || {};
	var exports = $PS['Effect.Random'];
	var $foreign = $PS['Effect.Random'];
	var Data_Int = $PS['Data.Int'];
	var randomInt = function (low) {
		return function (high) {
			return function __do() {
				var n = $foreign.random();
				var asNumber =
					(Data_Int.toNumber(high) - Data_Int.toNumber(low) + 1) * n +
					Data_Int.toNumber(low);
				return Data_Int.floor(asNumber);
			};
		};
	};
	exports['randomInt'] = randomInt;
})(PS);
(function (exports) {
	'use strict';

	exports.new = function (val) {
		return function () {
			return { value: val };
		};
	};

	exports.read = function (ref) {
		return function () {
			return ref.value;
		};
	};

	exports.modifyImpl = function (f) {
		return function (ref) {
			return function () {
				var t = f(ref.value);
				ref.value = t.state;
				return t.value;
			};
		};
	};

	exports.write = function (val) {
		return function (ref) {
			return function () {
				ref.value = val;
			};
		};
	};
})((PS['Effect.Ref'] = PS['Effect.Ref'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Ref'] = $PS['Effect.Ref'] || {};
	var exports = $PS['Effect.Ref'];
	var $foreign = $PS['Effect.Ref'];
	var Data_Functor = $PS['Data.Functor'];
	var Effect = $PS['Effect'];
	var modify$prime = $foreign.modifyImpl;
	var modify = function (f) {
		return modify$prime(function (s) {
			var s$prime = f(s);
			return {
				state: s$prime,
				value: s$prime,
			};
		});
	};
	var modify_ = function (f) {
		return function (s) {
			return Data_Functor['void'](Effect.functorEffect)(modify(f)(s));
		};
	};
	exports['modify'] = modify;
	exports['modify_'] = modify_;
	exports['new'] = $foreign['new'];
	exports['read'] = $foreign.read;
	exports['write'] = $foreign.write;
})(PS);
(function (exports) {
	/* no-redeclare global exports */
	'use strict';

	exports.setTimeout = function (ms) {
		return function (fn) {
			return function () {
				return setTimeout(fn, ms);
			};
		};
	};

	exports.clearTimeout = function (id) {
		return function () {
			clearTimeout(id);
		};
	};
})((PS['Effect.Timer'] = PS['Effect.Timer'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Timer'] = $PS['Effect.Timer'] || {};
	var exports = $PS['Effect.Timer'];
	var $foreign = $PS['Effect.Timer'];
	var Data_Ord = $PS['Data.Ord'];
	var eqTimeoutId = {
		eq: function (x) {
			return function (y) {
				return x === y;
			};
		},
	};
	var ordTimeoutId = {
		compare: function (x) {
			return function (y) {
				return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
			};
		},
		Eq0: function () {
			return eqTimeoutId;
		},
	};
	exports['ordTimeoutId'] = ordTimeoutId;
	exports['setTimeout'] = $foreign.setTimeout;
	exports['clearTimeout'] = $foreign.clearTimeout;
})(PS);
(function (exports) {
	'use strict';

	exports.unsafePerformEffect = function (f) {
		return f();
	};
})((PS['Effect.Unsafe'] = PS['Effect.Unsafe'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Effect.Unsafe'] = $PS['Effect.Unsafe'] || {};
	var exports = $PS['Effect.Unsafe'];
	var $foreign = $PS['Effect.Unsafe'];
	exports['unsafePerformEffect'] = $foreign.unsafePerformEffect;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['FRP.Behavior'] = $PS['FRP.Behavior'] || {};
	var exports = $PS['FRP.Behavior'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var ABehavior = function (x) {
		return x;
	};
	var sample = function (v) {
		return function (e) {
			return v(e);
		};
	};
	var functorABehavior = function (dictFunctor) {
		return {
			map: function (f) {
				return function (v) {
					return function (e) {
						return v(
							Data_Functor.map(dictFunctor)(function (v1) {
								return function ($66) {
									return v1(f($66));
								};
							})(e)
						);
					};
				};
			},
		};
	};
	var sampleBy = function (dictIsEvent) {
		return function (f) {
			return function (b) {
				return function (e) {
					return sample(
						Data_Functor.map(
							functorABehavior(dictIsEvent.Filterable1().Functor1())
						)(f)(b)
					)(
						Data_Functor.map(dictIsEvent.Filterable1().Functor1())(
							Data_Function.applyFlipped
						)(e)
					);
				};
			};
		};
	};
	var sample_ = function (dictIsEvent) {
		return sampleBy(dictIsEvent)(Data_Function['const']);
	};
	var behavior = ABehavior;
	var applyABehavior = function (dictFunctor) {
		return {
			apply: function (v) {
				return function (v1) {
					return function (e) {
						return v1(
							v(
								Data_Functor.map(dictFunctor)(
									Control_Semigroupoid.compose(
										Control_Semigroupoid.semigroupoidFn
									)
								)(e)
							)
						);
					};
				};
			},
			Functor0: function () {
				return functorABehavior(dictFunctor);
			},
		};
	};
	var applicativeABehavior = function (dictFunctor) {
		return {
			pure: function (a) {
				return function (e) {
					return Data_Functor.map(dictFunctor)(Data_Function.applyFlipped(a))(
						e
					);
				};
			},
			Apply0: function () {
				return applyABehavior(dictFunctor);
			},
		};
	};
	exports['behavior'] = behavior;
	exports['sampleBy'] = sampleBy;
	exports['sample_'] = sample_;
	exports['functorABehavior'] = functorABehavior;
	exports['applyABehavior'] = applyABehavior;
	exports['applicativeABehavior'] = applicativeABehavior;
})(PS);
(function (exports) {
	'use strict';

	exports.reallyUnsafeRefEq = function (a) {
		return function (b) {
			return a === b;
		};
	};
})((PS['Unsafe.Reference'] = PS['Unsafe.Reference'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Unsafe.Reference'] = $PS['Unsafe.Reference'] || {};
	var exports = $PS['Unsafe.Reference'];
	var $foreign = $PS['Unsafe.Reference'];
	var unsafeRefEq = $foreign.reallyUnsafeRefEq;
	exports['unsafeRefEq'] = unsafeRefEq;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['FRP.Event'] = $PS['FRP.Event'] || {};
	var exports = $PS['FRP.Event'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Data_Array = $PS['Data.Array'];
	var Data_Either = $PS['Data.Either'];
	var Data_Filterable = $PS['Data.Filterable'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_HeytingAlgebra = $PS['Data.HeytingAlgebra'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Unit = $PS['Data.Unit'];
	var Effect = $PS['Effect'];
	var Effect_Ref = $PS['Effect.Ref'];
	var Effect_Unsafe = $PS['Effect.Unsafe'];
	var Unsafe_Reference = $PS['Unsafe.Reference'];
	var Event = function (x) {
		return x;
	};
	var subscribe = function (v) {
		return function (k) {
			return v(k);
		};
	};
	var sampleOn = function (v) {
		return function (v1) {
			return function (k) {
				return function __do() {
					var latest = Effect_Ref['new'](Data_Maybe.Nothing.value)();
					var c1 = v(function (a) {
						return Effect_Ref.write(new Data_Maybe.Just(a))(latest);
					})();
					var c2 = v1(function (f) {
						return Control_Bind.bind(Effect.bindEffect)(
							Effect_Ref.read(latest)
						)(
							Data_Foldable.traverse_(Effect.applicativeEffect)(
								Data_Foldable.foldableMaybe
							)(function ($53) {
								return k(f($53));
							})
						);
					})();
					return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
				};
			};
		};
	};
	var makeEvent = Event;
	var keepLatest = function (v) {
		return function (k) {
			return function __do() {
				var cancelInner = Effect_Ref['new'](Data_Maybe.Nothing.value)();
				var cancelOuter = v(function (inner) {
					return function __do() {
						Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(
							Data_Foldable.sequence_(Effect.applicativeEffect)(
								Data_Foldable.foldableMaybe
							)
						)();
						var c = subscribe(inner)(k)();
						return Effect_Ref.write(new Data_Maybe.Just(c))(cancelInner)();
					};
				})();
				return function __do() {
					Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(cancelInner))(
						Data_Foldable.sequence_(Effect.applicativeEffect)(
							Data_Foldable.foldableMaybe
						)
					)();
					return cancelOuter();
				};
			};
		};
	};
	var functorEvent = {
		map: function (f) {
			return function (v) {
				return function (k) {
					return v(function ($54) {
						return k(f($54));
					});
				};
			};
		},
	};
	var fold = function (f) {
		return function (v) {
			return function (b) {
				return function (k) {
					return function __do() {
						var result = Effect_Ref['new'](b)();
						return v(function (a) {
							return Control_Bind.bind(Effect.bindEffect)(
								Effect_Ref.modify(f(a))(result)
							)(k);
						})();
					};
				};
			};
		};
	};
	var filter = function (p) {
		return function (v) {
			return function (k) {
				return v(function (a) {
					var v1 = p(a);
					if (v1 instanceof Data_Maybe.Just) {
						return k(v1.value0);
					}
					if (v1 instanceof Data_Maybe.Nothing) {
						return Control_Applicative.pure(Effect.applicativeEffect)(
							Data_Unit.unit
						);
					}
					throw new Error(
						'Failed pattern match at FRP.Event (line 134, column 13 - line 136, column 27): ' +
							[v1.constructor.name]
					);
				});
			};
		};
	};
	var filter$prime = function (f) {
		return filter(function (a) {
			var v = f(a);
			if (v) {
				return new Data_Maybe.Just(a);
			}
			if (!v) {
				return Data_Maybe.Nothing.value;
			}
			throw new Error(
				'Failed pattern match at FRP.Event (line 64, column 13 - line 66, column 25): ' +
					[v.constructor.name]
			);
		});
	};
	var create = function __do() {
		var subscribers = Effect_Ref['new']([])();
		return {
			event: function (k) {
				return function __do() {
					Effect_Ref.modify(function (v) {
						return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([k]);
					})(subscribers)();
					return function __do() {
						Effect_Ref.modify(
							Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k)
						)(subscribers)();
						return Data_Unit.unit;
					};
				};
			},
			push: function (a) {
				return Control_Bind.bind(Effect.bindEffect)(
					Effect_Ref.read(subscribers)
				)(
					Data_Foldable.traverse_(Effect.applicativeEffect)(
						Data_Foldable.foldableArray
					)(function (k) {
						return k(a);
					})
				);
			},
		};
	};
	var fix = function (f) {
		var v = Effect_Unsafe.unsafePerformEffect(create);
		var v1 = f(v.event);
		return function (k) {
			return function __do() {
				var c1 = subscribe(v1.input)(v.push)();
				var c2 = subscribe(v1.output)(k)();
				return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
			};
		};
	};
	var compactableEvent = {
		compact: filter(Control_Category.identity(Control_Category.categoryFn)),
		separate: function (xs) {
			return {
				left: filter(function (v) {
					if (v instanceof Data_Either.Left) {
						return new Data_Maybe.Just(v.value0);
					}
					if (v instanceof Data_Either.Right) {
						return Data_Maybe.Nothing.value;
					}
					throw new Error(
						'Failed pattern match at FRP.Event (line 47, column 13 - line 49, column 33): ' +
							[v.constructor.name]
					);
				})(xs),
				right: filter(function (v) {
					if (v instanceof Data_Either.Right) {
						return new Data_Maybe.Just(v.value0);
					}
					if (v instanceof Data_Either.Left) {
						return Data_Maybe.Nothing.value;
					}
					throw new Error(
						'Failed pattern match at FRP.Event (line 54, column 13 - line 56, column 32): ' +
							[v.constructor.name]
					);
				})(xs),
			};
		},
	};
	var filterableEvent = {
		filter: filter$prime,
		filterMap: filter,
		partition: function (p) {
			return function (xs) {
				return {
					yes: filter$prime(p)(xs),
					no: filter$prime(
						(function () {
							var $55 = Data_HeytingAlgebra.not(
								Data_HeytingAlgebra.heytingAlgebraBoolean
							);
							return function ($56) {
								return $55(p($56));
							};
						})()
					)(xs),
				};
			};
		},
		partitionMap: function (f) {
			return function (xs) {
				return {
					left: Data_Filterable.filterMap(filterableEvent)(
						(function () {
							var $57 = Data_Either.either(Data_Maybe.Just.create)(
								Data_Function['const'](Data_Maybe.Nothing.value)
							);
							return function ($58) {
								return $57(f($58));
							};
						})()
					)(xs),
					right: Data_Filterable.filterMap(filterableEvent)(function ($59) {
						return Data_Either.hush(f($59));
					})(xs),
				};
			};
		},
		Compactable0: function () {
			return compactableEvent;
		},
		Functor1: function () {
			return functorEvent;
		},
	};
	var applyEvent = {
		apply: function (v) {
			return function (v1) {
				return function (k) {
					return function __do() {
						var latestA = Effect_Ref['new'](Data_Maybe.Nothing.value)();
						var latestB = Effect_Ref['new'](Data_Maybe.Nothing.value)();
						var c1 = v(function (a) {
							return function __do() {
								Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();
								return Control_Bind.bind(Effect.bindEffect)(
									Effect_Ref.read(latestB)
								)(
									Data_Foldable.traverse_(Effect.applicativeEffect)(
										Data_Foldable.foldableMaybe
									)(function ($60) {
										return k(a($60));
									})
								)();
							};
						})();
						var c2 = v1(function (b) {
							return function __do() {
								Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();
								return Control_Bind.bind(Effect.bindEffect)(
									Effect_Ref.read(latestA)
								)(
									Data_Foldable.traverse_(Effect.applicativeEffect)(
										Data_Foldable.foldableMaybe
									)(function ($61) {
										return k(
											(function (v2) {
												return v2(b);
											})($61)
										);
									})
								)();
							};
						})();
						return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
					};
				};
			};
		},
		Functor0: function () {
			return functorEvent;
		},
	};
	var applicativeEvent = {
		pure: function (a) {
			return function (k) {
				return function __do() {
					k(a)();
					return Control_Applicative.pure(Effect.applicativeEffect)(
						Data_Unit.unit
					);
				};
			};
		},
		Apply0: function () {
			return applyEvent;
		},
	};
	var altEvent = {
		alt: function (v) {
			return function (v1) {
				return function (k) {
					return function __do() {
						var c1 = v(k)();
						var c2 = v1(k)();
						return Control_Apply.applySecond(Effect.applyEffect)(c1)(c2);
					};
				};
			};
		},
		Functor0: function () {
			return functorEvent;
		},
	};
	var plusEvent = {
		empty: function (v) {
			return Control_Applicative.pure(Effect.applicativeEffect)(
				Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)
			);
		},
		Alt0: function () {
			return altEvent;
		},
	};
	var alternativeEvent = {
		Applicative0: function () {
			return applicativeEvent;
		},
		Plus1: function () {
			return plusEvent;
		},
	};
	var eventIsEvent = {
		fold: fold,
		keepLatest: keepLatest,
		sampleOn: sampleOn,
		fix: fix,
		Alternative0: function () {
			return alternativeEvent;
		},
		Filterable1: function () {
			return filterableEvent;
		},
	};
	exports['create'] = create;
	exports['makeEvent'] = makeEvent;
	exports['subscribe'] = subscribe;
	exports['functorEvent'] = functorEvent;
	exports['applyEvent'] = applyEvent;
	exports['applicativeEvent'] = applicativeEvent;
	exports['eventIsEvent'] = eventIsEvent;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['FRP.Event.Time'] = $PS['FRP.Event.Time'] || {};
	var exports = $PS['FRP.Event.Time'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Set = $PS['Data.Set'];
	var Data_Unit = $PS['Data.Unit'];
	var Effect = $PS['Effect'];
	var Effect_Now = $PS['Effect.Now'];
	var Effect_Ref = $PS['Effect.Ref'];
	var Effect_Timer = $PS['Effect.Timer'];
	var FRP_Event = $PS['FRP.Event'];
	var withTime = function (e) {
		return FRP_Event.makeEvent(function (k) {
			return FRP_Event.subscribe(e)(function (value) {
				return function __do() {
					var time = Effect_Now.now();
					return k({
						time: time,
						value: value,
					})();
				};
			});
		});
	};
	var delay = function (n) {
		return function (e) {
			return FRP_Event.makeEvent(function (k) {
				return function __do() {
					var tid = Effect_Ref['new'](
						Data_Monoid.mempty(Data_Set.monoidSet(Effect_Timer.ordTimeoutId))
					)();
					var canceler = FRP_Event.subscribe(e)(function (a) {
						return function __do() {
							var localId = Effect_Ref['new'](Data_Maybe.Nothing.value)();
							var id = Effect_Timer.setTimeout(n)(function __do() {
								k(a)();
								var lid = Effect_Ref.read(localId)();
								return Data_Maybe.maybe(
									Control_Applicative.pure(Effect.applicativeEffect)(
										Data_Unit.unit
									)
								)(function (id) {
									return Effect_Ref.modify_(
										Data_Set['delete'](Effect_Timer.ordTimeoutId)(id)
									)(tid);
								})(lid)();
							})();
							Effect_Ref.write(new Data_Maybe.Just(id))(localId)();
							return Effect_Ref.modify_(
								Data_Semigroup.append(
									Data_Set.semigroupSet(Effect_Timer.ordTimeoutId)
								)(Data_Set.singleton(id))
							)(tid)();
						};
					})();
					return function __do() {
						var ids = Effect_Ref.read(tid)();
						Data_Foldable.for_(Effect.applicativeEffect)(Data_Set.foldableSet)(
							ids
						)(Effect_Timer.clearTimeout)();
						return canceler();
					};
				};
			});
		};
	};
	exports['withTime'] = withTime;
	exports['delay'] = delay;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['FRP.Behavior.Time'] = $PS['FRP.Behavior.Time'] || {};
	var exports = $PS['FRP.Behavior.Time'];
	var Data_Functor = $PS['Data.Functor'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Event = $PS['FRP.Event'];
	var FRP_Event_Time = $PS['FRP.Event.Time'];
	var instant = FRP_Behavior.behavior(function (e) {
		return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
			return v.value(v.time);
		})(FRP_Event_Time.withTime(e));
	});
	exports['instant'] = instant;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['FRP.Event.Class'] = $PS['FRP.Event.Class'] || {};
	var exports = $PS['FRP.Event.Class'];
	var fold = function (dict) {
		return dict.fold;
	};
	exports['fold'] = fold;
})(PS);
(function (exports) {
	'use strict';

	exports.unsafeReadPropImpl = function (f, s, key, value) {
		return value == null ? f : s(value[key]);
	};
})((PS['Foreign.Index'] = PS['Foreign.Index'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Foreign.Index'] = $PS['Foreign.Index'] || {};
	var exports = $PS['Foreign.Index'];
	var $foreign = $PS['Foreign.Index'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Foreign = $PS['Foreign'];
	var unsafeReadProp = function (dictMonad) {
		return function (k) {
			return function (value) {
				return $foreign.unsafeReadPropImpl(
					Foreign.fail(dictMonad)(
						new Foreign.TypeMismatch('object', Foreign.typeOf(value))
					),
					Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(dictMonad)
					),
					k,
					value
				);
			};
		};
	};
	var readProp = function (dictMonad) {
		return unsafeReadProp(dictMonad);
	};
	exports['readProp'] = readProp;
})(PS);
(function (exports) {
	'use strict';

	exports._copyST = function (m) {
		return function () {
			var r = {};
			for (var k in m) {
				if (hasOwnProperty.call(m, k)) {
					r[k] = m[k];
				}
			}
			return r;
		};
	};

	exports.runST = function (f) {
		return f();
	};

	exports._fmapObject = function (m0, f) {
		var m = {};
		for (var k in m0) {
			if (hasOwnProperty.call(m0, k)) {
				m[k] = f(m0[k]);
			}
		}
		return m;
	};

	exports._foldM = function (bind) {
		return function (f) {
			return function (mz) {
				return function (m) {
					var acc = mz;
					function g(k) {
						return function (z) {
							return f(z)(k)(m[k]);
						};
					}
					for (var k in m) {
						if (hasOwnProperty.call(m, k)) {
							acc = bind(acc)(g(k));
						}
					}
					return acc;
				};
			};
		};
	};

	exports.all = function (f) {
		return function (m) {
			for (var k in m) {
				if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
			}
			return true;
		};
	};

	exports._lookup = function (no, yes, k, m) {
		return k in m ? yes(m[k]) : no;
	};

	function toArrayWithKey(f) {
		return function (m) {
			var r = [];
			for (var k in m) {
				if (hasOwnProperty.call(m, k)) {
					r.push(f(k)(m[k]));
				}
			}
			return r;
		};
	}

	exports.toArrayWithKey = toArrayWithKey;
})((PS['Foreign.Object'] = PS['Foreign.Object'] || {}));
(function (exports) {
	'use strict';

	exports['new'] = function () {
		return {};
	};

	exports.poke = function (k) {
		return function (v) {
			return function (m) {
				return function () {
					m[k] = v;
					return m;
				};
			};
		};
	};
})((PS['Foreign.Object.ST'] = PS['Foreign.Object.ST'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Foreign.Object.ST'] = $PS['Foreign.Object.ST'] || {};
	var exports = $PS['Foreign.Object.ST'];
	var $foreign = $PS['Foreign.Object.ST'];
	exports['new'] = $foreign['new'];
	exports['poke'] = $foreign.poke;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Foreign.Object'] = $PS['Foreign.Object'] || {};
	var exports = $PS['Foreign.Object'];
	var $foreign = $PS['Foreign.Object'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad_ST_Internal = $PS['Control.Monad.ST.Internal'];
	var Data_Array = $PS['Data.Array'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function_Uncurried = $PS['Data.Function.Uncurried'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Foreign_Object_ST = $PS['Foreign.Object.ST'];
	var toUnfoldable = function (dictUnfoldable) {
		var $36 = Data_Array.toUnfoldable(dictUnfoldable);
		var $37 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
		return function ($38) {
			return $36($37($38));
		};
	};
	var toAscUnfoldable = function (dictUnfoldable) {
		var $39 = Data_Array.toUnfoldable(dictUnfoldable);
		var $40 = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst);
		var $41 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
		return function ($42) {
			return $39($40($41($42)));
		};
	};
	var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
	var thawST = $foreign['_copyST'];
	var singleton = function (k) {
		return function (v) {
			return $foreign.runST(
				Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(
					Foreign_Object_ST.poke(k)(v)
				)(Foreign_Object_ST['new'])
			);
		};
	};
	var mutate = function (f) {
		return function (m) {
			return $foreign.runST(function __do() {
				var s = thawST(m)();
				f(s)();
				return s;
			});
		};
	};
	var lookup = Data_Function_Uncurried.runFn4($foreign['_lookup'])(
		Data_Maybe.Nothing.value
	)(Data_Maybe.Just.create);
	var isSubmap = function (dictEq) {
		return function (m1) {
			return function (m2) {
				var f = function (k) {
					return function (v) {
						return $foreign['_lookup'](false, Data_Eq.eq(dictEq)(v), k, m2);
					};
				};
				return $foreign.all(f)(m1);
			};
		};
	};
	var functorObject = {
		map: function (f) {
			return function (m) {
				return $foreign['_fmapObject'](m, f);
			};
		},
	};
	var fromFoldable = function (dictFoldable) {
		return function (l) {
			return $foreign.runST(function __do() {
				var s = Foreign_Object_ST['new']();
				Control_Monad_ST_Internal.foreach(
					Data_Array.fromFoldable(dictFoldable)(l)
				)(function (v) {
					return Data_Functor['void'](Control_Monad_ST_Internal.functorST)(
						Foreign_Object_ST.poke(v.value0)(v.value1)(s)
					);
				})();
				return s;
			});
		};
	};
	var foldM = function (dictMonad) {
		return function (f) {
			return function (z) {
				return $foreign['_foldM'](Control_Bind.bind(dictMonad.Bind1()))(f)(
					Control_Applicative.pure(dictMonad.Applicative0())(z)
				);
			};
		};
	};
	var union = function (m) {
		return mutate(function (s) {
			return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
				return function (k) {
					return function (v) {
						return Foreign_Object_ST.poke(k)(v)(s$prime);
					};
				};
			})(s)(m);
		});
	};
	var eqObject = function (dictEq) {
		return {
			eq: function (m1) {
				return function (m2) {
					return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
				};
			},
		};
	};
	var ordObject = function (dictOrd) {
		return {
			compare: function (m1) {
				return function (m2) {
					return Data_Ord.compare(
						Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd))
					)(toAscArray(m1))(toAscArray(m2));
				};
			},
			Eq0: function () {
				return eqObject(dictOrd.Eq0());
			},
		};
	};
	exports['singleton'] = singleton;
	exports['lookup'] = lookup;
	exports['toUnfoldable'] = toUnfoldable;
	exports['fromFoldable'] = fromFoldable;
	exports['union'] = union;
	exports['functorObject'] = functorObject;
	exports['eqObject'] = eqObject;
	exports['ordObject'] = ordObject;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Heterogeneous.Mapping'] = $PS['Heterogeneous.Mapping'] || {};
	var exports = $PS['Heterogeneous.Mapping'];
	var Control_Category = $PS['Control.Category'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Record_Builder = $PS['Record.Builder'];
	var Type_Proxy = $PS['Type.Proxy'];
	var ConstMapping = function (x) {
		return x;
	};
	var mappingWithIndex = function (dict) {
		return dict.mappingWithIndex;
	};
	var mappingFunction = {
		mapping: function (k) {
			return k;
		},
	};
	var mapping = function (dict) {
		return dict.mapping;
	};
	var mapRecordWithIndexNil = {
		mapRecordWithIndexBuilder: function (v) {
			return function (v1) {
				return Control_Category.identity(Record_Builder.categoryBuilder);
			};
		},
	};
	var mapRecordWithIndexBuilder = function (dict) {
		return dict.mapRecordWithIndexBuilder;
	};
	var mapRecordWithIndexCons = function (dictIsSymbol) {
		return function (dictMappingWithIndex) {
			return function (dictMapRecordWithIndex) {
				return function (dictCons) {
					return function (dictCons1) {
						return {
							mapRecordWithIndexBuilder: function (v) {
								return function (f) {
									return Control_Semigroupoid.compose(
										Record_Builder.semigroupoidBuilder
									)(
										Record_Builder.modify()()(dictIsSymbol)(
											Type_Proxy['Proxy'].value
										)(
											mappingWithIndex(dictMappingWithIndex)(f)(
												Type_Proxy['Proxy'].value
											)
										)
									)(
										mapRecordWithIndexBuilder(dictMapRecordWithIndex)(
											Type_Proxy['Proxy'].value
										)(f)
									);
								};
							},
						};
					};
				};
			};
		};
	};
	var hmapWithIndexRecord = function (dictRowToList) {
		return function (dictMapRecordWithIndex) {
			return {
				hmapWithIndex: (function () {
					var $78 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)(
						Type_Proxy['Proxy'].value
					);
					return function ($79) {
						return Record_Builder.build($78($79));
					};
				})(),
			};
		};
	};
	var hmapWithIndex = function (dict) {
		return dict.hmapWithIndex;
	};
	var hmapRecord = function (dictRowToList) {
		return function (dictMapRecordWithIndex) {
			return {
				hmap: (function () {
					var $84 = mapRecordWithIndexBuilder(dictMapRecordWithIndex)(
						Type_Proxy['Proxy'].value
					);
					return function ($85) {
						return Record_Builder.build($84(ConstMapping($85)));
					};
				})(),
			};
		};
	};
	var hmap = function (dict) {
		return dict.hmap;
	};
	var constMapping = function (dictMapping) {
		return {
			mappingWithIndex: function (v) {
				return function (v1) {
					return mapping(dictMapping)(v);
				};
			},
		};
	};
	exports['hmap'] = hmap;
	exports['hmapWithIndex'] = hmapWithIndex;
	exports['mappingFunction'] = mappingFunction;
	exports['constMapping'] = constMapping;
	exports['hmapRecord'] = hmapRecord;
	exports['hmapWithIndexRecord'] = hmapWithIndexRecord;
	exports['mapRecordWithIndexCons'] = mapRecordWithIndexCons;
	exports['mapRecordWithIndexNil'] = mapRecordWithIndexNil;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Random.LCG'] = $PS['Random.LCG'] || {};
	var exports = $PS['Random.LCG'];
	var Data_EuclideanRing = $PS['Data.EuclideanRing'];
	var Data_Int = $PS['Data.Int'];
	var Data_Maybe = $PS['Data.Maybe'];
	var $$Math = $PS['Math'];
	var Seed = function (x) {
		return x;
	};
	var unSeed = function (v) {
		return v;
	};
	var seedMin = 1;
	var lcgM = 2147483647;
	var seedMax = (lcgM - 1) | 0;
	var mkSeed = function (x) {
		var ensureBetween = function (min) {
			return function (max) {
				return function (n) {
					var rangeSize = (max - min) | 0;
					var n$prime = Data_EuclideanRing.mod(
						Data_EuclideanRing.euclideanRingInt
					)(n)(rangeSize);
					var $14 = n$prime < min;
					if ($14) {
						return (n$prime + max) | 0;
					}
					return n$prime;
				};
			};
		};
		return ensureBetween(seedMin)(seedMax)(x);
	};
	var lcgC = 0;
	var lcgA = 48271;
	var lcgPerturb = function (d) {
		return function (v) {
			return Seed(
				Data_Maybe.fromJust()(
					Data_Int.fromNumber(
						$$Math.remainder(
							Data_Int.toNumber(lcgA) * Data_Int.toNumber(v) +
								Data_Int.toNumber(d)
						)(Data_Int.toNumber(lcgM))
					)
				)
			);
		};
	};
	var lcgNext = lcgPerturb(lcgC);
	exports['mkSeed'] = mkSeed;
	exports['unSeed'] = unSeed;
	exports['lcgM'] = lcgM;
	exports['lcgNext'] = lcgNext;
})(PS);
(function (exports) {
	exports._unsafeStringify = JSON.stringify;
})((PS['Simple.JSON'] = PS['Simple.JSON'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Simple.JSON'] = $PS['Simple.JSON'] || {};
	var exports = $PS['Simple.JSON'];
	var $foreign = $PS['Simple.JSON'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Control_Monad_Except = $PS['Control.Monad.Except'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var Data_Either = $PS['Data.Either'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Foreign = $PS['Foreign'];
	var Foreign_Index = $PS['Foreign.Index'];
	var Record_Builder = $PS['Record.Builder'];
	var Type_Proxy = $PS['Type.Proxy'];
	var writeImpl = function (dict) {
		return dict.writeImpl;
	};
	var writeJSON = function (dictWriteForeign) {
		var $93 = writeImpl(dictWriteForeign);
		return function ($94) {
			return $foreign['_unsafeStringify']($93($94));
		};
	};
	var writeForeignForeign = {
		writeImpl: Control_Category.identity(Control_Category.categoryFn),
	};
	var readString = {
		readImpl: Foreign.readString(Data_Identity.monadIdentity),
	};
	var readNumber = {
		readImpl: Foreign.readNumber(Data_Identity.monadIdentity),
	};
	var readImpl = function (dict) {
		return dict.readImpl;
	};
	var readFieldsNil = {
		getFields: function (v) {
			return function (v1) {
				return Control_Applicative.pure(
					Control_Monad_Except_Trans.applicativeExceptT(
						Data_Identity.monadIdentity
					)
				)(Control_Category.identity(Record_Builder.categoryBuilder));
			};
		},
	};
	var readBoolean = {
		readImpl: Foreign.readBoolean(Data_Identity.monadIdentity),
	};
	var getFields = function (dict) {
		return dict.getFields;
	};
	var readRecord = function (dictRowToList) {
		return function (dictReadForeignFields) {
			return {
				readImpl: function (o) {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(Data_Function.flip(Record_Builder.build)({}))(
						getFields(dictReadForeignFields)(Type_Proxy['Proxy'].value)(o)
					);
				},
			};
		};
	};
	var applyEither = function (dictSemigroup) {
		return function (v) {
			return function (v1) {
				if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Right) {
					return new Data_Either.Left(v.value0);
				}
				if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
					return new Data_Either.Left(
						Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0)
					);
				}
				if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Left) {
					return new Data_Either.Left(v1.value0);
				}
				if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
					return new Data_Either.Right(v.value0(v1.value0));
				}
				throw new Error(
					'Failed pattern match at Simple.JSON (line 241, column 1 - line 241, column 90): ' +
						[v.constructor.name, v1.constructor.name]
				);
			};
		};
	};
	var exceptTApply = function (dictSemigroup) {
		return function (dictApplicative) {
			return function (fun) {
				return function (a) {
					return Control_Monad_Except_Trans.ExceptT(
						Control_Apply.apply(dictApplicative.Apply0())(
							Data_Functor.map(dictApplicative.Apply0().Functor0())(
								applyEither(dictSemigroup)
							)(Control_Monad_Except_Trans.runExceptT(fun))
						)(Control_Monad_Except_Trans.runExceptT(a))
					);
				};
			};
		};
	};
	var readFieldsCons = function (dictIsSymbol) {
		return function (dictReadForeign) {
			return function (dictReadForeignFields) {
				return function (dictLacks) {
					return function (dictCons) {
						return {
							getFields: function (v) {
								return function (obj) {
									var rest = getFields(dictReadForeignFields)(
										Type_Proxy['Proxy'].value
									)(obj);
									var name = Data_Symbol.reflectSymbol(dictIsSymbol)(
										Data_Symbol.SProxy.value
									);
									var withExcept$prime = Control_Monad_Except.withExcept(
										Data_Functor.map(Data_List_Types.functorNonEmptyList)(
											Foreign.ErrorAtProperty.create(name)
										)
									);
									var first = Control_Bind.bind(
										Control_Monad_Except_Trans.bindExceptT(
											Data_Identity.monadIdentity
										)
									)(
										withExcept$prime(
											Control_Bind.bindFlipped(
												Control_Monad_Except_Trans.bindExceptT(
													Data_Identity.monadIdentity
												)
											)(readImpl(dictReadForeign))(
												Foreign_Index.readProp(Data_Identity.monadIdentity)(
													name
												)(obj)
											)
										)
									)(function (value) {
										return Control_Applicative.pure(
											Control_Monad_Except_Trans.applicativeExceptT(
												Data_Identity.monadIdentity
											)
										)(
											Record_Builder.insert()()(dictIsSymbol)(
												Data_Symbol.SProxy.value
											)(value)
										);
									});
									return exceptTApply(Data_List_Types.semigroupNonEmptyList)(
										Data_Identity.applicativeIdentity
									)(
										Data_Functor.map(
											Control_Monad_Except_Trans.functorExceptT(
												Data_Identity.functorIdentity
											)
										)(
											Control_Semigroupoid.compose(
												Record_Builder.semigroupoidBuilder
											)
										)(first)
									)(rest);
								};
							},
						};
					};
				};
			};
		};
	};
	exports['writeJSON'] = writeJSON;
	exports['readImpl'] = readImpl;
	exports['readNumber'] = readNumber;
	exports['readString'] = readString;
	exports['readBoolean'] = readBoolean;
	exports['readRecord'] = readRecord;
	exports['readFieldsCons'] = readFieldsCons;
	exports['readFieldsNil'] = readFieldsNil;
	exports['writeForeignForeign'] = writeForeignForeign;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Test.QuickCheck.Gen'] = $PS['Test.QuickCheck.Gen'] || {};
	var exports = $PS['Test.QuickCheck.Gen'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Monad_State = $PS['Control.Monad.State'];
	var Control_Monad_State_Class = $PS['Control.Monad.State.Class'];
	var Control_Monad_State_Trans = $PS['Control.Monad.State.Trans'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_Int = $PS['Data.Int'];
	var Data_Semiring = $PS['Data.Semiring'];
	var Data_Tuple = $PS['Data.Tuple'];
	var $$Math = $PS['Math'];
	var Random_LCG = $PS['Random.LCG'];
	var Gen = function (x) {
		return x;
	};
	var unGen = function (v) {
		return v;
	};
	var lcgStep = (function () {
		var f = function (s) {
			return new Data_Tuple.Tuple(
				Random_LCG.unSeed(s.newSeed),
				(function () {
					var $35 = {};
					for (var $36 in s) {
						if ({}.hasOwnProperty.call(s, $36)) {
							$35[$36] = s[$36];
						}
					}
					$35.newSeed = Random_LCG.lcgNext(s.newSeed);
					return $35;
				})()
			);
		};
		return Gen(
			Control_Monad_State_Class.state(
				Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)
			)(f)
		);
	})();
	var functorGen = Control_Monad_State_Trans.functorStateT(
		Data_Identity.functorIdentity
	);
	var uniform = Data_Functor.map(functorGen)(function (n) {
		return Data_Int.toNumber(n) / Data_Int.toNumber(Random_LCG.lcgM);
	})(lcgStep);
	var evalGen = function ($52) {
		return Control_Monad_State.evalState(unGen($52));
	};
	var bindGen = Control_Monad_State_Trans.bindStateT(
		Data_Identity.monadIdentity
	);
	var applyGen = Control_Monad_State_Trans.applyStateT(
		Data_Identity.monadIdentity
	);
	var chooseInt$prime = function (a) {
		return function (b) {
			var numB = Data_Int.toNumber(b);
			var numA = Data_Int.toNumber(a);
			var clamp = function (x) {
				return numA + $$Math.remainder(x)(numB - numA + 1);
			};
			var choose31BitPosNumber = Data_Functor.map(functorGen)(
				Data_Int.toNumber
			)(lcgStep);
			var choose32BitPosNumber = Control_Apply.apply(applyGen)(
				Data_Functor.map(functorGen)(
					Data_Semiring.add(Data_Semiring.semiringNumber)
				)(choose31BitPosNumber)
			)(
				Data_Functor.map(functorGen)(
					Data_Semiring.mul(Data_Semiring.semiringNumber)(2.0)
				)(choose31BitPosNumber)
			);
			return Data_Functor.map(functorGen)(function ($58) {
				return Data_Int.floor(clamp($58));
			})(choose32BitPosNumber);
		};
	};
	var chooseInt = function (a) {
		return function (b) {
			var $49 = a <= b;
			if ($49) {
				return chooseInt$prime(a)(b);
			}
			return chooseInt$prime(b)(a);
		};
	};
	var applicativeGen = Control_Monad_State_Trans.applicativeStateT(
		Data_Identity.monadIdentity
	);
	exports['chooseInt'] = chooseInt;
	exports['evalGen'] = evalGen;
	exports['uniform'] = uniform;
	exports['functorGen'] = functorGen;
	exports['applyGen'] = applyGen;
	exports['applicativeGen'] = applicativeGen;
	exports['bindGen'] = bindGen;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Test.QuickCheck.Arbitrary'] = $PS['Test.QuickCheck.Arbitrary'] || {};
	var exports = $PS['Test.QuickCheck.Arbitrary'];
	var Test_QuickCheck_Gen = $PS['Test.QuickCheck.Gen'];
	var arbitrary = function (dict) {
		return dict.arbitrary;
	};
	var arbNumber = {
		arbitrary: Test_QuickCheck_Gen.uniform,
	};
	var arbInt = {
		arbitrary: Test_QuickCheck_Gen.chooseInt(-1000000 | 0)(1000000),
	};
	exports['arbitrary'] = arbitrary;
	exports['arbNumber'] = arbNumber;
	exports['arbInt'] = arbInt;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Text.Parsing.StringParser'] = $PS['Text.Parsing.StringParser'] || {};
	var exports = $PS['Text.Parsing.StringParser'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad_Rec_Class = $PS['Control.Monad.Rec.Class'];
	var Data_Bifunctor = $PS['Data.Bifunctor'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Either = $PS['Data.Either'];
	var Data_Functor = $PS['Data.Functor'];
	var unParser = function (v) {
		return v;
	};
	var $$try = function (v) {
		return function (v1) {
			return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function (v2) {
				return {
					pos: v1.pos,
					error: v2.error,
				};
			})(v(v1));
		};
	};
	var runParser = function (v) {
		return function (s) {
			return Data_Functor.map(Data_Either.functorEither)(function (v1) {
				return v1.result;
			})(
				v({
					str: s,
					pos: 0,
				})
			);
		};
	};
	var functorParser = {
		map: function (f) {
			return function (v) {
				var $61 = Data_Functor.map(Data_Either.functorEither)(function (v1) {
					return {
						result: f(v1.result),
						suffix: v1.suffix,
					};
				});
				return function ($62) {
					return $61(v($62));
				};
			};
		},
	};
	var fail = function (error) {
		return function (v) {
			return new Data_Either.Left({
				pos: v.pos,
				error: error,
			});
		};
	};
	var applyParser = {
		apply: function (v) {
			return function (v1) {
				return function (s) {
					return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v2) {
						return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(
							function (v3) {
								return Control_Applicative.pure(Data_Either.applicativeEither)({
									result: v2.result(v3.result),
									suffix: v3.suffix,
								});
							}
						);
					});
				};
			};
		},
		Functor0: function () {
			return functorParser;
		},
	};
	var bindParser = {
		bind: function (v) {
			return function (f) {
				return function (s) {
					return Control_Bind.bind(Data_Either.bindEither)(v(s))(function (v1) {
						return unParser(f(v1.result))(v1.suffix);
					});
				};
			};
		},
		Apply0: function () {
			return applyParser;
		},
	};
	var applicativeParser = {
		pure: function (a) {
			return function (s) {
				return new Data_Either.Right({
					result: a,
					suffix: s,
				});
			};
		},
		Apply0: function () {
			return applyParser;
		},
	};
	var monadParser = {
		Applicative0: function () {
			return applicativeParser;
		},
		Bind1: function () {
			return bindParser;
		},
	};
	var monadRecParser = {
		tailRecM: function (f) {
			return function (a) {
				var split = function (v) {
					if (v.result instanceof Control_Monad_Rec_Class.Loop) {
						return new Control_Monad_Rec_Class.Loop({
							state: v.result.value0,
							str: v.suffix,
						});
					}
					if (v.result instanceof Control_Monad_Rec_Class.Done) {
						return new Control_Monad_Rec_Class.Done({
							result: v.result.value0,
							suffix: v.suffix,
						});
					}
					throw new Error(
						'Failed pattern match at Text.Parsing.StringParser (line 90, column 7 - line 90, column 70): ' +
							[v.constructor.name]
					);
				};
				return function (str) {
					return Control_Monad_Rec_Class.tailRecM(
						Control_Monad_Rec_Class.monadRecEither
					)(function (st) {
						return Data_Functor.map(Data_Either.functorEither)(split)(
							unParser(f(st.state))(st.str)
						);
					})({
						state: a,
						str: str,
					});
				};
			};
		},
		Monad0: function () {
			return monadParser;
		},
	};
	var altParser = {
		alt: function (v) {
			return function (v1) {
				return function (s) {
					var v2 = v(s);
					if (v2 instanceof Data_Either.Left) {
						if (s.pos === v2.value0.pos) {
							return v1(s);
						}
						if (Data_Boolean.otherwise) {
							return new Data_Either.Left({
								error: v2.value0.error,
								pos: v2.value0.pos,
							});
						}
					}
					return v2;
				};
			};
		},
		Functor0: function () {
			return functorParser;
		},
	};
	var plusParser = {
		empty: fail('No alternative'),
		Alt0: function () {
			return altParser;
		},
	};
	var alternativeParser = {
		Applicative0: function () {
			return applicativeParser;
		},
		Plus1: function () {
			return plusParser;
		},
	};
	exports['runParser'] = runParser;
	exports['fail'] = fail;
	exports['try'] = $$try;
	exports['functorParser'] = functorParser;
	exports['applyParser'] = applyParser;
	exports['applicativeParser'] = applicativeParser;
	exports['altParser'] = altParser;
	exports['alternativeParser'] = alternativeParser;
	exports['bindParser'] = bindParser;
	exports['monadRecParser'] = monadRecParser;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Text.Parsing.StringParser.Combinators'] =
		$PS['Text.Parsing.StringParser.Combinators'] || {};
	var exports = $PS['Text.Parsing.StringParser.Combinators'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_List = $PS['Data.List'];
	var Data_List_NonEmpty = $PS['Data.List.NonEmpty'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Text_Parsing_StringParser = $PS['Text.Parsing.StringParser'];
	var withError = function (p) {
		return function (msg) {
			return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(
				Text_Parsing_StringParser.fail(msg)
			);
		};
	};
	var option = function (a) {
		return function (p) {
			return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(
				Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a)
			);
		};
	};
	var optionMaybe = function (p) {
		return option(Data_Maybe.Nothing.value)(
			Data_Functor.map(Text_Parsing_StringParser.functorParser)(
				Data_Maybe.Just.create
			)(p)
		);
	};
	var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(
		Text_Parsing_StringParser.alternativeParser
	);
	var cons$prime = function (h) {
		return function (t) {
			return new Data_NonEmpty.NonEmpty(h, t);
		};
	};
	var many1 = function (p) {
		return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(
			Data_Functor.map(Text_Parsing_StringParser.functorParser)(cons$prime)(p)
		)(many(p));
	};
	var sepBy1 = function (p) {
		return function (sep) {
			return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(
				function (a) {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						many(
							Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
								sep
							)(p)
						)
					)(function (as) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(cons$prime(a)(as));
					});
				}
			);
		};
	};
	var sepBy = function (p) {
		return function (sep) {
			return Control_Alt.alt(Text_Parsing_StringParser.altParser)(
				Data_Functor.map(Text_Parsing_StringParser.functorParser)(
					Data_List_NonEmpty.toList
				)(sepBy1(p)(sep))
			)(
				Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(
					Data_List_Types.Nil.value
				)
			);
		};
	};
	var sepEndBy1 = function (p) {
		return function (sep) {
			return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(p)(
				function (a) {
					return Control_Alt.alt(Text_Parsing_StringParser.altParser)(
						Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sep)(
							function () {
								return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
									sepEndBy(p)(sep)
								)(function (as) {
									return Control_Applicative.pure(
										Text_Parsing_StringParser.applicativeParser
									)(cons$prime(a)(as));
								});
							}
						)
					)(
						Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(Data_List_NonEmpty.singleton(a))
					);
				}
			);
		};
	};
	var sepEndBy = function (p) {
		return function (sep) {
			return Control_Alt.alt(Text_Parsing_StringParser.altParser)(
				Data_Functor.map(Text_Parsing_StringParser.functorParser)(
					Data_List_NonEmpty.toList
				)(sepEndBy1(p)(sep))
			)(
				Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(
					Data_List_Types.Nil.value
				)
			);
		};
	};
	var between = function (open) {
		return function (close) {
			return function (p) {
				return Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						open
					)(p)
				)(close);
			};
		};
	};
	exports['many'] = many;
	exports['many1'] = many1;
	exports['withError'] = withError;
	exports['between'] = between;
	exports['optionMaybe'] = optionMaybe;
	exports['sepBy'] = sepBy;
	exports['sepEndBy'] = sepEndBy;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['Text.Parsing.StringParser.CodeUnits'] =
		$PS['Text.Parsing.StringParser.CodeUnits'] || {};
	var exports = $PS['Text.Parsing.StringParser.CodeUnits'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Data_Array = $PS['Data.Array'];
	var Data_Char = $PS['Data.Char'];
	var Data_Either = $PS['Data.Either'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Show = $PS['Data.Show'];
	var Data_String_CodeUnits = $PS['Data.String.CodeUnits'];
	var Text_Parsing_StringParser = $PS['Text.Parsing.StringParser'];
	var Text_Parsing_StringParser_Combinators =
		$PS['Text.Parsing.StringParser.Combinators'];
	var string = function (nt) {
		return function (s) {
			if (
				Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(
					Data_String_CodeUnits["indexOf'"](nt)(s.pos)(s.str)
				)(new Data_Maybe.Just(s.pos))
			) {
				return new Data_Either.Right({
					result: nt,
					suffix: {
						str: s.str,
						pos: (s.pos + Data_String_CodeUnits.length(nt)) | 0,
					},
				});
			}
			return new Data_Either.Left({
				pos: s.pos,
				error: "Expected '" + (nt + "'."),
			});
		};
	};
	var anyChar = function (v) {
		var v1 = Data_String_CodeUnits.charAt(v.pos)(v.str);
		if (v1 instanceof Data_Maybe.Just) {
			return new Data_Either.Right({
				result: v1.value0,
				suffix: {
					str: v.str,
					pos: (v.pos + 1) | 0,
				},
			});
		}
		if (v1 instanceof Data_Maybe.Nothing) {
			return new Data_Either.Left({
				pos: v.pos,
				error: 'Unexpected EOF',
			});
		}
		throw new Error(
			'Failed pattern match at Text.Parsing.StringParser.CodeUnits (line 51, column 3 - line 53, column 53): ' +
				[v1.constructor.name]
		);
	};
	var anyDigit = Text_Parsing_StringParser['try'](
		Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (
			c
		) {
			var $31 = c >= '0' && c <= '9';
			if ($31) {
				return Control_Applicative.pure(
					Text_Parsing_StringParser.applicativeParser
				)(c);
			}
			return Text_Parsing_StringParser.fail(
				'Character ' +
					(Data_Show.show(Data_Show.showChar)(c) + ' is not a digit')
			);
		})
	);
	var lowerCaseChar = Text_Parsing_StringParser['try'](
		Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (
			c
		) {
			var $32 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(
				Data_Char.toCharCode(c)
			)(Data_Array.range(97)(122));
			if ($32) {
				return Control_Applicative.pure(
					Text_Parsing_StringParser.applicativeParser
				)(c);
			}
			return Text_Parsing_StringParser.fail(
				'Expected a lower case character but found ' +
					Data_Show.show(Data_Show.showChar)(c)
			);
		})
	);
	var satisfy = function (f) {
		return Text_Parsing_StringParser['try'](
			Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(
				function (c) {
					var $33 = f(c);
					if ($33) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(c);
					}
					return Text_Parsing_StringParser.fail(
						'Character ' +
							(Data_Show.show(Data_Show.showChar)(c) +
								' did not satisfy predicate')
					);
				}
			)
		);
	};
	var $$char = function (c) {
		return Text_Parsing_StringParser_Combinators.withError(
			satisfy(function (v) {
				return v === c;
			})
		)('Could not match character ' + Data_Show.show(Data_Show.showChar)(c));
	};
	var oneOf = function (dictFoldable) {
		var $37 = Data_Function.flip(
			Data_Foldable.elem(dictFoldable)(Data_Eq.eqChar)
		);
		return function ($38) {
			return satisfy($37($38));
		};
	};
	var whiteSpace = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		Text_Parsing_StringParser_Combinators.many(
			satisfy(function (c) {
				return c === '\x0a' || c === '\x0d' || c === ' ' || c === '\x09';
			})
		)
	)(function (cs) {
		return Control_Applicative.pure(
			Text_Parsing_StringParser.applicativeParser
		)(
			Data_Foldable.foldMap(Data_List_Types.foldableList)(
				Data_Monoid.monoidString
			)(Data_String_CodeUnits.singleton)(cs)
		);
	});
	var skipSpaces = Data_Functor['void'](
		Text_Parsing_StringParser.functorParser
	)(whiteSpace);
	var upperCaseChar = Text_Parsing_StringParser['try'](
		Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (
			c
		) {
			var $34 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(
				Data_Char.toCharCode(c)
			)(Data_Array.range(65)(90));
			if ($34) {
				return Control_Applicative.pure(
					Text_Parsing_StringParser.applicativeParser
				)(c);
			}
			return Text_Parsing_StringParser.fail(
				'Expected an upper case character but found ' +
					Data_Show.show(Data_Show.showChar)(c)
			);
		})
	);
	var anyLetter = Text_Parsing_StringParser_Combinators.withError(
		Control_Alt.alt(Text_Parsing_StringParser.altParser)(lowerCaseChar)(
			upperCaseChar
		)
	)('Expected a letter');
	var alphaNum = Text_Parsing_StringParser_Combinators.withError(
		Control_Alt.alt(Text_Parsing_StringParser.altParser)(anyLetter)(anyDigit)
	)('Expected a letter or a number');
	exports['anyDigit'] = anyDigit;
	exports['string'] = string;
	exports['satisfy'] = satisfy;
	exports['char'] = $$char;
	exports['skipSpaces'] = skipSpaces;
	exports['oneOf'] = oneOf;
	exports['alphaNum'] = alphaNum;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.ConstructEdges'] = $PS['WAGS.ConstructEdges'] || {};
	var exports = $PS['WAGS.ConstructEdges'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var constructEdgesTuple = {
		constructEdges: function (v) {
			return function (v1) {
				return function (a) {
					return new Data_Tuple.Tuple(
						Type_Proxy['Proxy'].value,
						new Data_Tuple.Tuple(Type_Proxy['Proxy'].value, a)
					);
				};
			};
		},
	};
	var constructEdgesNormVal = function (dictTypeToSym) {
		return function (dictEdgeableT) {
			return function (dictAutoIncrementingInsert) {
				return function (dictNatToSym) {
					return function (dictAppend) {
						return function (dictAppend1) {
							return function (dictIsSymbol) {
								return function (dictLacks) {
									return function (dictCons) {
										return {
											constructEdges: function (v) {
												return function (v1) {
													return function (v2) {
														return new Data_Tuple.Tuple(
															Type_Proxy['Proxy'].value,
															new Data_Tuple.Tuple(
																Type_Proxy['Proxy'].value,
																new Data_Tuple.Tuple(
																	v2.value0,
																	Record.insert(dictIsSymbol)()()(
																		Type_Proxy['Proxy'].value
																	)(v2.value1)({})
																)
															)
														);
													};
												};
											},
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var constructEdges = function (dict) {
		return dict.constructEdges;
	};
	exports['constructEdges'] = constructEdges;
	exports['constructEdgesTuple'] = constructEdgesTuple;
	exports['constructEdgesNormVal'] = constructEdgesNormVal;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Control.Types'] = $PS['WAGS.Control.Types'] || {};
	var exports = $PS['WAGS.Control.Types'];
	var SubScene = function (x) {
		return x;
	};
	var Scene = function (x) {
		return x;
	};
	var WAG = function (x) {
		return x;
	};
	var unsafeWAG = WAG;
	var unsafeUnWAG = function (v) {
		return {
			context: v.context,
			value: v.value,
		};
	};
	var unFrame = function (dict) {
		return dict.unFrame;
	};
	var oneSubFrame = function (v) {
		return v;
	};
	var oneFrame = function (v) {
		return v;
	};
	var isSceneSubScene = {
		getFrame: oneSubFrame,
		unFrame: SubScene,
	};
	var isSceneScene = {
		getFrame: oneFrame,
		unFrame: Scene,
	};
	var getFrame = function (dict) {
		return dict.getFrame;
	};
	var functorWAG = {
		map: function (f) {
			return function (m) {
				return {
					value: f(m.value),
					context: m.context,
				};
			};
		},
	};
	var extendWAG = {
		extend: function (f) {
			return function (v) {
				return {
					context: v.context,
					value: f(v),
				};
			};
		},
		Functor0: function () {
			return functorWAG;
		},
	};
	var comonadWAG = {
		extract: function (v) {
			return v.value;
		},
		Extend0: function () {
			return extendWAG;
		},
	};
	exports['oneFrame'] = oneFrame;
	exports['oneSubFrame'] = oneSubFrame;
	exports['unsafeUnWAG'] = unsafeUnWAG;
	exports['unsafeWAG'] = unsafeWAG;
	exports['getFrame'] = getFrame;
	exports['unFrame'] = unFrame;
	exports['functorWAG'] = functorWAG;
	exports['comonadWAG'] = comonadWAG;
	exports['isSceneScene'] = isSceneScene;
	exports['isSceneSubScene'] = isSceneSubScene;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Graph.Parameter'] = $PS['WAGS.Graph.Parameter'] || {};
	var exports = $PS['WAGS.Graph.Parameter'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Generic_Rep = $PS['Data.Generic.Rep'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Show_Generic = $PS['Data.Show.Generic'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var NoRamp = (function () {
		function NoRamp() {}
		NoRamp.value = new NoRamp();
		return NoRamp;
	})();
	var LinearRamp = (function () {
		function LinearRamp() {}
		LinearRamp.value = new LinearRamp();
		return LinearRamp;
	})();
	var ExponentialRamp = (function () {
		function ExponentialRamp() {}
		ExponentialRamp.value = new ExponentialRamp();
		return ExponentialRamp;
	})();
	var Immediately = (function () {
		function Immediately() {}
		Immediately.value = new Immediately();
		return Immediately;
	})();
	var semigroupAudioParameterTransition = {
		append: function (v) {
			return function (v1) {
				if (v instanceof Immediately) {
					return Immediately.value;
				}
				if (v1 instanceof Immediately) {
					return Immediately.value;
				}
				if (v instanceof ExponentialRamp) {
					return ExponentialRamp.value;
				}
				if (v1 instanceof ExponentialRamp) {
					return ExponentialRamp.value;
				}
				if (v instanceof LinearRamp) {
					return LinearRamp.value;
				}
				if (v1 instanceof LinearRamp) {
					return LinearRamp.value;
				}
				return NoRamp.value;
			};
		},
	};
	var mm = function (dict) {
		return dict.mm;
	};
	var justMM = {
		mm: Control_Applicative.pure(Data_Maybe.applicativeMaybe),
	};
	var genericAudioParameterTransition = {
		to: function (x) {
			if (x instanceof Data_Generic_Rep.Inl) {
				return NoRamp.value;
			}
			if (
				x instanceof Data_Generic_Rep.Inr &&
				x.value0 instanceof Data_Generic_Rep.Inl
			) {
				return LinearRamp.value;
			}
			if (
				x instanceof Data_Generic_Rep.Inr &&
				x.value0 instanceof Data_Generic_Rep.Inr &&
				x.value0.value0 instanceof Data_Generic_Rep.Inl
			) {
				return ExponentialRamp.value;
			}
			if (
				x instanceof Data_Generic_Rep.Inr &&
				x.value0 instanceof Data_Generic_Rep.Inr &&
				x.value0.value0 instanceof Data_Generic_Rep.Inr
			) {
				return Immediately.value;
			}
			throw new Error(
				'Failed pattern match at WAGS.Graph.Parameter (line 117, column 1 - line 117, column 86): ' +
					[x.constructor.name]
			);
		},
		from: function (x) {
			if (x instanceof NoRamp) {
				return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
			}
			if (x instanceof LinearRamp) {
				return new Data_Generic_Rep.Inr(
					new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)
				);
			}
			if (x instanceof ExponentialRamp) {
				return new Data_Generic_Rep.Inr(
					new Data_Generic_Rep.Inr(
						new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)
					)
				);
			}
			if (x instanceof Immediately) {
				return new Data_Generic_Rep.Inr(
					new Data_Generic_Rep.Inr(
						new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)
					)
				);
			}
			throw new Error(
				'Failed pattern match at WAGS.Graph.Parameter (line 117, column 1 - line 117, column 86): ' +
					[x.constructor.name]
			);
		},
	};
	var showAudioParameterTransition = {
		show: Data_Show_Generic.genericShow(genericAudioParameterTransition)(
			Data_Show_Generic.genericShowSum(
				Data_Show_Generic.genericShowConstructor(
					Data_Show_Generic.genericShowArgsNoArguments
				)({
					reflectSymbol: function () {
						return 'NoRamp';
					},
				})
			)(
				Data_Show_Generic.genericShowSum(
					Data_Show_Generic.genericShowConstructor(
						Data_Show_Generic.genericShowArgsNoArguments
					)({
						reflectSymbol: function () {
							return 'LinearRamp';
						},
					})
				)(
					Data_Show_Generic.genericShowSum(
						Data_Show_Generic.genericShowConstructor(
							Data_Show_Generic.genericShowArgsNoArguments
						)({
							reflectSymbol: function () {
								return 'ExponentialRamp';
							},
						})
					)(
						Data_Show_Generic.genericShowConstructor(
							Data_Show_Generic.genericShowArgsNoArguments
						)({
							reflectSymbol: function () {
								return 'Immediately';
							},
						})
					)
				)
			)
		),
	};
	var functorAudioParameter = {
		map: function (f) {
			return function (m) {
				return {
					param: Data_Functor.map(Data_Maybe.functorMaybe)(f)(m.param),
					timeOffset: m.timeOffset,
					transition: m.transition,
				};
			};
		},
	};
	var ff = function (n) {
		return function (v) {
			return {
				param: v.param,
				timeOffset: v.timeOffset + n,
				transition: v.transition,
			};
		};
	};
	var eqAudioParameterTransition = {
		eq: function (x) {
			return function (y) {
				if (x instanceof NoRamp && y instanceof NoRamp) {
					return true;
				}
				if (x instanceof LinearRamp && y instanceof LinearRamp) {
					return true;
				}
				if (x instanceof ExponentialRamp && y instanceof ExponentialRamp) {
					return true;
				}
				if (x instanceof Immediately && y instanceof Immediately) {
					return true;
				}
				return false;
			};
		},
	};
	var ordAudioParameterTransition = {
		compare: function (v) {
			return function (v1) {
				if (v instanceof Immediately) {
					return Data_Ordering.LT.value;
				}
				if (v1 instanceof Immediately) {
					return Data_Ordering.GT.value;
				}
				return Data_Ordering.EQ.value;
			};
		},
		Eq0: function () {
			return eqAudioParameterTransition;
		},
	};
	var eqAudioParameter = function (dictEq) {
		return {
			eq: function (x) {
				return function (y) {
					return (
						Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x.param)(y.param) &&
						x.timeOffset === y.timeOffset &&
						Data_Eq.eq(eqAudioParameterTransition)(x.transition)(y.transition)
					);
				};
			},
		};
	};
	var ordAudioParameter = function (dictOrd) {
		return {
			compare: function (x) {
				return function (y) {
					var v = Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(x.param)(
						y.param
					);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordNumber)(x.timeOffset)(
						y.timeOffset
					);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(ordAudioParameterTransition)(x.transition)(
						y.transition
					);
				};
			},
			Eq0: function () {
				return eqAudioParameter(dictOrd.Eq0());
			},
		};
	};
	var defaultParam = {
		param: new Data_Maybe.Just(0.0),
		timeOffset: 0.0,
		transition: LinearRamp.value,
	};
	var bop = function (f) {
		return function (v) {
			return function (v1) {
				return {
					param: Control_Apply.apply(Data_Maybe.applyMaybe)(
						Data_Functor.map(Data_Maybe.functorMaybe)(f)(v.param)
					)(v1.param),
					timeOffset: v.timeOffset + v1.timeOffset / 2.0,
					transition: Data_Semigroup.append(semigroupAudioParameterTransition)(
						v.transition
					)(v1.transition),
				};
			};
		};
	};
	var applyAudioParameter = {
		apply: bop(Data_Function.apply),
		Functor0: function () {
			return functorAudioParameter;
		},
	};
	var applicativeAudioParameter = {
		pure: function (a) {
			return Record.set({
				reflectSymbol: function () {
					return 'param';
				},
			})()()(Type_Proxy['Proxy'].value)(new Data_Maybe.Just(a))(defaultParam);
		},
		Apply0: function () {
			return applyAudioParameter;
		},
	};
	exports['mm'] = mm;
	exports['ff'] = ff;
	exports['eqAudioParameter'] = eqAudioParameter;
	exports['ordAudioParameter'] = ordAudioParameter;
	exports['functorAudioParameter'] = functorAudioParameter;
	exports['applicativeAudioParameter'] = applicativeAudioParameter;
	exports['showAudioParameterTransition'] = showAudioParameterTransition;
	exports['justMM'] = justMM;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Graph.Paramable'] = $PS['WAGS.Graph.Paramable'] || {};
	var exports = $PS['WAGS.Graph.Paramable'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Category = $PS['Control.Category'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var paramize = function (dict) {
		return dict.paramize;
	};
	var paramableNumber = {
		paramize: Control_Applicative.pure(
			WAGS_Graph_Parameter.applicativeAudioParameter
		),
	};
	var paramableAudioParameter = {
		paramize: Control_Category.identity(Control_Category.categoryFn),
	};
	var onOffIzeAudioParameter = {
		onOffIze: Control_Category.identity(Control_Category.categoryFn),
	};
	var onOffIze = function (dict) {
		return dict.onOffIze;
	};
	exports['onOffIze'] = onOffIze;
	exports['paramize'] = paramize;
	exports['paramableNumber'] = paramableNumber;
	exports['paramableAudioParameter'] = paramableAudioParameter;
	exports['onOffIzeAudioParameter'] = onOffIzeAudioParameter;
})(PS);
(function (exports) {
	exports.context = function () {
		return new (window.AudioContext || window.webkitAudioContext)();
	};
	exports.makeUnitCache = function () {
		return {};
	};
	exports.close = function (audioCtx) {
		return function () {
			audioCtx.close();
		};
	};
	var genericStarter = function (unit, name, param) {
		unit[name].value = param.param;
	};
	// todo: merge two setters?
	var workletSetter = function (unit, paramName, timeToSet, param) {
		if (param.transition === 'Immediately') {
			if (param.cancel) {
				unit.parameters.get(paramName).cancelScheduledValues();
			} else {
				unit.parameters.get(paramName).value = param.param;
			}
		} else {
			if (param.cancel) {
				unit.parameters
					.get(paramName)
					.cancelScheduledValues(timeToSet + param.timeOffset);
			} else {
				unit.parameters
					.get(paramName)
					[
						param.transition === 'NoRamp'
							? 'setValueAtTime'
							: param.transition === 'LinearRamp'
							? 'linearRampToValueAtTime'
							: param.transition === 'ExponentialRamp'
							? 'exponentialRampToValueAtTime'
							: 'linearRampToValueAtTime'
					](param.param, timeToSet + param.timeOffset);
			}
		}
	};
	var genericSetter = function (unit, name, timeToSet, param) {
		if (param.transition === 'Immediately') {
			if (param.cancel) {
				unit[name].cancelScheduledValues();
			} else {
				unit[name].value = param.param;
			}
		} else {
			if (param.cancel) {
				unit[name].cancelScheduledValues(timeToSet + param.timeOffset);
			} else {
				unit[name][
					param.transition === 'NoRamp'
						? 'setValueAtTime'
						: param.transition === 'LinearRamp'
						? 'linearRampToValueAtTime'
						: param.transition === 'ExponentialRamp'
						? 'exponentialRampToValueAtTime'
						: 'linearRampToValueAtTime'
				](param.param, timeToSet + param.timeOffset);
			}
		}
	};
	var connectXToY = function (calledExternally) {
		return function (x) {
			return function (y) {
				return function (stateX) {
					return function (stateY) {
						return function () {
							if (
								calledExternally &&
								(stateY.units[y].isSubgraph || stateY.units[y].isTumult)
							) {
								return;
							}
							stateX.units[x].main.connect(stateY.units[y].main);
							stateX.units[x].outgoing.push({ unit: y, state: stateY });
							stateY.units[y].incoming.push({ unit: x, state: stateX });
							if (stateY.units[y].se) {
								stateX.units[x].main.connect(stateY.units[y].se);
							}
						};
					};
				};
			};
		};
	};
	exports.connectXToY_ = function (x) {
		return function (y) {
			return function (state) {
				return connectXToY(true)(x)(y)(state)(state);
			};
		};
	};
	var disconnectXFromY = function (calledExternally) {
		return function (x) {
			return function (y) {
				return function (stateX) {
					return function (stateY) {
						return function () {
							if (
								calledExternally &&
								(stateY.units[y].isSubgraph || stateY.units[y].isTumult)
							) {
								return;
							}
							stateX.units[x].main.disconnect(stateY.units[y].main);
							stateX.units[x].outgoing = stateX.units[x].outgoing.filter(
								function (i) {
									!(i.unit === y && i.state === stateY);
								}
							);
							stateY.units[y].incoming = stateY.units[y].incoming.filter(
								function (i) {
									!(i.unit === x && i.state === stateX);
								}
							);
							if (stateY.units[y].se) {
								stateX.units[x].main.disconnect(stateY.units[y].se);
							}
						};
					};
				};
			};
		};
	};
	exports.disconnectXFromY_ = function (x) {
		return function (y) {
			return function (state) {
				return disconnectXFromY(true)(x)(y)(state)(state);
			};
		};
	};
	exports.destroyUnit_ = function (ptr) {
		return function (state) {
			return function () {
				// hack for recorder
				if (state.units[ptr].recorder) {
					state.units[ptr].recorder.stop();
				}
				// hack for analyser
				if (state.units[ptr].analyser) {
					// effectful unsubscribe
					state.units[ptr].analyser();
				}
				if (state.units[ptr].input) {
					// input sources are never disconnected on disconnect, so we have to manually trigger this
					disconnectXFromY(false)(state.units[ptr].input)(ptr)(
						state.units[ptr].parent
					)(state)();
				}
				delete state.units[ptr];
			};
		};
	};
	exports.renderAudio = function (arrayToApply) {
		return function () {
			for (var i = 0; i < arrayToApply.length; i++) {
				arrayToApply[i]();
			}
		};
	};
	exports.getAudioClockTime = function (ctx) {
		return function () {
			return ctx.currentTime;
		};
	};
	exports.makeAllpass_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'allpass';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'Q', b);
					};
				};
			};
		};
	};
	exports.makeAnalyser_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					var analyserSideEffectFunction = a;
					var dest = state.context.createAnalyser();
					// todo - unhardcode?
					dest.fftSize = 2048;
					// unsubscribe is effect unit
					var unsubscribe = analyserSideEffectFunction(dest)();
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						analyserOrig: analyserSideEffectFunction,
						analyser: unsubscribe,
						main: state.context.createGain(),
						se: dest,
					};
				};
			};
		};
	};
	exports.setAnalyserNodeCb_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					if (state.units[ptr].analyserOrig === a) {
						return;
					}
					// first, unsubscribe
					state.units[ptr].analyser && state.units[ptr].analyser();
					state.units[ptr].analyser = a(state.units[ptr].se)();
					state.units[ptr].analyserOrig = a;
				};
			};
		};
	};
	exports.makeAudioWorkletNode_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					var parameterData = {};
					var keys = Object.keys(a.parameterData);
					for (var i = 0; i < keys.length; i++) {
						if (a.parameterData[keys[i]].isJust) {
							parameterData[keys[i]] = a.parameterData[keys[i]].param;
						}
					}
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						main: new AudioWorkletNode(state.context, a.name, {
							numberOfInputs: a.numberOfInputs,
							numberOfOutputs: a.numberOfOutputs,
							outputChannelCount: a.outputChannelCount,
							parameterData: parameterData,
							processorOptions: a.processorOptions,
						}),
					};
				};
			};
		};
	};
	exports.makeBandpass_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'bandpass';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'Q', b);
					};
				};
			};
		};
	};
	exports.makeConstant_ = function (ptr) {
		return function (onOff) {
			return function (a) {
				return function (state) {
					return function () {
						var createFunction = function () {
							var unit = state.context.createConstantSource();
							return unit;
						};
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							resumeClosure: {
								offset: function (i) {
									genericStarter(i, 'offset', a);
								},
							},
							createFunction: createFunction,
							main: createFunction(),
						};
						applyResumeClosure(state.units[ptr]);
						if (onOff.param === 'on') {
							state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
						}
						state.units[ptr].onOff = onOff.param === 'on';
					};
				};
			};
		};
	};
	exports.makeConvolver_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						main: state.context.createConvolver(),
					};
					state.units[ptr].main.buffer = a;
				};
			};
		};
	};
	exports.makePassthroughConvolver_ = function (ptr) {
		return function (state) {
			return function () {
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					main: state.context.createConvolver(),
				};
			};
		};
	};
	exports.makeDelay_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						main: state.context.createDelay(),
					};
					genericStarter(state.units[ptr].main, 'delayTime', a);
				};
			};
		};
	};
	exports.makeDynamicsCompressor_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (state) {
								return function () {
									state.units[ptr] = {
										main: state.context.createDynamicsCompressor(),
										outgoing: [],
										incoming: [],
									};
									genericStarter(state.units[ptr].main, 'threshold', a);
									genericStarter(state.units[ptr].main, 'knee', b);
									genericStarter(state.units[ptr].main, 'ratio', c);
									genericStarter(state.units[ptr].main, 'attack', d);
									genericStarter(state.units[ptr].main, 'release', e);
								};
							};
						};
					};
				};
			};
		};
	};
	exports.makeGain_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						main: state.context.createGain(),
					};
					genericStarter(state.units[ptr].main, 'gain', a);
				};
			};
		};
	};
	exports.makeHighpass_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'highpass';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'Q', b);
					};
				};
			};
		};
	};
	exports.makeHighshelf_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'highshelf';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'gain', b);
					};
				};
			};
		};
	};
	exports.makeLoopBufWithDeferredBuffer_ = function (ptr) {
		return function (state) {
			return function () {
				var createFunction = function () {
					var unit = state.context.createBufferSource();
					unit.loop = true;
					return unit;
				};
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					createFunction: createFunction,
					resumeClosure: {},
					main: createFunction(),
				};
			};
		};
	};
	exports.makeLoopBuf_ = function (ptr) {
		return function (a) {
			return function (onOff) {
				return function (b) {
					return function (c) {
						return function (d) {
							return function (state) {
								return function () {
									var createFunction = function () {
										var unit = state.context.createBufferSource();
										unit.loop = true;
										return unit;
									};
									state.units[ptr] = {
										outgoing: [],
										incoming: [],
										createFunction: createFunction,
										resumeClosure: {
											playbackRate: function (i) {
												genericStarter(i, 'playbackRate', b);
											},
											loopStart: function (i) {
												i.loopStart = c;
											},
											loopEnd: function (i) {
												i.loopEnd = d;
											},
											buffer: function (i) {
												i.buffer = a;
											},
										},
										main: createFunction(),
									};
									if (onOff.param === 'on') {
										applyResumeClosure(state.units[ptr]);
										state.units[ptr].main.start(
											state.writeHead + onOff.timeOffset,
											c
										);
									}
									state.units[ptr].onOff = onOff.param === 'on';
								};
							};
						};
					};
				};
			};
		};
	};
	exports.makeLowpass_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'lowpass';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'Q', b);
					};
				};
			};
		};
	};
	exports.makeLowshelf_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'lowshelf';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'gain', b);
					};
				};
			};
		};
	};
	exports.makeMicrophone_ = function (microphone) {
		return function (state) {
			return function () {
				state.units['microphone'] = {
					main: state.context.createMediaStreamSource(microphone),
					outgoing: [],
					incoming: [],
				};
			};
		};
	};
	exports.makeNotch_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (state) {
					return function () {
						state.units[ptr] = {
							outgoing: [],
							incoming: [],
							main: state.context.createBiquadFilter(),
						};
						state.units[ptr].main.type = 'notch';
						genericStarter(state.units[ptr].main, 'frequency', a);
						genericStarter(state.units[ptr].main, 'Q', b);
					};
				};
			};
		};
	};
	exports.makePeaking_ = function (ptr) {
		return function (a) {
			return function (b) {
				return function (c) {
					return function (state) {
						return function () {
							state.units[ptr] = {
								outgoing: [],
								incoming: [],
								main: state.context.createBiquadFilter(),
							};
							state.units[ptr].main.type = 'peaking';
							genericStarter(state.units[ptr].main, 'frequency', a);
							genericStarter(state.units[ptr].main, 'Q', b);
							genericStarter(state.units[ptr].main, 'gain', c);
						};
					};
				};
			};
		};
	};
	exports.makePeriodicOscWithDeferredOsc_ = function (ptr) {
		return function (state) {
			return function () {
				var createFunction = function () {
					var unit = state.context.createOscillator();
					return unit;
				};
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					createFunction: createFunction,
					resumeClosure: {},
					main: createFunction(),
				};
			};
		};
	};

	exports.makePeriodicOsc_ = function (ptr) {
		return function (a) {
			return function (onOff) {
				return function (b) {
					return function (state) {
						return function () {
							var createFunction = function () {
								var unit = state.context.createOscillator();
								return unit;
							};
							state.units[ptr] = {
								outgoing: [],
								incoming: [],
								createFunction: createFunction,
								resumeClosure: {
									frequency: function (i) {
										genericStarter(i, 'frequency', b);
									},
									periodicOsc: function (i) {
										i.setPeriodicWave(a);
									},
								},
								main: createFunction(),
							};
							applyResumeClosure(state.units[ptr]);
							if (onOff.param === 'on') {
								state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
							}
							state.units[ptr].onOff = onOff.param === 'on';
						};
					};
				};
			};
		};
	};
	exports.makePeriodicOscV_ = function (ptr) {
		return function (a) {
			return function (onOff) {
				return function (b) {
					return function (state) {
						return function () {
							var createFunction = function () {
								var unit = state.context.createOscillator();
								return unit;
							};
							state.units[ptr] = {
								outgoing: [],
								incoming: [],
								createFunction: createFunction,
								resumeClosure: {
									frequency: function (i) {
										genericStarter(i, 'frequency', b);
									},
									periodicOsc: function (i) {
										i.setPeriodicWave(
											makePeriodicWaveImpl(state.context)(a[0])(a[1])()
										);
									},
								},
								main: createFunction(),
							};
							applyResumeClosure(state.units[ptr]);
							if (onOff.param === 'on') {
								state.units[ptr].main.start(state.writeHead + onOff.timeOffset);
							}
							state.units[ptr].onOff = onOff.param === 'on';
						};
					};
				};
			};
		};
	};
	exports.makePlayBufWithDeferredBuffer_ = function (ptr) {
		return function (state) {
			return function () {
				var createFunction = function () {
					var unit = state.context.createBufferSource();
					return unit;
				};
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					createFunction: createFunction,
					resumeClosure: {},
					main: createFunction(),
				};
			};
		};
	};
	exports.makeInput_ = function (ptr) {
		return function (a) {
			return function (state) {
				return function () {
					state.units[ptr] = {
						outgoing: [],
						incoming: [],
						main: state.context.createGain(),
						parent: state.parent,
						input: a,
					};
					connectXToY(false)(a)(ptr)(state.parent)(state)();
					state.units[ptr].main.gain = 1.0;
				};
			};
		};
	};
	exports.makeTumultWithDeferredGraph_ = function (ptr) {
		return function (state) {
			return function () {
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					main: state.context.createGain(),
					isTumult: true,
				};
			};
		};
	};
	exports.makeSubgraphWithDeferredScene_ = function (ptr) {
		return function (state) {
			return function () {
				state.units[ptr] = {
					outgoing: [],
					incoming: [],
					main: state.context.createGain(),
					isSubgraph: true,
				};
			};
		};
	};
	exports.makeSubgraph_ = function (ptr) {
		return function (terminalPtr) {
			return function (vek) {
				return function (sceneM) {
					return function (envM) {
						return function (funk) {
							return function (state) {
								return function () {
									var children = [];
									var scenes = [];
									for (var i = 0; i < vek.length; i++) {
										children[i] = {
											context: state.context,
											writeHead: state.writeHead,
											units: {},
											parent: state,
										};
										scenes[i] = sceneM(i)(vek[i]);
									}
									state.units[ptr] = {
										outgoing: [],
										incoming: [],
										main: state.context.createGain(),
										children: children,
										isSubgraph: true,
										scenes: scenes,
									};
									state.units[ptr].main.gain = 1.0;
									for (var i = 0; i < scenes.length; i++) {
										var applied = funk(envM(i)(vek[i]))(scenes[i]);
										for (var j = 0; j < applied.instructions.length; j++) {
											// thunk
											applied.instructions[j](children[i])();
										}
										scenes[i] = applied.nextScene;
									}
									for (var i = 0; i < children.length; i++) {
										connectXToY(false)(terminalPtr)(ptr)(children[i])(state)();
									}
								};
							};
						};
					};
				};
			};
		};
	};
	/**
 *
 * String
  -> String
  -> Array (Set Instruction)
  -> Maybe (Set Instruction)
  -> (Set Instruction -> Maybe (Set Instruction))
  -> (Set Instruction -> Maybe (Set Instruction) -> Array (FFIAudioSnapshot' -> Effect Unit))
  -> FFIAudioSnapshot'
  -> Effect Unit
	exports['Gain'] = Gain;
	exports['Input'] = Input;
	exports['LoopBuf'] = LoopBuf;
	exports['PlayBuf'] = PlayBuf;
	exports['Speaker'] = Speaker;
	exports['Subgraph'] = Subgraph;
	exports['Tumult'] = Tumult;
	exports['On'] = On;
	exports['Off'] = Off;
	exports['OffOn'] = OffOn;
	exports['eqOnOff'] = eqOnOff;
	exports['ordOnOff'] = ordOnOff;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.WebAPI'] = $PS['WAGS.WebAPI'] || {};
	var exports = $PS['WAGS.WebAPI'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Unsafe_Reference = $PS['Unsafe.Reference'];
	var eqMediaRecorderCb = {
		eq: Data_Function.on(Unsafe_Reference.unsafeRefEq)(Data_Newtype.unwrap()),
	};
	var ordMediaRecorderCb = {
		compare: function (a) {
			return function (b) {
				var $0 = Data_Eq.eq(eqMediaRecorderCb)(a)(b);
				if ($0) {
					return Data_Ordering.EQ.value;
				}
				return Data_Ordering.LT.value;
			};
		},
		Eq0: function () {
			return eqMediaRecorderCb;
		},
	};
	var eqBrowserPeriodicWave = {
		eq: Unsafe_Reference.unsafeRefEq,
	};
	var ordBrowserPeriodicWave = {
		compare: function (a) {
			return function (b) {
				var $1 = Data_Eq.eq(eqBrowserPeriodicWave)(a)(b);
				if ($1) {
					return Data_Ordering.EQ.value;
				}
				return Data_Ordering.LT.value;
			};
		},
		Eq0: function () {
			return eqBrowserPeriodicWave;
		},
	};
	var eqBrowserMicrophone = {
		eq: Unsafe_Reference.unsafeRefEq,
	};
	var ordBrowserMicrophone = {
		compare: Data_Function['const'](
			Data_Function['const'](Data_Ordering.EQ.value)
		),
		Eq0: function () {
			return eqBrowserMicrophone;
		},
	};
	var eqBrowserFloatArray = {
		eq: Unsafe_Reference.unsafeRefEq,
	};
	var ordBrowserFloatArray = {
		compare: function (a) {
			return function (b) {
				var $2 = Data_Eq.eq(eqBrowserFloatArray)(a)(b);
				if ($2) {
					return Data_Ordering.EQ.value;
				}
				return Data_Ordering.LT.value;
			};
		},
		Eq0: function () {
			return eqBrowserFloatArray;
		},
	};
	var eqBrowserAudioBuffer = {
		eq: Unsafe_Reference.unsafeRefEq,
	};
	var ordBrowserAudioBuffer = {
		compare: function (a) {
			return function (b) {
				var $3 = Data_Eq.eq(eqBrowserAudioBuffer)(a)(b);
				if ($3) {
					return Data_Ordering.EQ.value;
				}
				return Data_Ordering.LT.value;
			};
		},
		Eq0: function () {
			return eqBrowserAudioBuffer;
		},
	};
	var eqAnalyserNodeCb = {
		eq: Data_Function.on(Unsafe_Reference.unsafeRefEq)(Data_Newtype.unwrap()),
	};
	var ordAnalyserNodeCb = {
		compare: function (a) {
			return function (b) {
				var $4 = Data_Eq.eq(eqAnalyserNodeCb)(a)(b);
				if ($4) {
					return Data_Ordering.EQ.value;
				}
				return Data_Ordering.LT.value;
			};
		},
		Eq0: function () {
			return eqAnalyserNodeCb;
		},
	};
	exports['eqAnalyserNodeCb'] = eqAnalyserNodeCb;
	exports['ordAnalyserNodeCb'] = ordAnalyserNodeCb;
	exports['eqMediaRecorderCb'] = eqMediaRecorderCb;
	exports['ordMediaRecorderCb'] = ordMediaRecorderCb;
	exports['eqBrowserPeriodicWave'] = eqBrowserPeriodicWave;
	exports['ordBrowserPeriodicWave'] = ordBrowserPeriodicWave;
	exports['eqBrowserAudioBuffer'] = eqBrowserAudioBuffer;
	exports['ordBrowserAudioBuffer'] = ordBrowserAudioBuffer;
	exports['eqBrowserFloatArray'] = eqBrowserFloatArray;
	exports['ordBrowserFloatArray'] = ordBrowserFloatArray;
	exports['eqBrowserMicrophone'] = eqBrowserMicrophone;
	exports['ordBrowserMicrophone'] = ordBrowserMicrophone;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Rendered'] = $PS['WAGS.Rendered'] || {};
	var exports = $PS['WAGS.Rendered'];
	var Data_Either = $PS['Data.Either'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Function = $PS['Data.Function'];
	var Data_Lazy = $PS['Data.Lazy'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Set = $PS['Data.Set'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Foreign_Object = $PS['Foreign.Object'];
	var Simple_JSON = $PS['Simple.JSON'];
	var WAGS_Graph_AudioUnit = $PS['WAGS.Graph.AudioUnit'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var WAGS_WebAPI = $PS['WAGS.WebAPI'];
	var None = (function () {
		function None() {}
		None.value = new None();
		return None;
	})();
	var TwoX = (function () {
		function TwoX() {}
		TwoX.value = new TwoX();
		return TwoX;
	})();
	var FourX = (function () {
		function FourX() {}
		FourX.value = new FourX();
		return FourX;
	})();
	var DisconnectXFromY = (function () {
		function DisconnectXFromY(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		DisconnectXFromY.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new DisconnectXFromY(value0, value1, value2, value3);
					};
				};
			};
		};
		return DisconnectXFromY;
	})();
	var DestroyUnit = (function () {
		function DestroyUnit(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		DestroyUnit.create = function (value0) {
			return function (value1) {
				return new DestroyUnit(value0, value1);
			};
		};
		return DestroyUnit;
	})();
	var MakeAllpass = (function () {
		function MakeAllpass(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeAllpass.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeAllpass(value0, value1, value2);
				};
			};
		};
		return MakeAllpass;
	})();
	var MakeAnalyser = (function () {
		function MakeAnalyser(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeAnalyser.create = function (value0) {
			return function (value1) {
				return new MakeAnalyser(value0, value1);
			};
		};
		return MakeAnalyser;
	})();
	var MakeAudioWorkletNode = (function () {
		function MakeAudioWorkletNode(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeAudioWorkletNode.create = function (value0) {
			return function (value1) {
				return new MakeAudioWorkletNode(value0, value1);
			};
		};
		return MakeAudioWorkletNode;
	})();
	var MakeBandpass = (function () {
		function MakeBandpass(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeBandpass.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeBandpass(value0, value1, value2);
				};
			};
		};
		return MakeBandpass;
	})();
	var MakeConstant = (function () {
		function MakeConstant(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeConstant.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeConstant(value0, value1, value2);
				};
			};
		};
		return MakeConstant;
	})();
	var MakePassthroughConvolver = (function () {
		function MakePassthroughConvolver(value0) {
			this.value0 = value0;
		}
		MakePassthroughConvolver.create = function (value0) {
			return new MakePassthroughConvolver(value0);
		};
		return MakePassthroughConvolver;
	})();
	var MakeConvolver = (function () {
		function MakeConvolver(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeConvolver.create = function (value0) {
			return function (value1) {
				return new MakeConvolver(value0, value1);
			};
		};
		return MakeConvolver;
	})();
	var MakeDelay = (function () {
		function MakeDelay(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeDelay.create = function (value0) {
			return function (value1) {
				return new MakeDelay(value0, value1);
			};
		};
		return MakeDelay;
	})();
	var MakeDynamicsCompressor = (function () {
		function MakeDynamicsCompressor(
			value0,
			value1,
			value2,
			value3,
			value4,
			value5
		) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
		}
		MakeDynamicsCompressor.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return new MakeDynamicsCompressor(
									value0,
									value1,
									value2,
									value3,
									value4,
									value5
								);
							};
						};
					};
				};
			};
		};
		return MakeDynamicsCompressor;
	})();
	var MakeGain = (function () {
		function MakeGain(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeGain.create = function (value0) {
			return function (value1) {
				return new MakeGain(value0, value1);
			};
		};
		return MakeGain;
	})();
	var MakeHighpass = (function () {
		function MakeHighpass(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeHighpass.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeHighpass(value0, value1, value2);
				};
			};
		};
		return MakeHighpass;
	})();
	var MakeHighshelf = (function () {
		function MakeHighshelf(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeHighshelf.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeHighshelf(value0, value1, value2);
				};
			};
		};
		return MakeHighshelf;
	})();
	var MakeInput = (function () {
		function MakeInput(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeInput.create = function (value0) {
			return function (value1) {
				return new MakeInput(value0, value1);
			};
		};
		return MakeInput;
	})();
	var MakeLoopBuf = (function () {
		function MakeLoopBuf(value0, value1, value2, value3, value4, value5) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
			this.value5 = value5;
		}
		MakeLoopBuf.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return function (value5) {
								return new MakeLoopBuf(
									value0,
									value1,
									value2,
									value3,
									value4,
									value5
								);
							};
						};
					};
				};
			};
		};
		return MakeLoopBuf;
	})();
	var MakeLoopBufWithDeferredBuffer = (function () {
		function MakeLoopBufWithDeferredBuffer(value0) {
			this.value0 = value0;
		}
		MakeLoopBufWithDeferredBuffer.create = function (value0) {
			return new MakeLoopBufWithDeferredBuffer(value0);
		};
		return MakeLoopBufWithDeferredBuffer;
	})();
	var MakeLowpass = (function () {
		function MakeLowpass(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeLowpass.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeLowpass(value0, value1, value2);
				};
			};
		};
		return MakeLowpass;
	})();
	var MakeLowshelf = (function () {
		function MakeLowshelf(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeLowshelf.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeLowshelf(value0, value1, value2);
				};
			};
		};
		return MakeLowshelf;
	})();
	var MakeMicrophone = (function () {
		function MakeMicrophone(value0) {
			this.value0 = value0;
		}
		MakeMicrophone.create = function (value0) {
			return new MakeMicrophone(value0);
		};
		return MakeMicrophone;
	})();
	var MakeNotch = (function () {
		function MakeNotch(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeNotch.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeNotch(value0, value1, value2);
				};
			};
		};
		return MakeNotch;
	})();
	var MakePeaking = (function () {
		function MakePeaking(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		MakePeaking.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new MakePeaking(value0, value1, value2, value3);
					};
				};
			};
		};
		return MakePeaking;
	})();
	var MakePeriodicOscWithDeferredOsc = (function () {
		function MakePeriodicOscWithDeferredOsc(value0) {
			this.value0 = value0;
		}
		MakePeriodicOscWithDeferredOsc.create = function (value0) {
			return new MakePeriodicOscWithDeferredOsc(value0);
		};
		return MakePeriodicOscWithDeferredOsc;
	})();
	var MakePeriodicOsc = (function () {
		function MakePeriodicOsc(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		MakePeriodicOsc.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new MakePeriodicOsc(value0, value1, value2, value3);
					};
				};
			};
		};
		return MakePeriodicOsc;
	})();
	var MakePlayBuf = (function () {
		function MakePlayBuf(value0, value1, value2, value3, value4) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
			this.value4 = value4;
		}
		MakePlayBuf.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return function (value4) {
							return new MakePlayBuf(value0, value1, value2, value3, value4);
						};
					};
				};
			};
		};
		return MakePlayBuf;
	})();
	var MakePlayBufWithDeferredBuffer = (function () {
		function MakePlayBufWithDeferredBuffer(value0) {
			this.value0 = value0;
		}
		MakePlayBufWithDeferredBuffer.create = function (value0) {
			return new MakePlayBufWithDeferredBuffer(value0);
		};
		return MakePlayBufWithDeferredBuffer;
	})();
	var MakeRecorder = (function () {
		function MakeRecorder(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeRecorder.create = function (value0) {
			return function (value1) {
				return new MakeRecorder(value0, value1);
			};
		};
		return MakeRecorder;
	})();
	var MakeSawtoothOsc = (function () {
		function MakeSawtoothOsc(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeSawtoothOsc.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeSawtoothOsc(value0, value1, value2);
				};
			};
		};
		return MakeSawtoothOsc;
	})();
	var MakeSinOsc = (function () {
		function MakeSinOsc(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeSinOsc.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeSinOsc(value0, value1, value2);
				};
			};
		};
		return MakeSinOsc;
	})();
	var MakeSquareOsc = (function () {
		function MakeSquareOsc(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeSquareOsc.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeSquareOsc(value0, value1, value2);
				};
			};
		};
		return MakeSquareOsc;
	})();
	var MakeSpeaker = (function () {
		function MakeSpeaker() {}
		MakeSpeaker.value = new MakeSpeaker();
		return MakeSpeaker;
	})();
	var MakeStereoPanner = (function () {
		function MakeStereoPanner(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeStereoPanner.create = function (value0) {
			return function (value1) {
				return new MakeStereoPanner(value0, value1);
			};
		};
		return MakeStereoPanner;
	})();
	var MakeTriangleOsc = (function () {
		function MakeTriangleOsc(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeTriangleOsc.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeTriangleOsc(value0, value1, value2);
				};
			};
		};
		return MakeTriangleOsc;
	})();
	var MakeWaveShaper = (function () {
		function MakeWaveShaper(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeWaveShaper.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeWaveShaper(value0, value1, value2);
				};
			};
		};
		return MakeWaveShaper;
	})();
	var MakeSubgraph = (function () {
		function MakeSubgraph(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		MakeSubgraph.create = function (value0) {
			return function (value1) {
				return new MakeSubgraph(value0, value1);
			};
		};
		return MakeSubgraph;
	})();
	var MakeSubgraphWithDeferredScene = (function () {
		function MakeSubgraphWithDeferredScene(value0) {
			this.value0 = value0;
		}
		MakeSubgraphWithDeferredScene.create = function (value0) {
			return new MakeSubgraphWithDeferredScene(value0);
		};
		return MakeSubgraphWithDeferredScene;
	})();
	var MakeTumult = (function () {
		function MakeTumult(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		MakeTumult.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new MakeTumult(value0, value1, value2);
				};
			};
		};
		return MakeTumult;
	})();
	var MakeTumultWithDeferredGraph = (function () {
		function MakeTumultWithDeferredGraph(value0) {
			this.value0 = value0;
		}
		MakeTumultWithDeferredGraph.create = function (value0) {
			return new MakeTumultWithDeferredGraph(value0);
		};
		return MakeTumultWithDeferredGraph;
	})();
	var ConnectXToY = (function () {
		function ConnectXToY(value0, value1, value2, value3) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
			this.value3 = value3;
		}
		ConnectXToY.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return function (value3) {
						return new ConnectXToY(value0, value1, value2, value3);
					};
				};
			};
		};
		return ConnectXToY;
	})();
	var SetAnalyserNodeCb = (function () {
		function SetAnalyserNodeCb(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetAnalyserNodeCb.create = function (value0) {
			return function (value1) {
				return new SetAnalyserNodeCb(value0, value1);
			};
		};
		return SetAnalyserNodeCb;
	})();
	var SetMediaRecorderCb = (function () {
		function SetMediaRecorderCb(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetMediaRecorderCb.create = function (value0) {
			return function (value1) {
				return new SetMediaRecorderCb(value0, value1);
			};
		};
		return SetMediaRecorderCb;
	})();
	var SetAudioWorkletParameter = (function () {
		function SetAudioWorkletParameter(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		SetAudioWorkletParameter.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new SetAudioWorkletParameter(value0, value1, value2);
				};
			};
		};
		return SetAudioWorkletParameter;
	})();
	var SetBuffer = (function () {
		function SetBuffer(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetBuffer.create = function (value0) {
			return function (value1) {
				return new SetBuffer(value0, value1);
			};
		};
		return SetBuffer;
	})();
	var SetConvolverBuffer = (function () {
		function SetConvolverBuffer(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetConvolverBuffer.create = function (value0) {
			return function (value1) {
				return new SetConvolverBuffer(value0, value1);
			};
		};
		return SetConvolverBuffer;
	})();
	var SetPeriodicOsc = (function () {
		function SetPeriodicOsc(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetPeriodicOsc.create = function (value0) {
			return function (value1) {
				return new SetPeriodicOsc(value0, value1);
			};
		};
		return SetPeriodicOsc;
	})();
	var SetOnOff = (function () {
		function SetOnOff(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetOnOff.create = function (value0) {
			return function (value1) {
				return new SetOnOff(value0, value1);
			};
		};
		return SetOnOff;
	})();
	var SetBufferOffset = (function () {
		function SetBufferOffset(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetBufferOffset.create = function (value0) {
			return function (value1) {
				return new SetBufferOffset(value0, value1);
			};
		};
		return SetBufferOffset;
	})();
	var SetLoopStart = (function () {
		function SetLoopStart(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetLoopStart.create = function (value0) {
			return function (value1) {
				return new SetLoopStart(value0, value1);
			};
		};
		return SetLoopStart;
	})();
	var SetLoopEnd = (function () {
		function SetLoopEnd(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetLoopEnd.create = function (value0) {
			return function (value1) {
				return new SetLoopEnd(value0, value1);
			};
		};
		return SetLoopEnd;
	})();
	var SetRatio = (function () {
		function SetRatio(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetRatio.create = function (value0) {
			return function (value1) {
				return new SetRatio(value0, value1);
			};
		};
		return SetRatio;
	})();
	var SetOffset = (function () {
		function SetOffset(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetOffset.create = function (value0) {
			return function (value1) {
				return new SetOffset(value0, value1);
			};
		};
		return SetOffset;
	})();
	var SetAttack = (function () {
		function SetAttack(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetAttack.create = function (value0) {
			return function (value1) {
				return new SetAttack(value0, value1);
			};
		};
		return SetAttack;
	})();
	var SetGain = (function () {
		function SetGain(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetGain.create = function (value0) {
			return function (value1) {
				return new SetGain(value0, value1);
			};
		};
		return SetGain;
	})();
	var SetQ = (function () {
		function SetQ(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetQ.create = function (value0) {
			return function (value1) {
				return new SetQ(value0, value1);
			};
		};
		return SetQ;
	})();
	var SetPan = (function () {
		function SetPan(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetPan.create = function (value0) {
			return function (value1) {
				return new SetPan(value0, value1);
			};
		};
		return SetPan;
	})();
	var SetThreshold = (function () {
		function SetThreshold(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetThreshold.create = function (value0) {
			return function (value1) {
				return new SetThreshold(value0, value1);
			};
		};
		return SetThreshold;
	})();
	var SetRelease = (function () {
		function SetRelease(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetRelease.create = function (value0) {
			return function (value1) {
				return new SetRelease(value0, value1);
			};
		};
		return SetRelease;
	})();
	var SetKnee = (function () {
		function SetKnee(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetKnee.create = function (value0) {
			return function (value1) {
				return new SetKnee(value0, value1);
			};
		};
		return SetKnee;
	})();
	var SetDelay = (function () {
		function SetDelay(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetDelay.create = function (value0) {
			return function (value1) {
				return new SetDelay(value0, value1);
			};
		};
		return SetDelay;
	})();
	var SetPlaybackRate = (function () {
		function SetPlaybackRate(value0, value1) {
			this.value1 = value1;
		}
		SetPlaybackRate.create = function (value0) {
			return function (value1) {
				return new SetPlaybackRate(value0, value1);
			};
		};
		return SetPlaybackRate;
	})();
	var SetFrequency = (function () {
		function SetFrequency(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetFrequency.create = function (value0) {
			return function (value1) {
				return new SetFrequency(value0, value1);
			};
		};
		return SetFrequency;
	})();
	var SetWaveShaperCurve = (function () {
		function SetWaveShaperCurve(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetWaveShaperCurve.create = function (value0) {
			return function (value1) {
				return new SetWaveShaperCurve(value0, value1);
			};
		};
		return SetWaveShaperCurve;
	})();
	var SetInput = (function () {
		function SetInput(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetInput.create = function (value0) {
			return function (value1) {
				return new SetInput(value0, value1);
			};
		};
		return SetInput;
	})();
	var SetSubgraph = (function () {
		function SetSubgraph(value0, value1) {
			this.value0 = value0;
			this.value1 = value1;
		}
		SetSubgraph.create = function (value0) {
			return function (value1) {
				return new SetSubgraph(value0, value1);
			};
		};
		return SetSubgraph;
	})();
	var SetTumult = (function () {
		function SetTumult(value0, value1, value2) {
			this.value0 = value0;
			this.value1 = value1;
			this.value2 = value2;
		}
		SetTumult.create = function (value0) {
			return function (value1) {
				return function (value2) {
					return new SetTumult(value0, value1, value2);
				};
			};
		};
		return SetTumult;
	})();
	var eqOversample = {
		eq: function (x) {
			return function (y) {
				if (x instanceof None && y instanceof None) {
					return true;
				}
				if (x instanceof TwoX && y instanceof TwoX) {
					return true;
				}
				if (x instanceof FourX && y instanceof FourX) {
					return true;
				}
				return false;
			};
		},
	};
	var ordOversample = {
		compare: function (x) {
			return function (y) {
				if (x instanceof None && y instanceof None) {
					return Data_Ordering.EQ.value;
				}
				if (x instanceof None) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof None) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof TwoX && y instanceof TwoX) {
					return Data_Ordering.EQ.value;
				}
				if (x instanceof TwoX) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof TwoX) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof FourX && y instanceof FourX) {
					return Data_Ordering.EQ.value;
				}
				throw new Error(
					'Failed pattern match at WAGS.Rendered (line 178, column 1 - line 178, column 48): ' +
						[x.constructor.name, y.constructor.name]
				);
			};
		},
		Eq0: function () {
			return eqOversample;
		},
	};
	var audioWorkletNodeOptionsForInstances = function (v) {
		return {
			name: v.name,
			numberOfInputs: v.numberOfInputs,
			numberOfOutputs: v.numberOfOutputs,
			outputChannelCount: v.outputChannelCount,
			parameterData: v.parameterData,
			processorOptions: Simple_JSON.writeJSON(Simple_JSON.writeForeignForeign)(
				v.processorOptions
			),
		};
	};
	var eqAudioWorkletNodeOptions_ = {
		eq: Data_Function.on(
			Data_Eq.eq(
				Data_Eq.eqRec()(
					Data_Eq.eqRowCons(
						Data_Eq.eqRowCons(
							Data_Eq.eqRowCons(
								Data_Eq.eqRowCons(
									Data_Eq.eqRowCons(
										Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
											reflectSymbol: function () {
												return 'processorOptions';
											},
										})(Data_Eq.eqString)
									)()({
										reflectSymbol: function () {
											return 'parameterData';
										},
									})(
										Foreign_Object.eqObject(
											WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber)
										)
									)
								)()({
									reflectSymbol: function () {
										return 'outputChannelCount';
									},
								})(Data_Eq.eqArray(Data_Eq.eqInt))
							)()({
								reflectSymbol: function () {
									return 'numberOfOutputs';
								},
							})(Data_Eq.eqInt)
						)()({
							reflectSymbol: function () {
								return 'numberOfInputs';
							},
						})(Data_Eq.eqInt)
					)()({
						reflectSymbol: function () {
							return 'name';
						},
					})(Data_Eq.eqString)
				)
			)
		)(
			(function () {
				var $4507 = Data_Newtype.unwrap();
				return function ($4508) {
					return audioWorkletNodeOptionsForInstances($4507($4508));
				};
			})()
		),
	};
	var eqInstruction = {
		eq: function (x) {
			return function (y) {
				if (x instanceof DisconnectXFromY && y instanceof DisconnectXFromY) {
					return (
						x.value0 === y.value0 &&
						x.value1 === y.value1 &&
						x.value2 === y.value2 &&
						x.value3 === y.value3
					);
				}
				if (x instanceof DestroyUnit && y instanceof DestroyUnit) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof MakeAllpass && y instanceof MakeAllpass) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeAnalyser && y instanceof MakeAnalyser) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqAnalyserNodeCb)(x.value1)(y.value1)
					);
				}
				if (
					x instanceof MakeAudioWorkletNode &&
					y instanceof MakeAudioWorkletNode
				) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(eqAudioWorkletNodeOptions_)(x.value1)(y.value1)
					);
				}
				if (x instanceof MakeBandpass && y instanceof MakeBandpass) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeConstant && y instanceof MakeConstant) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (
					x instanceof MakePassthroughConvolver &&
					y instanceof MakePassthroughConvolver
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof MakeConvolver && y instanceof MakeConvolver) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserAudioBuffer)(x.value1)(y.value1)
					);
				}
				if (x instanceof MakeDelay && y instanceof MakeDelay) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (
					x instanceof MakeDynamicsCompressor &&
					y instanceof MakeDynamicsCompressor
				) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value3
						)(y.value3) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value4
						)(y.value4) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value5
						)(y.value5)
					);
				}
				if (x instanceof MakeGain && y instanceof MakeGain) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof MakeHighpass && y instanceof MakeHighpass) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeHighshelf && y instanceof MakeHighshelf) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeInput && y instanceof MakeInput) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof MakeLoopBuf && y instanceof MakeLoopBuf) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserAudioBuffer)(x.value1)(y.value1) &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value2)(y.value2) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value3
						)(y.value3) &&
						x.value4 === y.value4 &&
						x.value5 === y.value5
					);
				}
				if (
					x instanceof MakeLoopBufWithDeferredBuffer &&
					y instanceof MakeLoopBufWithDeferredBuffer
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof MakeLowpass && y instanceof MakeLowpass) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeLowshelf && y instanceof MakeLowshelf) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeMicrophone && y instanceof MakeMicrophone) {
					return Data_Eq.eq(WAGS_WebAPI.eqBrowserMicrophone)(x.value0)(
						y.value0
					);
				}
				if (x instanceof MakeNotch && y instanceof MakeNotch) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakePeaking && y instanceof MakePeaking) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value3
						)(y.value3)
					);
				}
				if (
					x instanceof MakePeriodicOscWithDeferredOsc &&
					y instanceof MakePeriodicOscWithDeferredOsc
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof MakePeriodicOsc && y instanceof MakePeriodicOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							Data_Either.eqEither(WAGS_WebAPI.eqBrowserPeriodicWave)(
								Data_Tuple.eqTuple(Data_Eq.eqArray(Data_Eq.eqNumber))(
									Data_Eq.eqArray(Data_Eq.eqNumber)
								)
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value2)(y.value2) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value3
						)(y.value3)
					);
				}
				if (x instanceof MakePlayBuf && y instanceof MakePlayBuf) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserAudioBuffer)(x.value1)(y.value1) &&
						x.value2 === y.value2 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value3)(y.value3) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value4
						)(y.value4)
					);
				}
				if (
					x instanceof MakePlayBufWithDeferredBuffer &&
					y instanceof MakePlayBufWithDeferredBuffer
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof MakeRecorder && y instanceof MakeRecorder) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqMediaRecorderCb)(x.value1)(y.value1)
					);
				}
				if (x instanceof MakeSawtoothOsc && y instanceof MakeSawtoothOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeSinOsc && y instanceof MakeSinOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeSquareOsc && y instanceof MakeSquareOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeSpeaker && y instanceof MakeSpeaker) {
					return true;
				}
				if (x instanceof MakeStereoPanner && y instanceof MakeStereoPanner) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof MakeTriangleOsc && y instanceof MakeTriangleOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1) &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof MakeWaveShaper && y instanceof MakeWaveShaper) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserFloatArray)(x.value1)(y.value1) &&
						Data_Eq.eq(eqOversample)(x.value2)(y.value2)
					);
				}
				if (x instanceof MakeSubgraph && y instanceof MakeSubgraph) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							Data_Lazy.eqLazy(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction)))
						)(x.value1)(y.value1)
					);
				}
				if (
					x instanceof MakeSubgraphWithDeferredScene &&
					y instanceof MakeSubgraphWithDeferredScene
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof MakeTumult && y instanceof MakeTumult) {
					return (
						x.value0 === y.value0 &&
						x.value1 === y.value1 &&
						Data_Eq.eq(Data_Eq.eqArray(Data_Set.eqSet(eqInstruction)))(
							x.value2
						)(y.value2)
					);
				}
				if (
					x instanceof MakeTumultWithDeferredGraph &&
					y instanceof MakeTumultWithDeferredGraph
				) {
					return x.value0 === y.value0;
				}
				if (x instanceof ConnectXToY && y instanceof ConnectXToY) {
					return (
						x.value0 === y.value0 &&
						x.value1 === y.value1 &&
						x.value2 === y.value2 &&
						x.value3 === y.value3
					);
				}
				if (x instanceof SetAnalyserNodeCb && y instanceof SetAnalyserNodeCb) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqAnalyserNodeCb)(x.value1)(y.value1)
					);
				}
				if (
					x instanceof SetMediaRecorderCb &&
					y instanceof SetMediaRecorderCb
				) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqMediaRecorderCb)(x.value1)(y.value1)
					);
				}
				if (
					x instanceof SetAudioWorkletParameter &&
					y instanceof SetAudioWorkletParameter
				) {
					return (
						x.value0 === y.value0 &&
						x.value1 === y.value1 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value2
						)(y.value2)
					);
				}
				if (x instanceof SetBuffer && y instanceof SetBuffer) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserAudioBuffer)(x.value1)(y.value1)
					);
				}
				if (
					x instanceof SetConvolverBuffer &&
					y instanceof SetConvolverBuffer
				) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserAudioBuffer)(x.value1)(y.value1)
					);
				}
				if (x instanceof SetPeriodicOsc && y instanceof SetPeriodicOsc) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							Data_Either.eqEither(WAGS_WebAPI.eqBrowserPeriodicWave)(
								Data_Tuple.eqTuple(Data_Eq.eqArray(Data_Eq.eqNumber))(
									Data_Eq.eqArray(Data_Eq.eqNumber)
								)
							)
						)(x.value1)(y.value1)
					);
				}
				if (x instanceof SetOnOff && y instanceof SetOnOff) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							WAGS_Graph_Parameter.eqAudioParameter(
								WAGS_Graph_AudioUnit.eqOnOff
							)
						)(x.value1)(y.value1)
					);
				}
				if (x instanceof SetBufferOffset && y instanceof SetBufferOffset) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof SetLoopStart && y instanceof SetLoopStart) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof SetLoopEnd && y instanceof SetLoopEnd) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof SetRatio && y instanceof SetRatio) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetOffset && y instanceof SetOffset) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetAttack && y instanceof SetAttack) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetGain && y instanceof SetGain) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetQ && y instanceof SetQ) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetPan && y instanceof SetPan) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetThreshold && y instanceof SetThreshold) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetRelease && y instanceof SetRelease) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetKnee && y instanceof SetKnee) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetDelay && y instanceof SetDelay) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetPlaybackRate && y instanceof SetPlaybackRate) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (x instanceof SetFrequency && y instanceof SetFrequency) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_Graph_Parameter.eqAudioParameter(Data_Eq.eqNumber))(
							x.value1
						)(y.value1)
					);
				}
				if (
					x instanceof SetWaveShaperCurve &&
					y instanceof SetWaveShaperCurve
				) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(WAGS_WebAPI.eqBrowserFloatArray)(x.value1)(y.value1)
					);
				}
				if (x instanceof SetInput && y instanceof SetInput) {
					return x.value0 === y.value0 && x.value1 === y.value1;
				}
				if (x instanceof SetSubgraph && y instanceof SetSubgraph) {
					return (
						x.value0 === y.value0 &&
						Data_Eq.eq(
							Data_Lazy.eqLazy(Data_Eq.eqArray(Data_Eq.eqArray(eqInstruction)))
						)(x.value1)(y.value1)
					);
				}
				if (x instanceof SetTumult && y instanceof SetTumult) {
					return (
						x.value0 === y.value0 &&
						x.value1 === y.value1 &&
						Data_Eq.eq(Data_Eq.eqArray(Data_Set.eqSet(eqInstruction)))(
							x.value2
						)(y.value2)
					);
				}
				return false;
			};
		},
	};
	var ordAudioWorkletNodeOptions_ = {
		compare: Data_Function.on(
			Data_Ord.compare(
				Data_Ord.ordRecord()(
					Data_Ord.ordRecordCons(
						Data_Ord.ordRecordCons(
							Data_Ord.ordRecordCons(
								Data_Ord.ordRecordCons(
									Data_Ord.ordRecordCons(
										Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
											reflectSymbol: function () {
												return 'processorOptions';
											},
										})(Data_Ord.ordString)
									)()({
										reflectSymbol: function () {
											return 'parameterData';
										},
									})(
										Foreign_Object.ordObject(
											WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
										)
									)
								)()({
									reflectSymbol: function () {
										return 'outputChannelCount';
									},
								})(Data_Ord.ordArray(Data_Ord.ordInt))
							)()({
								reflectSymbol: function () {
									return 'numberOfOutputs';
								},
							})(Data_Ord.ordInt)
						)()({
							reflectSymbol: function () {
								return 'numberOfInputs';
							},
						})(Data_Ord.ordInt)
					)()({
						reflectSymbol: function () {
							return 'name';
						},
					})(Data_Ord.ordString)
				)
			)
		)(
			(function () {
				var $4509 = Data_Newtype.unwrap();
				return function ($4510) {
					return audioWorkletNodeOptionsForInstances($4509($4510));
				};
			})()
		),
		Eq0: function () {
			return eqAudioWorkletNodeOptions_;
		},
	};
	var ordInstruction = {
		compare: function (x) {
			return function (y) {
				if (x instanceof DisconnectXFromY && y instanceof DisconnectXFromY) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(Data_Ord.ordString)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordString)(x.value3)(y.value3);
				}
				if (x instanceof DisconnectXFromY) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof DisconnectXFromY) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof DestroyUnit && y instanceof DestroyUnit) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
				}
				if (x instanceof DestroyUnit) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof DestroyUnit) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeAllpass && y instanceof MakeAllpass) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeAllpass) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeAllpass) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeAnalyser && y instanceof MakeAnalyser) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordAnalyserNodeCb)(x.value1)(
						y.value1
					);
				}
				if (x instanceof MakeAnalyser) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeAnalyser) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakeAudioWorkletNode &&
					y instanceof MakeAudioWorkletNode
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(ordAudioWorkletNodeOptions_)(x.value1)(
						y.value1
					);
				}
				if (x instanceof MakeAudioWorkletNode) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeAudioWorkletNode) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeBandpass && y instanceof MakeBandpass) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeBandpass) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeBandpass) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeConstant && y instanceof MakeConstant) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeConstant) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeConstant) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakePassthroughConvolver &&
					y instanceof MakePassthroughConvolver
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakePassthroughConvolver) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePassthroughConvolver) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeConvolver && y instanceof MakeConvolver) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordBrowserAudioBuffer)(x.value1)(
						y.value1
					);
				}
				if (x instanceof MakeConvolver) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeConvolver) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeDelay && y instanceof MakeDelay) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof MakeDelay) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeDelay) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakeDynamicsCompressor &&
					y instanceof MakeDynamicsCompressor
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v3 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value3)(y.value3);
					if (v3 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v3 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v4 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value4)(y.value4);
					if (v4 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v4 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value5)(y.value5);
				}
				if (x instanceof MakeDynamicsCompressor) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeDynamicsCompressor) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeGain && y instanceof MakeGain) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof MakeGain) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeGain) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeHighpass && y instanceof MakeHighpass) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeHighpass) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeHighpass) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeHighshelf && y instanceof MakeHighshelf) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeHighshelf) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeHighshelf) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeInput && y instanceof MakeInput) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
				}
				if (x instanceof MakeInput) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeInput) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeLoopBuf && y instanceof MakeLoopBuf) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(WAGS_WebAPI.ordBrowserAudioBuffer)(
						x.value1
					)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v3 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value3)(y.value3);
					if (v3 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v3 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v4 = Data_Ord.compare(Data_Ord.ordNumber)(x.value4)(y.value4);
					if (v4 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v4 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordNumber)(x.value5)(y.value5);
				}
				if (x instanceof MakeLoopBuf) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeLoopBuf) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakeLoopBufWithDeferredBuffer &&
					y instanceof MakeLoopBufWithDeferredBuffer
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakeLoopBufWithDeferredBuffer) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeLoopBufWithDeferredBuffer) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeLowpass && y instanceof MakeLowpass) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeLowpass) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeLowpass) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeLowshelf && y instanceof MakeLowshelf) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeLowshelf) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeLowshelf) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeMicrophone && y instanceof MakeMicrophone) {
					return Data_Ord.compare(WAGS_WebAPI.ordBrowserMicrophone)(x.value0)(
						y.value0
					);
				}
				if (x instanceof MakeMicrophone) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeMicrophone) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeNotch && y instanceof MakeNotch) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeNotch) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeNotch) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakePeaking && y instanceof MakePeaking) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value3)(y.value3);
				}
				if (x instanceof MakePeaking) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePeaking) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakePeriodicOscWithDeferredOsc &&
					y instanceof MakePeriodicOscWithDeferredOsc
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakePeriodicOscWithDeferredOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePeriodicOscWithDeferredOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakePeriodicOsc && y instanceof MakePeriodicOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						Data_Either.ordEither(WAGS_WebAPI.ordBrowserPeriodicWave)(
							Data_Tuple.ordTuple(Data_Ord.ordArray(Data_Ord.ordNumber))(
								Data_Ord.ordArray(Data_Ord.ordNumber)
							)
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value3)(y.value3);
				}
				if (x instanceof MakePeriodicOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePeriodicOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakePlayBuf && y instanceof MakePlayBuf) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(WAGS_WebAPI.ordBrowserAudioBuffer)(
						x.value1
					)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(Data_Ord.ordNumber)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v3 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value3)(y.value3);
					if (v3 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v3 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value4)(y.value4);
				}
				if (x instanceof MakePlayBuf) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePlayBuf) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakePlayBufWithDeferredBuffer &&
					y instanceof MakePlayBufWithDeferredBuffer
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakePlayBufWithDeferredBuffer) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakePlayBufWithDeferredBuffer) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeRecorder && y instanceof MakeRecorder) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordMediaRecorderCb)(x.value1)(
						y.value1
					);
				}
				if (x instanceof MakeRecorder) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeRecorder) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeSawtoothOsc && y instanceof MakeSawtoothOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeSawtoothOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSawtoothOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeSinOsc && y instanceof MakeSinOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeSinOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSinOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeSquareOsc && y instanceof MakeSquareOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeSquareOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSquareOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeSpeaker && y instanceof MakeSpeaker) {
					return Data_Ordering.EQ.value;
				}
				if (x instanceof MakeSpeaker) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSpeaker) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeStereoPanner && y instanceof MakeStereoPanner) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof MakeStereoPanner) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeStereoPanner) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeTriangleOsc && y instanceof MakeTriangleOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeTriangleOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeTriangleOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeWaveShaper && y instanceof MakeWaveShaper) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(WAGS_WebAPI.ordBrowserFloatArray)(x.value1)(
						y.value1
					);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(ordOversample)(x.value2)(y.value2);
				}
				if (x instanceof MakeWaveShaper) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeWaveShaper) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeSubgraph && y instanceof MakeSubgraph) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						Data_Lazy.ordLazy(
							Data_Ord.ordArray(Data_Ord.ordArray(ordInstruction))
						)
					)(x.value1)(y.value1);
				}
				if (x instanceof MakeSubgraph) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSubgraph) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakeSubgraphWithDeferredScene &&
					y instanceof MakeSubgraphWithDeferredScene
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakeSubgraphWithDeferredScene) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeSubgraphWithDeferredScene) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof MakeTumult && y instanceof MakeTumult) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						Data_Ord.ordArray(Data_Set.ordSet(ordInstruction))
					)(x.value2)(y.value2);
				}
				if (x instanceof MakeTumult) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeTumult) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof MakeTumultWithDeferredGraph &&
					y instanceof MakeTumultWithDeferredGraph
				) {
					return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
				}
				if (x instanceof MakeTumultWithDeferredGraph) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof MakeTumultWithDeferredGraph) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof ConnectXToY && y instanceof ConnectXToY) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v2 = Data_Ord.compare(Data_Ord.ordString)(x.value2)(y.value2);
					if (v2 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v2 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordString)(x.value3)(y.value3);
				}
				if (x instanceof ConnectXToY) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof ConnectXToY) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetAnalyserNodeCb && y instanceof SetAnalyserNodeCb) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordAnalyserNodeCb)(x.value1)(
						y.value1
					);
				}
				if (x instanceof SetAnalyserNodeCb) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetAnalyserNodeCb) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof SetMediaRecorderCb &&
					y instanceof SetMediaRecorderCb
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordMediaRecorderCb)(x.value1)(
						y.value1
					);
				}
				if (x instanceof SetMediaRecorderCb) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetMediaRecorderCb) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof SetAudioWorkletParameter &&
					y instanceof SetAudioWorkletParameter
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value2)(y.value2);
				}
				if (x instanceof SetAudioWorkletParameter) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetAudioWorkletParameter) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetBuffer && y instanceof SetBuffer) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordBrowserAudioBuffer)(x.value1)(
						y.value1
					);
				}
				if (x instanceof SetBuffer) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetBuffer) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof SetConvolverBuffer &&
					y instanceof SetConvolverBuffer
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordBrowserAudioBuffer)(x.value1)(
						y.value1
					);
				}
				if (x instanceof SetConvolverBuffer) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetConvolverBuffer) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetPeriodicOsc && y instanceof SetPeriodicOsc) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						Data_Either.ordEither(WAGS_WebAPI.ordBrowserPeriodicWave)(
							Data_Tuple.ordTuple(Data_Ord.ordArray(Data_Ord.ordNumber))(
								Data_Ord.ordArray(Data_Ord.ordNumber)
							)
						)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetPeriodicOsc) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetPeriodicOsc) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetOnOff && y instanceof SetOnOff) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(
							WAGS_Graph_AudioUnit.ordOnOff
						)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetOnOff) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetOnOff) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetBufferOffset && y instanceof SetBufferOffset) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordNumber)(x.value1)(y.value1);
				}
				if (x instanceof SetBufferOffset) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetBufferOffset) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetLoopStart && y instanceof SetLoopStart) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordNumber)(x.value1)(y.value1);
				}
				if (x instanceof SetLoopStart) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetLoopStart) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetLoopEnd && y instanceof SetLoopEnd) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordNumber)(x.value1)(y.value1);
				}
				if (x instanceof SetLoopEnd) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetLoopEnd) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetRatio && y instanceof SetRatio) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetRatio) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetRatio) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetOffset && y instanceof SetOffset) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetOffset) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetOffset) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetAttack && y instanceof SetAttack) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetAttack) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetAttack) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetGain && y instanceof SetGain) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetGain) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetGain) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetQ && y instanceof SetQ) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetQ) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetQ) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetPan && y instanceof SetPan) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetPan) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetPan) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetThreshold && y instanceof SetThreshold) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetThreshold) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetThreshold) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetRelease && y instanceof SetRelease) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetRelease) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetRelease) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetKnee && y instanceof SetKnee) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetKnee) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetKnee) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetDelay && y instanceof SetDelay) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetDelay) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetDelay) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetPlaybackRate && y instanceof SetPlaybackRate) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetPlaybackRate) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetPlaybackRate) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetFrequency && y instanceof SetFrequency) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						WAGS_Graph_Parameter.ordAudioParameter(Data_Ord.ordNumber)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetFrequency) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetFrequency) {
					return Data_Ordering.GT.value;
				}
				if (
					x instanceof SetWaveShaperCurve &&
					y instanceof SetWaveShaperCurve
				) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(WAGS_WebAPI.ordBrowserFloatArray)(x.value1)(
						y.value1
					);
				}
				if (x instanceof SetWaveShaperCurve) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetWaveShaperCurve) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetInput && y instanceof SetInput) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
				}
				if (x instanceof SetInput) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetInput) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetSubgraph && y instanceof SetSubgraph) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						Data_Lazy.ordLazy(
							Data_Ord.ordArray(Data_Ord.ordArray(ordInstruction))
						)
					)(x.value1)(y.value1);
				}
				if (x instanceof SetSubgraph) {
					return Data_Ordering.LT.value;
				}
				if (y instanceof SetSubgraph) {
					return Data_Ordering.GT.value;
				}
				if (x instanceof SetTumult && y instanceof SetTumult) {
					var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
					if (v instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					var v1 = Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
					if (v1 instanceof Data_Ordering.LT) {
						return Data_Ordering.LT.value;
					}
					if (v1 instanceof Data_Ordering.GT) {
						return Data_Ordering.GT.value;
					}
					return Data_Ord.compare(
						Data_Ord.ordArray(Data_Set.ordSet(ordInstruction))
					)(x.value2)(y.value2);
				}
				throw new Error(
					'Failed pattern match at WAGS.Rendered (line 163, column 1 - line 163, column 50): ' +
						[x.constructor.name, y.constructor.name]
				);
			};
		},
		Eq0: function () {
			return eqInstruction;
		},
	};
	exports['DisconnectXFromY'] = DisconnectXFromY;
	exports['DestroyUnit'] = DestroyUnit;
	exports['MakeAllpass'] = MakeAllpass;
	exports['MakeAnalyser'] = MakeAnalyser;
	exports['MakeAudioWorkletNode'] = MakeAudioWorkletNode;
	exports['MakeBandpass'] = MakeBandpass;
	exports['MakeConstant'] = MakeConstant;
	exports['MakePassthroughConvolver'] = MakePassthroughConvolver;
	exports['MakeConvolver'] = MakeConvolver;
	exports['MakeDelay'] = MakeDelay;
	exports['MakeDynamicsCompressor'] = MakeDynamicsCompressor;
	exports['MakeGain'] = MakeGain;
	exports['MakeHighpass'] = MakeHighpass;
	exports['MakeHighshelf'] = MakeHighshelf;
	exports['MakeInput'] = MakeInput;
	exports['MakeLoopBuf'] = MakeLoopBuf;
	exports['MakeLoopBufWithDeferredBuffer'] = MakeLoopBufWithDeferredBuffer;
	exports['MakeLowpass'] = MakeLowpass;
	exports['MakeLowshelf'] = MakeLowshelf;
	exports['MakeMicrophone'] = MakeMicrophone;
	exports['MakeNotch'] = MakeNotch;
	exports['MakePeaking'] = MakePeaking;
	exports['MakePeriodicOscWithDeferredOsc'] = MakePeriodicOscWithDeferredOsc;
	exports['MakePeriodicOsc'] = MakePeriodicOsc;
	exports['MakePlayBuf'] = MakePlayBuf;
	exports['MakePlayBufWithDeferredBuffer'] = MakePlayBufWithDeferredBuffer;
	exports['MakeRecorder'] = MakeRecorder;
	exports['MakeSawtoothOsc'] = MakeSawtoothOsc;
	exports['MakeSinOsc'] = MakeSinOsc;
	exports['MakeSquareOsc'] = MakeSquareOsc;
	exports['MakeSpeaker'] = MakeSpeaker;
	exports['MakeStereoPanner'] = MakeStereoPanner;
	exports['MakeTriangleOsc'] = MakeTriangleOsc;
	exports['MakeWaveShaper'] = MakeWaveShaper;
	exports['MakeSubgraph'] = MakeSubgraph;
	exports['MakeSubgraphWithDeferredScene'] = MakeSubgraphWithDeferredScene;
	exports['MakeTumult'] = MakeTumult;
	exports['MakeTumultWithDeferredGraph'] = MakeTumultWithDeferredGraph;
	exports['ConnectXToY'] = ConnectXToY;
	exports['SetAnalyserNodeCb'] = SetAnalyserNodeCb;
	exports['SetMediaRecorderCb'] = SetMediaRecorderCb;
	exports['SetAudioWorkletParameter'] = SetAudioWorkletParameter;
	exports['SetBuffer'] = SetBuffer;
	exports['SetConvolverBuffer'] = SetConvolverBuffer;
	exports['SetPeriodicOsc'] = SetPeriodicOsc;
	exports['SetOnOff'] = SetOnOff;
	exports['SetBufferOffset'] = SetBufferOffset;
	exports['SetLoopStart'] = SetLoopStart;
	exports['SetLoopEnd'] = SetLoopEnd;
	exports['SetRatio'] = SetRatio;
	exports['SetOffset'] = SetOffset;
	exports['SetAttack'] = SetAttack;
	exports['SetGain'] = SetGain;
	exports['SetQ'] = SetQ;
	exports['SetPan'] = SetPan;
	exports['SetThreshold'] = SetThreshold;
	exports['SetRelease'] = SetRelease;
	exports['SetKnee'] = SetKnee;
	exports['SetDelay'] = SetDelay;
	exports['SetPlaybackRate'] = SetPlaybackRate;
	exports['SetFrequency'] = SetFrequency;
	exports['SetWaveShaperCurve'] = SetWaveShaperCurve;
	exports['SetInput'] = SetInput;
	exports['SetSubgraph'] = SetSubgraph;
	exports['SetTumult'] = SetTumult;
	exports['None'] = None;
	exports['TwoX'] = TwoX;
	exports['FourX'] = FourX;
	exports['ordInstruction'] = ordInstruction;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Tumult.Reconciliation'] = $PS['WAGS.Tumult.Reconciliation'] || {};
	var exports = $PS['WAGS.Tumult.Reconciliation'];
	var Control_Category = $PS['Control.Category'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_List = $PS['Data.List'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Set = $PS['Data.Set'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Foreign_Object = $PS['Foreign.Object'];
	var WAGS_Rendered = $PS['WAGS.Rendered'];
	var reconcileTumult = function ($$new) {
		return function (old) {
			var secondus = Data_List.fromFoldable(Data_Set.foldableSet)(old);
			var primus = Data_List.fromFoldable(Data_Set.foldableSet)($$new);
			var go = function ($copy_v) {
				return function ($copy_v1) {
					return function ($copy_set) {
						var $tco_var_v = $copy_v;
						var $tco_var_v1 = $copy_v1;
						var $tco_done = false;
						var $tco_result;
						function $tco_loop(v, v1, set) {
							if (
								v instanceof Data_List_Types.Nil &&
								v1 instanceof Data_List_Types.Nil
							) {
								$tco_done = true;
								return set;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.ConnectXToY &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.ConnectXToY
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.ConnectXToY(
											v.value0.value0,
											v.value0.value1,
											v.value0.value2,
											v.value0.value3
										)
									)(set);
									return;
								}
								if (v.value0.value0 > v1.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DisconnectXFromY(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v1.value0.value3
										)
									)(set);
									return;
								}
								if (v.value0.value2 < v1.value0.value2) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.ConnectXToY(
											v.value0.value0,
											v.value0.value1,
											v.value0.value2,
											v.value0.value3
										)
									)(set);
									return;
								}
								if (v.value0.value2 > v1.value0.value2) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DisconnectXFromY(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v1.value0.value3
										)
									)(set);
									return;
								}
								if (v.value0.value1 !== v1.value0.value1) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DisconnectXFromY(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v1.value0.value3
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.ConnectXToY(
												v.value0.value0,
												v.value0.value1,
												v.value0.value2,
												v.value0.value3
											)
										)(set)
									);
									return;
								}
								if (v.value0.value3 !== v1.value0.value3) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DisconnectXFromY(
											v1.value0.value0,
											v1.value0.value1,
											v1.value0.value2,
											v1.value0.value3
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.ConnectXToY(
												v.value0.value0,
												v.value0.value1,
												v.value0.value2,
												v.value0.value3
											)
										)(set)
									);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.ConnectXToY
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.ConnectXToY(
										v.value0.value0,
										v.value0.value1,
										v.value0.value2,
										v.value0.value3
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.ConnectXToY
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DisconnectXFromY(
										v1.value0.value0,
										v1.value0.value1,
										v1.value0.value2,
										v1.value0.value3
									)
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAllpass &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAllpass
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Allpass')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAllpass
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAllpass
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Allpass')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAnalyser &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAnalyser
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Analyser')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetAnalyserNodeCb(
											v.value0.value0,
											v.value0.value1
										)
									)(set);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAnalyser
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAnalyser
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Analyser')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAudioWorkletNode &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAudioWorkletNode
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'AudioWorkletNode'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									var fn = Data_Tuple.uncurry(
										WAGS_Rendered.SetAudioWorkletParameter.create(
											v.value0.value0
										)
									);
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.union(WAGS_Rendered.ordInstruction)(
										Data_Set.fromFoldable(Data_Foldable.foldableArray)(
											WAGS_Rendered.ordInstruction
										)(
											Control_Category.identity(Control_Category.categoryFn)(
												Data_Functor.map(Data_Functor.functorArray)(fn)(
													Foreign_Object.toUnfoldable(
														Data_Unfoldable.unfoldableArray
													)(
														Data_Newtype.unwrap()(v.value0.value1).parameterData
													)
												)
											)
										)
									)(set);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeAudioWorkletNode
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeAudioWorkletNode
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(
										v1.value0.value0,
										'AudioWorkletNode'
									)
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeBandpass &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeBandpass
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Bandpass')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeBandpass
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeBandpass
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Bandpass')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeConstant &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeConstant
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Constant')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetOffset(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeConstant
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeConstant
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Constant')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePassthroughConvolver &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePassthroughConvolver
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Convolver')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePassthroughConvolver
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePassthroughConvolver
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Convolver')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeConvolver &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeConvolver
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Convolver')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeConvolver
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeConvolver
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Convolver')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeDelay &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeDelay
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Delay')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetDelay(v.value0.value0, v.value0.value1)
									)(set);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeDelay
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeDelay
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Delay')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeDynamicsCompressor &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeDynamicsCompressor
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'DynamicsCompressor'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetThreshold(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetKnee(
												v.value0.value0,
												v.value0.value2
											)
										)(
											Data_Set.insert(WAGS_Rendered.ordInstruction)(
												new WAGS_Rendered.SetRatio(
													v.value0.value0,
													v.value0.value3
												)
											)(
												Data_Set.insert(WAGS_Rendered.ordInstruction)(
													new WAGS_Rendered.SetAttack(
														v.value0.value0,
														v.value0.value4
													)
												)(
													Data_Set.insert(WAGS_Rendered.ordInstruction)(
														new WAGS_Rendered.SetRelease(
															v.value0.value0,
															v.value0.value5
														)
													)(set)
												)
											)
										)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeDynamicsCompressor
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeDynamicsCompressor
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(
										v1.value0.value0,
										'DynamicsCompressor'
									)
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeGain &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeGain
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Gain')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetGain(v.value0.value0, v.value0.value1)
									)(set);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeGain
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeGain
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Gain')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeHighpass &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeHighpass
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Highpass')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeHighpass
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeHighpass
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Highpass')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeHighshelf &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeHighshelf
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Highshelf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetGain(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeHighshelf
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeHighshelf
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Highshelf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeInput &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeInput
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Input')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeInput
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeInput
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Input')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLoopBuf &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLoopBuf
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'LoopBuf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetBuffer(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetOnOff(
												v.value0.value0,
												v.value0.value2
											)
										)(
											Data_Set.insert(WAGS_Rendered.ordInstruction)(
												new WAGS_Rendered.SetPlaybackRate(
													v.value0.value0,
													v.value0.value3
												)
											)(
												Data_Set.insert(WAGS_Rendered.ordInstruction)(
													new WAGS_Rendered.SetLoopStart(
														v.value0.value0,
														v.value0.value4
													)
												)(
													Data_Set.insert(WAGS_Rendered.ordInstruction)(
														new WAGS_Rendered.SetLoopEnd(
															v.value0.value0,
															v.value0.value5
														)
													)(set)
												)
											)
										)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLoopBuf
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLoopBuf
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'LoopBuf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof
									WAGS_Rendered.MakeLoopBufWithDeferredBuffer &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLoopBufWithDeferredBuffer
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'LoopBuf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLoopBufWithDeferredBuffer
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLoopBufWithDeferredBuffer
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'LoopBuf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLowpass &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLowpass
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Lowpass')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLowpass
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLowpass
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Lowpass')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLowshelf &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLowshelf
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Lowshelf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetGain(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeLowshelf
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeLowshelf
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Lowshelf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeMicrophone &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeMicrophone
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeMicrophone
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeMicrophone
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit('microphone', 'Microphone')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeNotch &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeNotch
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Notch')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeNotch
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeNotch
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Notch')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePeaking &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePeaking
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Peaking')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetFrequency(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value2)
										)(
											Data_Set.insert(WAGS_Rendered.ordInstruction)(
												new WAGS_Rendered.SetGain(
													v.value0.value0,
													v.value0.value3
												)
											)(set)
										)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePeaking
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePeaking
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Peaking')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof
									WAGS_Rendered.MakePeriodicOscWithDeferredOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof
									WAGS_Rendered.MakePeriodicOscWithDeferredOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'PeriodicOsc'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePeriodicOscWithDeferredOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof
									WAGS_Rendered.MakePeriodicOscWithDeferredOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PeriodicOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePeriodicOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePeriodicOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'PeriodicOsc'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetPeriodicOsc(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetOnOff(
												v.value0.value0,
												v.value0.value2
											)
										)(
											Data_Set.insert(WAGS_Rendered.ordInstruction)(
												new WAGS_Rendered.SetFrequency(
													v.value0.value0,
													v.value0.value3
												)
											)(set)
										)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePeriodicOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePeriodicOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PeriodicOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePlayBuf &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePlayBuf
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PlayBuf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetBuffer(
											v.value0.value0,
											v.value0.value1
										)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetBufferOffset(
												v.value0.value0,
												v.value0.value2
											)
										)(
											Data_Set.insert(WAGS_Rendered.ordInstruction)(
												new WAGS_Rendered.SetOnOff(
													v.value0.value0,
													v.value0.value3
												)
											)(
												Data_Set.insert(WAGS_Rendered.ordInstruction)(
													new WAGS_Rendered.SetPlaybackRate(
														v.value0.value0,
														v.value0.value4
													)
												)(set)
											)
										)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePlayBuf
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePlayBuf
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PlayBuf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof
									WAGS_Rendered.MakePlayBufWithDeferredBuffer &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePlayBufWithDeferredBuffer
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PlayBuf')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakePlayBufWithDeferredBuffer
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakePlayBufWithDeferredBuffer
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'PlayBuf')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeRecorder &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeRecorder
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Recorder')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeRecorder
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeRecorder
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Recorder')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSawtoothOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSawtoothOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'SawtoothOsc'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetFrequency(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSawtoothOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSawtoothOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'SawtoothOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSinOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSinOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'SinOsc')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetFrequency(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSinOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSinOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'SinOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSquareOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSquareOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'SquareOsc')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetFrequency(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSquareOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSquareOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'SquareOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSpeaker &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSpeaker
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSpeaker
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSpeaker
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit('speaker', 'Speaker')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeStereoPanner &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeStereoPanner
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'StereoPanner'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetPan(v.value0.value0, v.value0.value1)
									)(set);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeStereoPanner
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeStereoPanner
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(
										v1.value0.value0,
										'StereoPanner'
									)
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTriangleOsc &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTriangleOsc
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'TriangleOsc'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
									)(
										Data_Set.insert(WAGS_Rendered.ordInstruction)(
											new WAGS_Rendered.SetFrequency(
												v.value0.value0,
												v.value0.value2
											)
										)(set)
									);
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTriangleOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTriangleOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'TriangleOsc')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeWaveShaper &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeWaveShaper
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(
											v1.value0.value0,
											'WaveShaper'
										)
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeWaveShaper
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeWaveShaper
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'WaveShaper')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSubgraph &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSubgraph
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Subgraph')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSubgraph
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSubgraph
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Subgraph')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof
									WAGS_Rendered.MakeSubgraphWithDeferredScene &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSubgraphWithDeferredScene
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Subgraph')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeSubgraphWithDeferredScene
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeSubgraphWithDeferredScene
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Subgraph')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTumult &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTumult
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Tumult')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTumult
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTumult
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Tumult')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTumultWithDeferredGraph &&
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTumultWithDeferredGraph
							) {
								if (v.value0.value0 < v1.value0.value0) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										v.value0
									)(set);
									return;
								}
								if (v1.value0.value0 < v.value0.value0) {
									$tco_var_v = v;
									$tco_var_v1 = v1.value1;
									$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
										new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Tumult')
									)(set);
									return;
								}
								if (Data_Boolean.otherwise) {
									$tco_var_v = v.value1;
									$tco_var_v1 = v1.value1;
									$copy_set = set;
									return;
								}
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.MakeTumultWithDeferredGraph
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									v.value0
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.MakeTumultWithDeferredGraph
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(v1.value0.value0, 'Tumult')
								)(set);
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.DestroyUnit
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DestroyUnit(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.DestroyUnit
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.DisconnectXFromY
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.DisconnectXFromY(
										v.value0.value0,
										v.value0.value1,
										v.value0.value2,
										v.value0.value3
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.DisconnectXFromY
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetAnalyserNodeCb
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetAnalyserNodeCb(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetAnalyserNodeCb
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetMediaRecorderCb
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetMediaRecorderCb(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetMediaRecorderCb
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetAudioWorkletParameter
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetAudioWorkletParameter(
										v.value0.value0,
										v.value0.value1,
										v.value0.value2
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetAudioWorkletParameter
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetBuffer
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetBuffer(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetBuffer
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetConvolverBuffer
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetConvolverBuffer(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetConvolverBuffer
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetPeriodicOsc
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetPeriodicOsc(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetPeriodicOsc
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetOnOff
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetOnOff(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetOnOff
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetBufferOffset
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetBufferOffset(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetBufferOffset
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetLoopStart
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetLoopStart(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetLoopStart
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetLoopEnd
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetLoopEnd(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetLoopEnd
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetRatio
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetRatio(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetRatio
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetOffset
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetOffset(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetOffset
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetAttack
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetAttack(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetAttack
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetGain
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetGain(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetGain
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetQ
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetQ(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetQ
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetPan
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetPan(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetPan
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetThreshold
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetThreshold(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetThreshold
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetRelease
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetRelease(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetRelease
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetKnee
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetKnee(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetKnee
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetDelay
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetDelay(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetDelay
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetPlaybackRate
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetPlaybackRate(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetPlaybackRate
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetFrequency
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetFrequency(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetFrequency
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetWaveShaperCurve
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetWaveShaperCurve(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetWaveShaperCurve
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetInput
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetInput(v.value0.value0, v.value0.value1)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetInput
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetSubgraph
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetSubgraph(
										v.value0.value0,
										v.value0.value1
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetSubgraph
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							if (
								v instanceof Data_List_Types.Cons &&
								v.value0 instanceof WAGS_Rendered.SetTumult
							) {
								$tco_var_v = v.value1;
								$tco_var_v1 = v1;
								$copy_set = Data_Set.insert(WAGS_Rendered.ordInstruction)(
									new WAGS_Rendered.SetTumult(
										v.value0.value0,
										v.value0.value1,
										v.value0.value2
									)
								)(set);
								return;
							}
							if (
								v1 instanceof Data_List_Types.Cons &&
								v1.value0 instanceof WAGS_Rendered.SetTumult
							) {
								$tco_var_v = v;
								$tco_var_v1 = v1.value1;
								$copy_set = set;
								return;
							}
							throw new Error(
								'Failed pattern match at WAGS.Tumult.Reconciliation (line 20, column 3 - line 20, column 83): ' +
									[
										v.constructor.name,
										v1.constructor.name,
										set.constructor.name,
									]
							);
						}
						while (!$tco_done) {
							$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_set);
						}
						return $tco_result;
					};
				};
			};
			var result = go(primus)(secondus)(Data_Set.empty);
			return result;
		};
	};
	exports['reconcileTumult'] = reconcileTumult;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Interpret'] = $PS['WAGS.Interpret'] || {};
	var exports = $PS['WAGS.Interpret'];
	var $foreign = $PS['WAGS.Interpret'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Category = $PS['Control.Category'];
	var Data_Array = $PS['Data.Array'];
	var Data_Either = $PS['Data.Either'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_Lazy = $PS['Data.Lazy'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Profunctor = $PS['Data.Profunctor'];
	var Data_Set = $PS['Data.Set'];
	var Data_Show = $PS['Data.Show'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Typelevel_Undefined = $PS['Data.Typelevel.Undefined'];
	var Data_Unit = $PS['Data.Unit'];
	var Data_Vec = $PS['Data.Vec'];
	var Foreign_Object = $PS['Foreign.Object'];
	var Safe_Coerce = $PS['Safe.Coerce'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Graph_AudioUnit = $PS['WAGS.Graph.AudioUnit'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var WAGS_Rendered = $PS['WAGS.Rendered'];
	var WAGS_Tumult_Reconciliation = $PS['WAGS.Tumult.Reconciliation'];
	var unAsSubGraph = function (v) {
		return function (dictAudioInterpret) {
			return v(dictAudioInterpret);
		};
	};
	var setWaveShaperCurve = function (dict) {
		return dict.setWaveShaperCurve;
	};
	var setTumult = function (dict) {
		return dict.setTumult;
	};
	var setThreshold = function (dict) {
		return dict.setThreshold;
	};
	var setSubgraph = function (dict) {
		return dict.setSubgraph;
	};
	var setRelease = function (dict) {
		return dict.setRelease;
	};
	var setRatio = function (dict) {
		return dict.setRatio;
	};
	var setQ = function (dict) {
		return dict.setQ;
	};
	var setPlaybackRate = function (dict) {
		return dict.setPlaybackRate;
	};
	var setPeriodicOscV = function (dict) {
		return dict.setPeriodicOscV;
	};
	var setPeriodicOsc = function (dict) {
		return dict.setPeriodicOsc;
	};
	var setPan = function (dict) {
		return dict.setPan;
	};
	var setOnOff = function (dict) {
		return dict.setOnOff;
	};
	var setOffset = function (dict) {
		return dict.setOffset;
	};
	var setMediaRecorderCb = function (dict) {
		return dict.setMediaRecorderCb;
	};
	var setLoopStart = function (dict) {
		return dict.setLoopStart;
	};
	var setLoopEnd = function (dict) {
		return dict.setLoopEnd;
	};
	var setKnee = function (dict) {
		return dict.setKnee;
	};
	var setInput = function (dict) {
		return dict.setInput;
	};
	var setGain = function (dict) {
		return dict.setGain;
	};
	var setFrequency = function (dict) {
		return dict.setFrequency;
	};
	var setDelay = function (dict) {
		return dict.setDelay;
	};
	var setConvolverBuffer = function (dict) {
		return dict.setConvolverBuffer;
	};
	var setBufferOffset = function (dict) {
		return dict.setBufferOffset;
	};
	var setBuffer = function (dict) {
		return dict.setBuffer;
	};
	var setAudioWorkletParameter = function (dict) {
		return dict.setAudioWorkletParameter;
	};
	var setAttack = function (dict) {
		return dict.setAttack;
	};
	var setAnalyserNodeCb = function (dict) {
		return dict.setAnalyserNodeCb;
	};
	var safeToFFI_VecNumber = {
		safeToFFI: function (v) {
			return [v.value0, v.value1];
		},
	};
	var safeToFFI_String = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_Oversample = {
		safeToFFI: function (v) {
			if (v instanceof WAGS_Rendered.None) {
				return 'none';
			}
			if (v instanceof WAGS_Rendered.TwoX) {
				return '2x';
			}
			if (v instanceof WAGS_Rendered.FourX) {
				return '4x';
			}
			throw new Error(
				'Failed pattern match at WAGS.Interpret (line 990, column 15 - line 993, column 18): ' +
					[v.constructor.name]
			);
		},
	};
	var safeToFFI_Number = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_MediaRecorderCb = {
		safeToFFI: Safe_Coerce.coerce(),
	};
	var safeToFFI_FFIAudio = {
		safeToFFI: function (v) {
			return v;
		},
	};
	var safeToFFI_BrowserPeriodicWave = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_BrowserMicrophone = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_BrowserFloatArray = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_BrowserAudioBuffer = {
		safeToFFI: Control_Category.identity(Control_Category.categoryFn),
	};
	var safeToFFI_AudioParameterString = {
		safeToFFI: function (v) {
			return {
				param: Data_Maybe.maybe('off')(function (v1) {
					if (v1 instanceof WAGS_Graph_AudioUnit.On) {
						return 'on';
					}
					if (v1 instanceof WAGS_Graph_AudioUnit.Off) {
						return 'off';
					}
					if (v1 instanceof WAGS_Graph_AudioUnit.OffOn) {
						return 'offOn';
					}
					throw new Error(
						'Failed pattern match at WAGS.Interpret (line 1044, column 13 - line 1047, column 31): ' +
							[v1.constructor.name]
					);
				})(v.param),
				timeOffset: v.timeOffset,
				transition: Data_Show.show(
					WAGS_Graph_Parameter.showAudioParameterTransition
				)(v.transition),
				cancel: Data_Maybe.isNothing(v.param),
			};
		},
	};
	var safeToFFI_AudioParameter = {
		safeToFFI: function (v) {
			return {
				param: Data_Maybe.fromMaybe(0.0)(v.param),
				isJust: Data_Maybe.isJust(v.param),
				timeOffset: v.timeOffset,
				transition: Data_Show.show(
					WAGS_Graph_Parameter.showAudioParameterTransition
				)(v.transition),
				cancel: Data_Maybe.isNothing(v.param),
			};
		},
	};
	var safeToFFI_AnalyserNodeCb = {
		safeToFFI: Safe_Coerce.coerce(),
	};
	var safeToFFI = function (dict) {
		return dict.safeToFFI;
	};
	var safeToFFI_AudioWorkletNodeOptions_ = {
		safeToFFI: function (v) {
			return {
				name: v.name,
				numberOfInputs: v.numberOfInputs,
				numberOfOutputs: v.numberOfOutputs,
				outputChannelCount: v.outputChannelCount,
				parameterData: Data_Functor.map(Foreign_Object.functorObject)(
					safeToFFI(safeToFFI_AudioParameter)
				)(v.parameterData),
				processorOptions: v.processorOptions,
			};
		},
	};
	var makeWaveShaper = function (dict) {
		return dict.makeWaveShaper;
	};
	var makeTumultWithDeferredGraph = function (dict) {
		return dict.makeTumultWithDeferredGraph;
	};
	var makeTumult = function (dict) {
		return dict.makeTumult;
	};
	var makeTriangleOsc = function (dict) {
		return dict.makeTriangleOsc;
	};
	var makeSubgraphWithDeferredScene = function (dict) {
		return dict.makeSubgraphWithDeferredScene;
	};
	var makeSubgraph = function (dict) {
		return dict.makeSubgraph;
	};
	var makeStereoPanner = function (dict) {
		return dict.makeStereoPanner;
	};
	var makeSquareOsc = function (dict) {
		return dict.makeSquareOsc;
	};
	var makeSpeaker = function (dict) {
		return dict.makeSpeaker;
	};
	var makeSinOsc = function (dict) {
		return dict.makeSinOsc;
	};
	var makeSawtoothOsc = function (dict) {
		return dict.makeSawtoothOsc;
	};
	var makeRecorder = function (dict) {
		return dict.makeRecorder;
	};
	var makePlayBufWithDeferredBuffer = function (dict) {
		return dict.makePlayBufWithDeferredBuffer;
	};
	var makePlayBuf = function (dict) {
		return dict.makePlayBuf;
	};
	var makePeriodicOscWithDeferredOsc = function (dict) {
		return dict.makePeriodicOscWithDeferredOsc;
	};
	var makePeriodicOscV = function (dict) {
		return dict.makePeriodicOscV;
	};
	var makePeriodicOsc = function (dict) {
		return dict.makePeriodicOsc;
	};
	var makePeaking = function (dict) {
		return dict.makePeaking;
	};
	var makePassthroughConvolver = function (dict) {
		return dict.makePassthroughConvolver;
	};
	var makeNotch = function (dict) {
		return dict.makeNotch;
	};
	var makeMicrophone = function (dict) {
		return dict.makeMicrophone;
	};
	var makeLowshelf = function (dict) {
		return dict.makeLowshelf;
	};
	var makeLowpass = function (dict) {
		return dict.makeLowpass;
	};
	var makeLoopBufWithDeferredBuffer = function (dict) {
		return dict.makeLoopBufWithDeferredBuffer;
	};
	var makeLoopBuf = function (dict) {
		return dict.makeLoopBuf;
	};
	var makeInput = function (dict) {
		return dict.makeInput;
	};
	var makeHighshelf = function (dict) {
		return dict.makeHighshelf;
	};
	var makeHighpass = function (dict) {
		return dict.makeHighpass;
	};
	var makeGain = function (dict) {
		return dict.makeGain;
	};
	var makeDynamicsCompressor = function (dict) {
		return dict.makeDynamicsCompressor;
	};
	var makeDelay = function (dict) {
		return dict.makeDelay;
	};
	var makeConvolver = function (dict) {
		return dict.makeConvolver;
	};
	var makeConstant = function (dict) {
		return dict.makeConstant;
	};
	var makeBandpass = function (dict) {
		return dict.makeBandpass;
	};
	var makeAudioWorkletNode = function (dict) {
		return dict.makeAudioWorkletNode;
	};
	var makeAnalyser = function (dict) {
		return dict.makeAnalyser;
	};
	var makeAllpass = function (dict) {
		return dict.makeAllpass;
	};
	var freeAudioInterpret = {
		connectXToY: function (a) {
			return function (aName) {
				return function (b) {
					return function (bName) {
						return Data_Function['const'](
							new WAGS_Rendered.ConnectXToY(a, aName, b, bName)
						);
					};
				};
			};
		},
		disconnectXFromY: function (a) {
			return function (aName) {
				return function (b) {
					return function (bName) {
						return Data_Function['const'](
							new WAGS_Rendered.DisconnectXFromY(a, aName, b, bName)
						);
					};
				};
			};
		},
		destroyUnit: function (a) {
			return function (aName) {
				return Data_Function['const'](new WAGS_Rendered.DestroyUnit(a, aName));
			};
		},
		makeAllpass: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.MakeAllpass(a, b, c));
				};
			};
		},
		makeAnalyser: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeAnalyser(a, b));
			};
		},
		makeAudioWorkletNode: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.MakeAudioWorkletNode(a, b)
				);
			};
		},
		makeBandpass: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeBandpass(a, b, c)
					);
				};
			};
		},
		makeConstant: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeConstant(a, b, c)
					);
				};
			};
		},
		makePassthroughConvolver: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakePassthroughConvolver(a)
			);
		},
		makeConvolver: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeConvolver(a, b));
			};
		},
		makeDelay: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeDelay(a, b));
			};
		},
		makeInput: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeInput(a, b));
			};
		},
		makeTumult: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.MakeTumult(a, b, c));
				};
			};
		},
		makeTumultWithDeferredGraph: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakeTumultWithDeferredGraph(a)
			);
		},
		makeSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (ptr) {
					return function (v) {
						return function (vc) {
							return function (iae) {
								return function (ias) {
									return Data_Function['const'](
										new WAGS_Rendered.MakeSubgraph(
											ptr,
											Data_Lazy.defer(function (v1) {
												var subs = Data_FunctorWithIndex.mapWithIndex(
													Data_Vec.functorWithIndexVec
												)(ias)(vc);
												var envs = Data_FunctorWithIndex.mapWithIndex(
													Data_Vec.functorWithIndexVec
												)(iae)(vc);
												var frames = Data_Vec.zipWithE(
													WAGS_Control_Types.oneSubFrame
												)(subs)(envs);
												return Data_Functor.map(Data_Functor.functorArray)(
													Data_Functor.map(Data_Functor.functorArray)(
														Data_Function.applyFlipped(Data_Unit.unit)
													)
												)(
													Data_Functor.map(Data_Functor.functorArray)(function (
														v2
													) {
														return v2.instructions;
													})(Data_Vec.toArray(frames))
												);
											})
										)
									);
								};
							};
						};
					};
				};
			};
		},
		makeSubgraphWithDeferredScene: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakeSubgraphWithDeferredScene(a)
			);
		},
		makeDynamicsCompressor: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return Data_Function['const'](
									new WAGS_Rendered.MakeDynamicsCompressor(a, b, c, d, e, f)
								);
							};
						};
					};
				};
			};
		},
		makeGain: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeGain(a, b));
			};
		},
		makeHighpass: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeHighpass(a, b, c)
					);
				};
			};
		},
		makeHighshelf: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeHighshelf(a, b, c)
					);
				};
			};
		},
		makeLoopBufWithDeferredBuffer: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakeLoopBufWithDeferredBuffer(a)
			);
		},
		makeLoopBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return Data_Function['const'](
									new WAGS_Rendered.MakeLoopBuf(a, b, c, d, e, f)
								);
							};
						};
					};
				};
			};
		},
		makeLowpass: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.MakeLowpass(a, b, c));
				};
			};
		},
		makeLowshelf: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeLowshelf(a, b, c)
					);
				};
			};
		},
		makeMicrophone: function (a) {
			return Data_Function['const'](new WAGS_Rendered.MakeMicrophone(a));
		},
		makeNotch: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.MakeNotch(a, b, c));
				};
			};
		},
		makePeaking: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return Data_Function['const'](
							new WAGS_Rendered.MakePeaking(a, b, c, d)
						);
					};
				};
			};
		},
		makePeriodicOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return Data_Function['const'](
							new WAGS_Rendered.MakePeriodicOsc(
								a,
								new Data_Either.Left(b),
								c,
								d
							)
						);
					};
				};
			};
		},
		makePeriodicOscV: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return Data_Function['const'](
							new WAGS_Rendered.MakePeriodicOsc(
								a,
								new Data_Either.Right(b),
								c,
								d
							)
						);
					};
				};
			};
		},
		makePeriodicOscWithDeferredOsc: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakePeriodicOscWithDeferredOsc(a)
			);
		},
		makePlayBufWithDeferredBuffer: function (a) {
			return Data_Function['const'](
				new WAGS_Rendered.MakePlayBufWithDeferredBuffer(a)
			);
		},
		makePlayBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return Data_Function['const'](
								new WAGS_Rendered.MakePlayBuf(a, b, c, d, e)
							);
						};
					};
				};
			};
		},
		makeRecorder: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeRecorder(a, b));
			};
		},
		makeSawtoothOsc: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeSawtoothOsc(a, b, c)
					);
				};
			};
		},
		makeSinOsc: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.MakeSinOsc(a, b, c));
				};
			};
		},
		makeSpeaker: Data_Function['const'](WAGS_Rendered.MakeSpeaker.value),
		makeSquareOsc: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeSquareOsc(a, b, c)
					);
				};
			};
		},
		makeStereoPanner: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.MakeStereoPanner(a, b));
			};
		},
		makeTriangleOsc: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeTriangleOsc(a, b, c)
					);
				};
			};
		},
		makeWaveShaper: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.MakeWaveShaper(a, b, c)
					);
				};
			};
		},
		setAudioWorkletParameter: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](
						new WAGS_Rendered.SetAudioWorkletParameter(a, b, c)
					);
				};
			};
		},
		setBuffer: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetBuffer(a, b));
			};
		},
		setConvolverBuffer: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetConvolverBuffer(a, b)
				);
			};
		},
		setPeriodicOsc: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetPeriodicOsc(a, new Data_Either.Left(b))
				);
			};
		},
		setPeriodicOscV: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetPeriodicOsc(a, new Data_Either.Right(b))
				);
			};
		},
		setOnOff: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetOnOff(a, b));
			};
		},
		setMediaRecorderCb: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetMediaRecorderCb(a, b)
				);
			};
		},
		setAnalyserNodeCb: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetAnalyserNodeCb(a, b)
				);
			};
		},
		setBufferOffset: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetBufferOffset(a, b));
			};
		},
		setLoopStart: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetLoopStart(a, b));
			};
		},
		setLoopEnd: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetLoopEnd(a, b));
			};
		},
		setRatio: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetRatio(a, b));
			};
		},
		setOffset: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetOffset(a, b));
			};
		},
		setAttack: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetAttack(a, b));
			};
		},
		setGain: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetGain(a, b));
			};
		},
		setQ: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetQ(a, b));
			};
		},
		setPan: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetPan(a, b));
			};
		},
		setThreshold: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetThreshold(a, b));
			};
		},
		setRelease: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetRelease(a, b));
			};
		},
		setKnee: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetKnee(a, b));
			};
		},
		setDelay: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetDelay(a, b));
			};
		},
		setPlaybackRate: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetPlaybackRate(a, b));
			};
		},
		setFrequency: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetFrequency(a, b));
			};
		},
		setWaveShaperCurve: function (a) {
			return function (b) {
				return Data_Function['const'](
					new WAGS_Rendered.SetWaveShaperCurve(a, b)
				);
			};
		},
		setInput: function (a) {
			return function (b) {
				return Data_Function['const'](new WAGS_Rendered.SetInput(a, b));
			};
		},
		setSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (ptr) {
					return function (v) {
						return function (vc) {
							return function (iae) {
								return function (ias) {
									return Data_Function['const'](
										new WAGS_Rendered.SetSubgraph(
											ptr,
											Data_Lazy.defer(function (v1) {
												var subs = Data_FunctorWithIndex.mapWithIndex(
													Data_Vec.functorWithIndexVec
												)(ias)(vc);
												var envs = Data_FunctorWithIndex.mapWithIndex(
													Data_Vec.functorWithIndexVec
												)(iae)(vc);
												var frames = Data_Vec.zipWithE(
													WAGS_Control_Types.oneSubFrame
												)(subs)(envs);
												return Data_Functor.map(Data_Functor.functorArray)(
													Data_Functor.map(Data_Functor.functorArray)(
														Data_Function.applyFlipped(Data_Unit.unit)
													)
												)(
													Data_Functor.map(Data_Functor.functorArray)(function (
														v2
													) {
														return v2.instructions;
													})(Data_Vec.toArray(frames))
												);
											})
										)
									);
								};
							};
						};
					};
				};
			};
		},
		setTumult: function (a) {
			return function (b) {
				return function (c) {
					return Data_Function['const'](new WAGS_Rendered.SetTumult(a, b, c));
				};
			};
		},
	};
	var disconnectXFromY = function (dict) {
		return dict.disconnectXFromY;
	};
	var destroyUnit = function (dict) {
		return dict.destroyUnit;
	};
	var defaultFFIAudio = function (audioCtx) {
		return function (unitCache) {
			return {
				context: audioCtx,
				writeHead: 0.0,
				units: unitCache,
			};
		};
	};
	var connectXToY = function (dict) {
		return dict.connectXToY;
	};
	var interpretInstruction = function (dictAudioInterpret) {
		return function (v) {
			if (v instanceof WAGS_Rendered.DisconnectXFromY) {
				return disconnectXFromY(dictAudioInterpret)(v.value0)(v.value1)(
					v.value2
				)(v.value3);
			}
			if (v instanceof WAGS_Rendered.DestroyUnit) {
				return destroyUnit(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeAllpass) {
				return makeAllpass(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeAnalyser) {
				return makeAnalyser(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeAudioWorkletNode) {
				return makeAudioWorkletNode(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeBandpass) {
				return makeBandpass(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeConstant) {
				return makeConstant(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakePassthroughConvolver) {
				return makePassthroughConvolver(dictAudioInterpret)(v.value0);
			}
			if (v instanceof WAGS_Rendered.MakeConvolver) {
				return makeConvolver(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeDelay) {
				return makeDelay(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeDynamicsCompressor) {
				return makeDynamicsCompressor(dictAudioInterpret)(v.value0)(v.value1)(
					v.value2
				)(v.value3)(v.value4)(v.value5);
			}
			if (v instanceof WAGS_Rendered.MakeGain) {
				return makeGain(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeHighpass) {
				return makeHighpass(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeHighshelf) {
				return makeHighshelf(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeInput) {
				return makeInput(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeLoopBuf) {
				return makeLoopBuf(dictAudioInterpret)(v.value0)(v.value1)(v.value2)(
					v.value3
				)(v.value4)(v.value5);
			}
			if (v instanceof WAGS_Rendered.MakeLoopBufWithDeferredBuffer) {
				return makeLoopBufWithDeferredBuffer(dictAudioInterpret)(v.value0);
			}
			if (v instanceof WAGS_Rendered.MakeLowpass) {
				return makeLowpass(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeLowshelf) {
				return makeLowshelf(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeMicrophone) {
				return makeMicrophone(dictAudioInterpret)(v.value0);
			}
			if (v instanceof WAGS_Rendered.MakeNotch) {
				return makeNotch(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakePeaking) {
				return makePeaking(dictAudioInterpret)(v.value0)(v.value1)(v.value2)(
					v.value3
				);
			}
			if (v instanceof WAGS_Rendered.MakePeriodicOscWithDeferredOsc) {
				return makePeriodicOscWithDeferredOsc(dictAudioInterpret)(v.value0);
			}
			if (v instanceof WAGS_Rendered.MakePeriodicOsc) {
				if (v.value1 instanceof Data_Either.Left) {
					return makePeriodicOsc(dictAudioInterpret)(v.value0)(v.value1.value0)(
						v.value2
					)(v.value3);
				}
				if (v.value1 instanceof Data_Either.Right) {
					return makePeriodicOscV(dictAudioInterpret)(v.value0)(
						v.value1.value0
					)(v.value2)(v.value3);
				}
				throw new Error(
					'Failed pattern match at WAGS.Interpret (line 820, column 32 - line 822, column 44): ' +
						[v.value1.constructor.name]
				);
			}
			if (v instanceof WAGS_Rendered.MakePlayBuf) {
				return makePlayBuf(dictAudioInterpret)(v.value0)(v.value1)(v.value2)(
					v.value3
				)(v.value4);
			}
			if (v instanceof WAGS_Rendered.MakePlayBufWithDeferredBuffer) {
				return makePlayBufWithDeferredBuffer(dictAudioInterpret)(v.value0);
			}
			if (v instanceof WAGS_Rendered.MakeRecorder) {
				return makeRecorder(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeSawtoothOsc) {
				return makeSawtoothOsc(dictAudioInterpret)(v.value0)(v.value1)(
					v.value2
				);
			}
			if (v instanceof WAGS_Rendered.MakeSinOsc) {
				return makeSinOsc(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeSquareOsc) {
				return makeSquareOsc(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeSpeaker) {
				return makeSpeaker(dictAudioInterpret);
			}
			if (v instanceof WAGS_Rendered.MakeStereoPanner) {
				return makeStereoPanner(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.MakeTriangleOsc) {
				return makeTriangleOsc(dictAudioInterpret)(v.value0)(v.value1)(
					v.value2
				);
			}
			if (v instanceof WAGS_Rendered.MakeWaveShaper) {
				return makeWaveShaper(dictAudioInterpret)(v.value0)(v.value1)(v.value2);
			}
			if (v instanceof WAGS_Rendered.MakeSubgraph) {
				return makeGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			if (v instanceof WAGS_Rendered.MakeSubgraphWithDeferredScene) {
				return makeGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			if (v instanceof WAGS_Rendered.MakeTumult) {
				return makeGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			if (v instanceof WAGS_Rendered.MakeTumultWithDeferredGraph) {
				return makeGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			if (v instanceof WAGS_Rendered.ConnectXToY) {
				return connectXToY(dictAudioInterpret)(v.value0)(v.value1)(v.value2)(
					v.value3
				);
			}
			if (v instanceof WAGS_Rendered.SetAnalyserNodeCb) {
				return setAnalyserNodeCb(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetMediaRecorderCb) {
				return setMediaRecorderCb(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetAudioWorkletParameter) {
				return setAudioWorkletParameter(dictAudioInterpret)(v.value0)(v.value1)(
					v.value2
				);
			}
			if (v instanceof WAGS_Rendered.SetBuffer) {
				return setBuffer(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetConvolverBuffer) {
				return setConvolverBuffer(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetPeriodicOsc) {
				if (v.value1 instanceof Data_Either.Left) {
					return setPeriodicOsc(dictAudioInterpret)(v.value0)(v.value1.value0);
				}
				if (v.value1 instanceof Data_Either.Right) {
					return setPeriodicOscV(dictAudioInterpret)(v.value0)(v.value1.value0);
				}
				throw new Error(
					'Failed pattern match at WAGS.Interpret (line 848, column 27 - line 850, column 40): ' +
						[v.value1.constructor.name]
				);
			}
			if (v instanceof WAGS_Rendered.SetOnOff) {
				return setOnOff(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetBufferOffset) {
				return setBufferOffset(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetLoopStart) {
				return setLoopStart(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetLoopEnd) {
				return setLoopEnd(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetRatio) {
				return setRatio(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetOffset) {
				return setOffset(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetAttack) {
				return setAttack(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetGain) {
				return setGain(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetQ) {
				return setQ(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetPan) {
				return setPan(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetThreshold) {
				return setThreshold(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetRelease) {
				return setRelease(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetKnee) {
				return setKnee(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetDelay) {
				return setDelay(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetPlaybackRate) {
				return setPlaybackRate(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetFrequency) {
				return setFrequency(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetWaveShaperCurve) {
				return setWaveShaperCurve(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetInput) {
				return setInput(dictAudioInterpret)(v.value0)(v.value1);
			}
			if (v instanceof WAGS_Rendered.SetSubgraph) {
				return setGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			if (v instanceof WAGS_Rendered.SetTumult) {
				return setGain(dictAudioInterpret)(v.value0)(
					Control_Applicative.pure(
						WAGS_Graph_Parameter.applicativeAudioParameter
					)(1.0)
				);
			}
			throw new Error(
				'Failed pattern match at WAGS.Interpret (line 796, column 24 - line 874, column 46): ' +
					[v.constructor.name]
			);
		};
	};
	var makeInstructionsEffectful = function (a) {
		var wrapFAS = Data_Newtype.wrap();
		return function (v) {
			if (v instanceof Data_Maybe.Nothing) {
				return Data_Functor.map(Data_Functor.functorArray)(
					(function () {
						var $758 = Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(
							wrapFAS
						);
						var $759 = interpretInstruction(effectfulAudioInterpret);
						return function ($760) {
							return $758($759($760));
						};
					})()
				)(Data_Array.fromFoldable(Data_Set.foldableSet)(a));
			}
			if (v instanceof Data_Maybe.Just) {
				return Data_Functor.map(Data_Functor.functorArray)(
					(function () {
						var $761 = Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(
							wrapFAS
						);
						var $762 = interpretInstruction(effectfulAudioInterpret);
						return function ($763) {
							return $761($762($763));
						};
					})()
				)(
					Data_Array.fromFoldable(Data_Set.foldableSet)(
						WAGS_Tumult_Reconciliation.reconcileTumult(a)(v.value0)
					)
				);
			}
			throw new Error(
				'Failed pattern match at WAGS.Interpret (line 877, column 31 - line 879, column 100): ' +
					[v.constructor.name]
			);
		};
	};
	var effectfulAudioInterpret = {
		connectXToY: function (a) {
			return function (v) {
				return function (b) {
					return function (v1) {
						return function (c) {
							return $foreign.connectXToY_(a)(b)(
								safeToFFI(safeToFFI_FFIAudio)(c)
							);
						};
					};
				};
			};
		},
		disconnectXFromY: function (a) {
			return function (v) {
				return function (b) {
					return function (v1) {
						return function (c) {
							return $foreign.disconnectXFromY_(a)(b)(
								safeToFFI(safeToFFI_FFIAudio)(c)
							);
						};
					};
				};
			};
		},
		destroyUnit: function (a) {
			return function (v) {
				return function (b) {
					return $foreign.destroyUnit_(a)(safeToFFI(safeToFFI_FFIAudio)(b));
				};
			};
		},
		makeInput: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeInput_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_String)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeAllpass: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeAllpass_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeAnalyser: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeAnalyser_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AnalyserNodeCb)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeAudioWorkletNode: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeAudioWorkletNode_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioWorkletNodeOptions_)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeBandpass: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeBandpass_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeConstant: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeConstant_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameterString)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeConvolver: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeConvolver_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_BrowserAudioBuffer)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makePassthroughConvolver: function (a) {
			return function (b) {
				return $foreign.makePassthroughConvolver_(
					safeToFFI(safeToFFI_String)(a)
				)(safeToFFI(safeToFFI_FFIAudio)(b));
			};
		},
		makeDelay: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeDelay_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeDynamicsCompressor: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return function (g) {
									return $foreign.makeDynamicsCompressor_(
										safeToFFI(safeToFFI_String)(a)
									)(safeToFFI(safeToFFI_AudioParameter)(b))(
										safeToFFI(safeToFFI_AudioParameter)(c)
									)(safeToFFI(safeToFFI_AudioParameter)(d))(
										safeToFFI(safeToFFI_AudioParameter)(e)
									)(safeToFFI(safeToFFI_AudioParameter)(f))(
										safeToFFI(safeToFFI_FFIAudio)(g)
									);
								};
							};
						};
					};
				};
			};
		},
		makeGain: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeGain_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeHighpass: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeHighpass_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeHighshelf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeHighshelf_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeLoopBufWithDeferredBuffer: function (a) {
			return function (b) {
				return $foreign.makeLoopBufWithDeferredBuffer_(
					safeToFFI(safeToFFI_String)(a)
				)(safeToFFI(safeToFFI_FFIAudio)(b));
			};
		},
		makeLoopBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return function (g) {
									return $foreign.makeLoopBuf_(safeToFFI(safeToFFI_String)(a))(
										safeToFFI(safeToFFI_BrowserAudioBuffer)(b)
									)(safeToFFI(safeToFFI_AudioParameterString)(c))(
										safeToFFI(safeToFFI_AudioParameter)(d)
									)(safeToFFI(safeToFFI_Number)(e))(
										safeToFFI(safeToFFI_Number)(f)
									)(safeToFFI(safeToFFI_FFIAudio)(g));
								};
							};
						};
					};
				};
			};
		},
		makeLowpass: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeLowpass_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeLowshelf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeLowshelf_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeMicrophone: function (a) {
			return function (b) {
				return $foreign.makeMicrophone_(
					safeToFFI(safeToFFI_BrowserMicrophone)(a)
				)(safeToFFI(safeToFFI_FFIAudio)(b));
			};
		},
		makeNotch: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeNotch_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameter)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makePeaking: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return $foreign.makePeaking_(safeToFFI(safeToFFI_String)(a))(
								safeToFFI(safeToFFI_AudioParameter)(b)
							)(safeToFFI(safeToFFI_AudioParameter)(c))(
								safeToFFI(safeToFFI_AudioParameter)(d)
							)(safeToFFI(safeToFFI_FFIAudio)(e));
						};
					};
				};
			};
		},
		makePeriodicOscWithDeferredOsc: function (a) {
			return function (b) {
				return $foreign.makePeriodicOscWithDeferredOsc_(
					safeToFFI(safeToFFI_String)(a)
				)(safeToFFI(safeToFFI_FFIAudio)(b));
			};
		},
		makePeriodicOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return $foreign.makePeriodicOsc_(safeToFFI(safeToFFI_String)(a))(
								safeToFFI(safeToFFI_BrowserPeriodicWave)(b)
							)(safeToFFI(safeToFFI_AudioParameterString)(c))(
								safeToFFI(safeToFFI_AudioParameter)(d)
							)(safeToFFI(safeToFFI_FFIAudio)(e));
						};
					};
				};
			};
		},
		makePeriodicOscV: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return $foreign.makePeriodicOscV_(safeToFFI(safeToFFI_String)(a))(
								safeToFFI(safeToFFI_VecNumber)(b)
							)(safeToFFI(safeToFFI_AudioParameterString)(c))(
								safeToFFI(safeToFFI_AudioParameter)(d)
							)(safeToFFI(safeToFFI_FFIAudio)(e));
						};
					};
				};
			};
		},
		makePlayBufWithDeferredBuffer: function (a) {
			return function (b) {
				return $foreign.makePlayBufWithDeferredBuffer_(
					safeToFFI(safeToFFI_String)(a)
				)(safeToFFI(safeToFFI_FFIAudio)(b));
			};
		},
		makePlayBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return $foreign.makePlayBuf_(safeToFFI(safeToFFI_String)(a))(
									safeToFFI(safeToFFI_BrowserAudioBuffer)(b)
								)(safeToFFI(safeToFFI_Number)(c))(
									safeToFFI(safeToFFI_AudioParameterString)(d)
								)(safeToFFI(safeToFFI_AudioParameter)(e))(
									safeToFFI(safeToFFI_FFIAudio)(f)
								);
							};
						};
					};
				};
			};
		},
		makeRecorder: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeRecorder_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_MediaRecorderCb)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeSawtoothOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeSawtoothOsc_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameterString)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeSinOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeSinOsc_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameterString)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeSpeaker: function (a) {
			return $foreign.makeSpeaker_(safeToFFI(safeToFFI_FFIAudio)(a));
		},
		makeSquareOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeSquareOsc_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameterString)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeStereoPanner: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.makeStereoPanner_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		makeSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (ptr) {
					return function (pxy) {
						return function (vek) {
							return function (envM) {
								return function (sceneM) {
									return function (audio) {
										return $foreign.makeSubgraph_(ptr)(
											Data_Symbol.reflectSymbol(dictIsSymbol)(pxy)
										)(Data_Vec.toArray(vek))(sceneM)(envM)(function (env) {
											return function (scene) {
												var res = WAGS_Control_Types.oneSubFrame(scene)(env);
												return {
													instructions: res.instructions,
													nextScene: res.next,
												};
											};
										})(safeToFFI(safeToFFI_FFIAudio)(audio));
									};
								};
							};
						};
					};
				};
			};
		},
		makeSubgraphWithDeferredScene: function (a) {
			return function (b) {
				return $foreign.makeSubgraphWithDeferredScene_(a)(
					safeToFFI(safeToFFI_FFIAudio)(b)
				);
			};
		},
		makeTumult: function (ptr) {
			return function (terminus) {
				return function (instr) {
					return function (toFFI) {
						return $foreign.makeTumult_(ptr)(terminus)(instr)(
							Data_Maybe.Nothing.value
						)(Data_Maybe.Just.create)(makeInstructionsEffectful)(
							safeToFFI(safeToFFI_FFIAudio)(toFFI)
						);
					};
				};
			};
		},
		makeTumultWithDeferredGraph: function (a) {
			return function (b) {
				return $foreign.makeTumultWithDeferredGraph_(a)(
					safeToFFI(safeToFFI_FFIAudio)(b)
				);
			};
		},
		makeTriangleOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeTriangleOsc_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_AudioParameterString)(b)
						)(safeToFFI(safeToFFI_AudioParameter)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		makeWaveShaper: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.makeWaveShaper_(safeToFFI(safeToFFI_String)(a))(
							safeToFFI(safeToFFI_BrowserFloatArray)(b)
						)(safeToFFI(safeToFFI_Oversample)(c))(
							safeToFFI(safeToFFI_FFIAudio)(d)
						);
					};
				};
			};
		},
		setAudioWorkletParameter: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return $foreign.setAudioWorkletParameter_(
							safeToFFI(safeToFFI_String)(a)
						)(safeToFFI(safeToFFI_String)(b))(
							safeToFFI(safeToFFI_AudioParameter)(c)
						)(safeToFFI(safeToFFI_FFIAudio)(d));
					};
				};
			};
		},
		setAnalyserNodeCb: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setAnalyserNodeCb_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AnalyserNodeCb)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setMediaRecorderCb: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setMediaRecorderCb_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_MediaRecorderCb)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setConvolverBuffer: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setConvolverBuffer_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_BrowserAudioBuffer)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setBuffer: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setBuffer_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_BrowserAudioBuffer)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setPeriodicOsc: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setPeriodicOsc_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_BrowserPeriodicWave)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setPeriodicOscV: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setPeriodicOscV_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_VecNumber)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setOnOff: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setOnOff_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameterString)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setBufferOffset: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setBufferOffset_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_Number)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setLoopStart: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setLoopStart_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_Number)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setLoopEnd: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setLoopEnd_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_Number)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setRatio: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setRatio_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setOffset: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setOffset_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setAttack: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setAttack_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setGain: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setGain_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setQ: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setQ_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setPan: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setPan_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setThreshold: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setThreshold_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setRelease: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setRelease_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setKnee: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setKnee_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setDelay: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setDelay_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setPlaybackRate: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setPlaybackRate_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setFrequency: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setFrequency_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_AudioParameter)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setWaveShaperCurve: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setWaveShaperCurve_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_BrowserFloatArray)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setInput: function (a) {
			return function (b) {
				return function (c) {
					return $foreign.setInput_(safeToFFI(safeToFFI_String)(a))(
						safeToFFI(safeToFFI_String)(b)
					)(safeToFFI(safeToFFI_FFIAudio)(c));
				};
			};
		},
		setSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (ptr) {
					return function (pxy) {
						return function (vek) {
							return function (envM) {
								return function (sceneM) {
									return function (audio) {
										return $foreign.setSubgraph_(ptr)(
											Data_Symbol.reflectSymbol(dictIsSymbol)(pxy)
										)(Data_Vec.toArray(vek))(sceneM)(envM)(function (env) {
											return function (scene) {
												var res = WAGS_Control_Types.oneSubFrame(scene)(env);
												return {
													instructions: res.instructions,
													nextScene: res.next,
												};
											};
										})(safeToFFI(safeToFFI_FFIAudio)(audio));
									};
								};
							};
						};
					};
				};
			};
		},
		setTumult: function (ptr) {
			return function (terminus) {
				return function (instr) {
					return function (toFFI) {
						return $foreign.setTumult_(ptr)(terminus)(instr)(
							Data_Maybe.Nothing.value
						)(Data_Maybe.Just.create)(makeInstructionsEffectful)(
							safeToFFI(safeToFFI_FFIAudio)(toFFI)
						);
					};
				};
			};
		},
	};
	var audioEngine2nd = function (v) {
		return function (env) {
			var eaA = v(env);
			return {
				instructions: Data_Functor.map(Data_Functor.functorArray)(function (f) {
					return function (bSide) {
						return Data_Tuple.snd(
							f(new Data_Tuple.Tuple(Data_Unit.unit, bSide))
						);
					};
				})(eaA.instructions),
				res: eaA.res,
				next: audioEngine2nd(eaA.next),
			};
		};
	};
	var audioEngine1st = function (v) {
		return function (env) {
			var eaA = v(env);
			return {
				instructions: Data_Functor.map(Data_Functor.functorArray)(function (f) {
					return function (aSide) {
						return Data_Tuple.fst(
							f(
								new Data_Tuple.Tuple(
									aSide,
									Data_Typelevel_Undefined['undefined']
								)
							)
						);
					};
				})(eaA.instructions),
				res: eaA.res,
				next: audioEngine1st(eaA.next),
			};
		};
	};
	var mixedAudioInterpret = {
		connectXToY: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (v) {
							return new Data_Tuple.Tuple(
								connectXToY(freeAudioInterpret)(a)(b)(c)(d)(v.value0),
								connectXToY(effectfulAudioInterpret)(a)(b)(c)(d)(v.value1)
							);
						};
					};
				};
			};
		},
		disconnectXFromY: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (v) {
							return new Data_Tuple.Tuple(
								disconnectXFromY(freeAudioInterpret)(a)(b)(c)(d)(v.value0),
								disconnectXFromY(effectfulAudioInterpret)(a)(b)(c)(d)(v.value1)
							);
						};
					};
				};
			};
		},
		destroyUnit: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						destroyUnit(freeAudioInterpret)(a)(b)(v.value0),
						destroyUnit(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (a) {
					return function (b) {
						return function (c) {
							return function (d) {
								return function (e) {
									return function (v) {
										return new Data_Tuple.Tuple(
											makeSubgraph(freeAudioInterpret)(dictIsSymbol)(dictPos)(
												a
											)(b)(c)(d)(
												Data_Functor.map(Data_Functor.functorFn)(
													Data_Functor.map(Data_Functor.functorFn)(
														audioEngine1st
													)
												)(e)
											)(v.value0),
											makeSubgraph(effectfulAudioInterpret)(dictIsSymbol)(
												dictPos
											)(a)(b)(c)(d)(
												Data_Functor.map(Data_Functor.functorFn)(
													Data_Functor.map(Data_Functor.functorFn)(
														audioEngine2nd
													)
												)(e)
											)(v.value1)
										);
									};
								};
							};
						};
					};
				};
			};
		},
		makeSubgraphWithDeferredScene: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makeSubgraphWithDeferredScene(freeAudioInterpret)(a)(v.value0),
					makeSubgraphWithDeferredScene(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makeInput: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeInput(freeAudioInterpret)(a)(b)(v.value0),
						makeInput(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeAllpass: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeAllpass(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeAllpass(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeAnalyser: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeAnalyser(freeAudioInterpret)(a)(b)(v.value0),
						makeAnalyser(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeAudioWorkletNode: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeAudioWorkletNode(freeAudioInterpret)(a)(b)(v.value0),
						makeAudioWorkletNode(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeBandpass: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeBandpass(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeBandpass(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeConstant: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeConstant(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeConstant(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makePassthroughConvolver: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makePassthroughConvolver(freeAudioInterpret)(a)(v.value0),
					makePassthroughConvolver(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makeConvolver: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeConvolver(freeAudioInterpret)(a)(b)(v.value0),
						makeConvolver(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeDelay: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeDelay(freeAudioInterpret)(a)(b)(v.value0),
						makeDelay(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeDynamicsCompressor: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return function (v) {
									return new Data_Tuple.Tuple(
										makeDynamicsCompressor(freeAudioInterpret)(a)(b)(c)(d)(e)(
											f
										)(v.value0),
										makeDynamicsCompressor(effectfulAudioInterpret)(a)(b)(c)(d)(
											e
										)(f)(v.value1)
									);
								};
							};
						};
					};
				};
			};
		},
		makeGain: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeGain(freeAudioInterpret)(a)(b)(v.value0),
						makeGain(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeHighpass: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeHighpass(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeHighpass(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeHighshelf: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeHighshelf(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeHighshelf(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeLoopBufWithDeferredBuffer: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makeLoopBufWithDeferredBuffer(freeAudioInterpret)(a)(v.value0),
					makeLoopBufWithDeferredBuffer(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makeLoopBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (f) {
								return function (v) {
									return new Data_Tuple.Tuple(
										makeLoopBuf(freeAudioInterpret)(a)(b)(c)(d)(e)(f)(v.value0),
										makeLoopBuf(effectfulAudioInterpret)(a)(b)(c)(d)(e)(f)(
											v.value1
										)
									);
								};
							};
						};
					};
				};
			};
		},
		makeLowpass: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeLowpass(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeLowpass(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeLowshelf: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeLowshelf(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeLowshelf(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeMicrophone: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makeMicrophone(freeAudioInterpret)(a)(v.value0),
					makeMicrophone(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makeNotch: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeNotch(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeNotch(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makePeaking: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (v) {
							return new Data_Tuple.Tuple(
								makePeaking(freeAudioInterpret)(a)(b)(c)(d)(v.value0),
								makePeaking(effectfulAudioInterpret)(a)(b)(c)(d)(v.value1)
							);
						};
					};
				};
			};
		},
		makePeriodicOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (v) {
							return new Data_Tuple.Tuple(
								makePeriodicOsc(freeAudioInterpret)(a)(b)(c)(d)(v.value0),
								makePeriodicOsc(effectfulAudioInterpret)(a)(b)(c)(d)(v.value1)
							);
						};
					};
				};
			};
		},
		makePeriodicOscV: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (v) {
							return new Data_Tuple.Tuple(
								makePeriodicOscV(freeAudioInterpret)(a)(b)(c)(d)(v.value0),
								makePeriodicOscV(effectfulAudioInterpret)(a)(b)(c)(d)(v.value1)
							);
						};
					};
				};
			};
		},
		makePeriodicOscWithDeferredOsc: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makePeriodicOscWithDeferredOsc(freeAudioInterpret)(a)(v.value0),
					makePeriodicOscWithDeferredOsc(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makePlayBufWithDeferredBuffer: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makePlayBufWithDeferredBuffer(freeAudioInterpret)(a)(v.value0),
					makePlayBufWithDeferredBuffer(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		makePlayBuf: function (a) {
			return function (b) {
				return function (c) {
					return function (d) {
						return function (e) {
							return function (v) {
								return new Data_Tuple.Tuple(
									makePlayBuf(freeAudioInterpret)(a)(b)(c)(d)(e)(v.value0),
									makePlayBuf(effectfulAudioInterpret)(a)(b)(c)(d)(e)(v.value1)
								);
							};
						};
					};
				};
			};
		},
		makeRecorder: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeRecorder(freeAudioInterpret)(a)(b)(v.value0),
						makeRecorder(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeSawtoothOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeSawtoothOsc(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeSawtoothOsc(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeSinOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeSinOsc(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeSinOsc(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeSpeaker: function (v) {
			return new Data_Tuple.Tuple(
				makeSpeaker(freeAudioInterpret)(v.value0),
				makeSpeaker(effectfulAudioInterpret)(v.value1)
			);
		},
		makeSquareOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeSquareOsc(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeSquareOsc(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeStereoPanner: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						makeStereoPanner(freeAudioInterpret)(a)(b)(v.value0),
						makeStereoPanner(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		makeTriangleOsc: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeTriangleOsc(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeTriangleOsc(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeWaveShaper: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeWaveShaper(freeAudioInterpret)(a)(b)(c)(v.value0),
							makeWaveShaper(effectfulAudioInterpret)(a)(b)(c)(v.value1)
						);
					};
				};
			};
		},
		makeTumult: function (aaa) {
			return function (bbb) {
				return function (ccc) {
					return function (v) {
						return new Data_Tuple.Tuple(
							makeTumult(freeAudioInterpret)(aaa)(bbb)(ccc)(v.value0),
							makeTumult(effectfulAudioInterpret)(aaa)(bbb)(ccc)(v.value1)
						);
					};
				};
			};
		},
		makeTumultWithDeferredGraph: function (a) {
			return function (v) {
				return new Data_Tuple.Tuple(
					makeTumultWithDeferredGraph(freeAudioInterpret)(a)(v.value0),
					makeTumultWithDeferredGraph(effectfulAudioInterpret)(a)(v.value1)
				);
			};
		},
		setAudioWorkletParameter: function (a) {
			return function (b) {
				return function (c) {
					return function (v) {
						return new Data_Tuple.Tuple(
							setAudioWorkletParameter(freeAudioInterpret)(a)(b)(c)(v.value0),
							setAudioWorkletParameter(effectfulAudioInterpret)(a)(b)(c)(
								v.value1
							)
						);
					};
				};
			};
		},
		setAnalyserNodeCb: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setAnalyserNodeCb(freeAudioInterpret)(a)(b)(v.value0),
						setAnalyserNodeCb(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setMediaRecorderCb: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setMediaRecorderCb(freeAudioInterpret)(a)(b)(v.value0),
						setMediaRecorderCb(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setBuffer: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setBuffer(freeAudioInterpret)(a)(b)(v.value0),
						setBuffer(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setConvolverBuffer: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setConvolverBuffer(freeAudioInterpret)(a)(b)(v.value0),
						setConvolverBuffer(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setPeriodicOsc: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setPeriodicOsc(freeAudioInterpret)(a)(b)(v.value0),
						setPeriodicOsc(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setPeriodicOscV: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setPeriodicOscV(freeAudioInterpret)(a)(b)(v.value0),
						setPeriodicOscV(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setOnOff: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setOnOff(freeAudioInterpret)(a)(b)(v.value0),
						setOnOff(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setBufferOffset: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setBufferOffset(freeAudioInterpret)(a)(b)(v.value0),
						setBufferOffset(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setLoopStart: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setLoopStart(freeAudioInterpret)(a)(b)(v.value0),
						setLoopStart(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setLoopEnd: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setLoopEnd(freeAudioInterpret)(a)(b)(v.value0),
						setLoopEnd(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setRatio: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setRatio(freeAudioInterpret)(a)(b)(v.value0),
						setRatio(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setOffset: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setOffset(freeAudioInterpret)(a)(b)(v.value0),
						setOffset(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setAttack: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setAttack(freeAudioInterpret)(a)(b)(v.value0),
						setAttack(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setGain: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setGain(freeAudioInterpret)(a)(b)(v.value0),
						setGain(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setQ: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setQ(freeAudioInterpret)(a)(b)(v.value0),
						setQ(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setPan: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setPan(freeAudioInterpret)(a)(b)(v.value0),
						setPan(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setThreshold: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setThreshold(freeAudioInterpret)(a)(b)(v.value0),
						setThreshold(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setRelease: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setRelease(freeAudioInterpret)(a)(b)(v.value0),
						setRelease(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setKnee: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setKnee(freeAudioInterpret)(a)(b)(v.value0),
						setKnee(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setDelay: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setDelay(freeAudioInterpret)(a)(b)(v.value0),
						setDelay(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setPlaybackRate: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setPlaybackRate(freeAudioInterpret)(a)(b)(v.value0),
						setPlaybackRate(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setFrequency: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setFrequency(freeAudioInterpret)(a)(b)(v.value0),
						setFrequency(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setWaveShaperCurve: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setWaveShaperCurve(freeAudioInterpret)(a)(b)(v.value0),
						setWaveShaperCurve(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setInput: function (a) {
			return function (b) {
				return function (v) {
					return new Data_Tuple.Tuple(
						setInput(freeAudioInterpret)(a)(b)(v.value0),
						setInput(effectfulAudioInterpret)(a)(b)(v.value1)
					);
				};
			};
		},
		setSubgraph: function (dictIsSymbol) {
			return function (dictPos) {
				return function (a) {
					return function (b) {
						return function (c) {
							return function (d) {
								return function (e) {
									return function (v) {
										return new Data_Tuple.Tuple(
											setSubgraph(freeAudioInterpret)(dictIsSymbol)(dictPos)(a)(
												b
											)(c)(d)(
												Data_Functor.map(Data_Functor.functorFn)(
													Data_Functor.map(Data_Functor.functorFn)(
														audioEngine1st
													)
												)(e)
											)(v.value0),
											setSubgraph(effectfulAudioInterpret)(dictIsSymbol)(
												dictPos
											)(a)(b)(c)(d)(
												Data_Functor.map(Data_Functor.functorFn)(
													Data_Functor.map(Data_Functor.functorFn)(
														audioEngine2nd
													)
												)(e)
											)(v.value1)
										);
									};
								};
							};
						};
					};
				};
			};
		},
		setTumult: function (aaa) {
			return function (bbb) {
				return function (ccc) {
					return function (v) {
						return new Data_Tuple.Tuple(
							setTumult(freeAudioInterpret)(aaa)(bbb)(ccc)(v.value0),
							setTumult(effectfulAudioInterpret)(aaa)(bbb)(ccc)(v.value1)
						);
					};
				};
			};
		},
	};
	exports['unAsSubGraph'] = unAsSubGraph;
	exports['connectXToY'] = connectXToY;
	exports['defaultFFIAudio'] = defaultFFIAudio;
	exports['makeGain'] = makeGain;
	exports['makeLoopBuf'] = makeLoopBuf;
	exports['makePlayBuf'] = makePlayBuf;
	exports['makeSpeaker'] = makeSpeaker;
	exports['makeInput'] = makeInput;
	exports['makeTumult'] = makeTumult;
	exports['setBuffer'] = setBuffer;
	exports['setGain'] = setGain;
	exports['setBufferOffset'] = setBufferOffset;
	exports['setLoopEnd'] = setLoopEnd;
	exports['setLoopStart'] = setLoopStart;
	exports['setOnOff'] = setOnOff;
	exports['setPlaybackRate'] = setPlaybackRate;
	exports['makeSubgraph'] = makeSubgraph;
	exports['setSubgraph'] = setSubgraph;
	exports['setTumult'] = setTumult;
	exports['freeAudioInterpret'] = freeAudioInterpret;
	exports['mixedAudioInterpret'] = mixedAudioInterpret;
	exports['close'] = $foreign.close;
	exports['context'] = $foreign.context;
	exports['decodeAudioDataFromUri'] = $foreign.decodeAudioDataFromUri;
	exports['getAudioClockTime'] = $foreign.getAudioClockTime;
	exports['makeUnitCache'] = $foreign.makeUnitCache;
	exports['renderAudio'] = $foreign.renderAudio;
	exports['bufferDuration'] = $foreign.bufferDuration;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Tumult'] = $PS['WAGS.Tumult'] || {};
	var exports = $PS['WAGS.Tumult'];
	var Tumultuous = function (x) {
		return x;
	};
	var unsafeTumult = Tumultuous;
	var safeUntumult = function (v) {
		return v;
	};
	exports['unsafeTumult'] = unsafeTumult;
	exports['safeUntumult'] = safeUntumult;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Change'] = $PS['WAGS.Change'] || {};
	var exports = $PS['WAGS.Change'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Unit = $PS['Data.Unit'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_ConstructEdges = $PS['WAGS.ConstructEdges'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Graph_Paramable = $PS['WAGS.Graph.Paramable'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGS_Tumult = $PS['WAGS.Tumult'];
	var changeTumult = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictPos) {
				return function (dictCons) {
					return {
						"change'": function (dictAudioInterpret) {
							return function (ptr) {
								return function (w) {
									var v = WAGS_Control_Types.unsafeUnWAG(w);
									var tms = Data_Symbol.reflectSymbol(dictIsSymbol1)(
										Type_Proxy['Proxy'].value
									);
									var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
									var o = WAGS_Control_Types.unsafeWAG({
										context: {
											res: v.context.res,
											instructions: Data_Semigroup.append(
												Data_Semigroup.semigroupArray
											)(v.context.instructions)([
												WAGS_Interpret.setTumult(dictAudioInterpret)(nn)(tms)(
													WAGS_Tumult.safeUntumult(v.value.value0)
												),
											]),
										},
										value: Data_Unit.unit,
									});
									return o;
								};
							};
						},
					};
				};
			};
		};
	};
	var changeSubgraph = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictPos) {
				return function (dictCons) {
					return {
						"change'": function (dictAudioInterpret) {
							return function (ptr) {
								return function (w) {
									var v = WAGS_Control_Types.unsafeUnWAG(w);
									var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
									var o = WAGS_Control_Types.unsafeWAG({
										context: {
											res: v.context.res,
											instructions: Data_Semigroup.append(
												Data_Semigroup.semigroupArray
											)(v.context.instructions)([
												WAGS_Interpret.setSubgraph(dictAudioInterpret)(
													dictIsSymbol1
												)(dictPos)(nn)(Type_Proxy['Proxy'].value)(
													v.value.value0
												)(v.value.value2)(
													WAGS_Interpret.unAsSubGraph(v.value.value1)(
														dictAudioInterpret
													)
												),
											]),
										},
										value: Data_Unit.unit,
									});
									return o;
								};
							};
						},
					};
				};
			};
		};
	};
	var changeSpeaker = function (dictCons) {
		return {
			"change'": function (dictAudioInterpret) {
				return function (v) {
					return function (w) {
						return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(
							Data_Unit.unit
						);
					};
				};
			},
		};
	};
	var changeRLNil = {
		changeRL: function (dictAudioInterpret) {
			return function (v) {
				return function (v1) {
					return function (v2) {
						return function (r) {
							return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(
								Data_Unit.unit
							);
						};
					};
				};
			};
		},
	};
	var changeRL = function (dict) {
		return dict.changeRL;
	};
	var changePlayBuf = function (dictIsSymbol) {
		return function (dictMM) {
			return function (dictMM1) {
				return function (dictMM2) {
					return function (dictOnOffable) {
						return function (dictMM3) {
							return function (dictParamable) {
								return function (dictCons) {
									return {
										"change'": function (dictAudioInterpret) {
											return function (ptr) {
												return function (w) {
													var v = WAGS_Control_Types.unsafeUnWAG(w);
													var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
													var offset_Changes = Data_Maybe.maybe([])(function (
														offset$prime
													) {
														return [
															WAGS_Interpret.setBufferOffset(
																dictAudioInterpret
															)(nn)(offset$prime),
														];
													})(WAGS_Graph_Parameter.mm(dictMM1)(v.value.value1));
													var oo_Changes = Data_Maybe.maybe([])(function (
														onOff$prime
													) {
														return [
															WAGS_Interpret.setOnOff(dictAudioInterpret)(nn)(
																WAGS_Graph_Paramable.onOffIze(dictOnOffable)(
																	onOff$prime
																)
															),
														];
													})(WAGS_Graph_Parameter.mm(dictMM2)(v.value.value2));
													var buffer_Changes = Data_Maybe.maybe([])(function (
														buffer$prime
													) {
														return [
															WAGS_Interpret.setBuffer(dictAudioInterpret)(nn)(
																buffer$prime
															),
														];
													})(WAGS_Graph_Parameter.mm(dictMM)(v.value.value0));
													var argA_iv$prime = Data_Functor.map(
														Data_Maybe.functorMaybe
													)(WAGS_Graph_Paramable.paramize(dictParamable))(
														WAGS_Graph_Parameter.mm(dictMM3)(v.value.value3)
													);
													var argA_Changes = Data_Maybe.maybe([])(function (
														argA_iv$prime$prime
													) {
														return [
															WAGS_Interpret.setPlaybackRate(
																dictAudioInterpret
															)(nn)(argA_iv$prime$prime),
														];
													})(argA_iv$prime);
													var o = WAGS_Control_Types.unsafeWAG({
														context: {
															res: v.context.res,
															instructions: Data_Semigroup.append(
																Data_Semigroup.semigroupArray
															)(v.context.instructions)(
																Data_Semigroup.append(
																	Data_Semigroup.semigroupArray
																)(buffer_Changes)(
																	Data_Semigroup.append(
																		Data_Semigroup.semigroupArray
																	)(offset_Changes)(
																		Data_Semigroup.append(
																			Data_Semigroup.semigroupArray
																		)(oo_Changes)(argA_Changes)
																	)
																)
															),
														},
														value: Data_Unit.unit,
													});
													return o;
												};
											};
										},
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var changeLoopBuf = function (dictIsSymbol) {
		return function (dictMM) {
			return function (dictMM1) {
				return function (dictOnOffable) {
					return function (dictMM2) {
						return function (dictMM3) {
							return function (dictMM4) {
								return function (dictParamable) {
									return function (dictCons) {
										return {
											"change'": function (dictAudioInterpret) {
												return function (ptr) {
													return function (w) {
														var v = WAGS_Control_Types.unsafeUnWAG(w);
														var nn =
															Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
														var oo_Changes = Data_Maybe.maybe([])(function (
															onOff$prime
														) {
															return [
																WAGS_Interpret.setOnOff(dictAudioInterpret)(nn)(
																	WAGS_Graph_Paramable.onOffIze(dictOnOffable)(
																		onOff$prime
																	)
																),
															];
														})(
															WAGS_Graph_Parameter.mm(dictMM1)(v.value.value1)
														);
														var loopStart_Changes = Data_Maybe.maybe([])(
															function (loopStart$prime) {
																return [
																	WAGS_Interpret.setLoopStart(
																		dictAudioInterpret
																	)(nn)(loopStart$prime),
																];
															}
														)(WAGS_Graph_Parameter.mm(dictMM3)(v.value.value3));
														var loopEnd_Changes = Data_Maybe.maybe([])(
															function (loopEnd$prime) {
																return [
																	WAGS_Interpret.setLoopEnd(dictAudioInterpret)(
																		nn
																	)(loopEnd$prime),
																];
															}
														)(WAGS_Graph_Parameter.mm(dictMM4)(v.value.value4));
														var buffer_Changes = Data_Maybe.maybe([])(function (
															buffer$prime
														) {
															return [
																WAGS_Interpret.setBuffer(dictAudioInterpret)(
																	nn
																)(buffer$prime),
															];
														})(WAGS_Graph_Parameter.mm(dictMM)(v.value.value0));
														var argA_iv$prime = Data_Functor.map(
															Data_Maybe.functorMaybe
														)(WAGS_Graph_Paramable.paramize(dictParamable))(
															WAGS_Graph_Parameter.mm(dictMM2)(v.value.value2)
														);
														var argA_Changes = Data_Maybe.maybe([])(function (
															argA_iv$prime$prime
														) {
															return [
																WAGS_Interpret.setPlaybackRate(
																	dictAudioInterpret
																)(nn)(argA_iv$prime$prime),
															];
														})(argA_iv$prime);
														var o = WAGS_Control_Types.unsafeWAG({
															context: {
																res: v.context.res,
																instructions: Data_Semigroup.append(
																	Data_Semigroup.semigroupArray
																)(v.context.instructions)(
																	Data_Semigroup.append(
																		Data_Semigroup.semigroupArray
																	)(buffer_Changes)(
																		Data_Semigroup.append(
																			Data_Semigroup.semigroupArray
																		)(oo_Changes)(
																			Data_Semigroup.append(
																				Data_Semigroup.semigroupArray
																			)(argA_Changes)(
																				Data_Semigroup.append(
																					Data_Semigroup.semigroupArray
																				)(loopStart_Changes)(loopEnd_Changes)
																			)
																		)
																	)
																),
															},
															value: Data_Unit.unit,
														});
														return o;
													};
												};
											},
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var changeInternalAll = function (dictRowToList) {
		return function (dictChangeRL) {
			return {
				changeInternal: function (dictAudioInterpret) {
					return changeRL(dictChangeRL)(dictAudioInterpret)(
						Type_Proxy['Proxy'].value
					);
				},
			};
		};
	};
	var changeInternal = function (dict) {
		return dict.changeInternal;
	};
	var changeGain = function (dictIsSymbol) {
		return function (dictMM) {
			return function (dictParamable) {
				return function (dictCons) {
					return {
						"change'": function (dictAudioInterpret) {
							return function (ptr) {
								return function (w) {
									var v = WAGS_Control_Types.unsafeUnWAG(w);
									var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
									var argA_iv$prime = Data_Functor.map(Data_Maybe.functorMaybe)(
										WAGS_Graph_Paramable.paramize(dictParamable)
									)(WAGS_Graph_Parameter.mm(dictMM)(v.value.value0));
									var argA_Changes = Data_Maybe.maybe([])(function (
										argA_iv$prime$prime
									) {
										return [
											WAGS_Interpret.setGain(dictAudioInterpret)(nn)(
												argA_iv$prime$prime
											),
										];
									})(argA_iv$prime);
									var o = WAGS_Control_Types.unsafeWAG({
										context: {
											res: v.context.res,
											instructions: Data_Semigroup.append(
												Data_Semigroup.semigroupArray
											)(v.context.instructions)(argA_Changes),
										},
										value: Data_Unit.unit,
									});
									return o;
								};
							};
						},
					};
				};
			};
		};
	};
	var changeAll = function (dictChangeInternal) {
		return {
			change: function (dictAudioInterpret) {
				return changeInternal(dictChangeInternal)(dictAudioInterpret)(
					Type_Proxy['Proxy'].value
				)(Type_Proxy['Proxy'].value);
			},
		};
	};
	var change$prime = function (dict) {
		return dict["change'"];
	};
	var changeRLCons = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictMakePrefixIfNeeded) {
				return function (dictConstructEdges) {
					return function (dictCoercePrefixToString) {
						return function (dictAppend) {
							return function (dictChange$prime) {
								return function (dictChangeInternal) {
									return function (dictChangeRL) {
										return {
											changeRL: function (dictAudioInterpret) {
												return function (v) {
													return function (v1) {
														return function (v2) {
															return function (r) {
																var rx = Control_Comonad.extract(
																	WAGS_Control_Types.comonadWAG
																)(r);
																var v3 = WAGS_ConstructEdges.constructEdges(
																	dictConstructEdges
																)(Type_Proxy['Proxy'].value)(
																	Type_Proxy['Proxy'].value
																)(
																	Record.get(dictIsSymbol)()(
																		Type_Proxy['Proxy'].value
																	)(rx)
																);
																var step1 = change$prime(dictChange$prime)(
																	dictAudioInterpret
																)(Type_Proxy['Proxy'].value)(
																	Data_Functor.voidLeft(
																		WAGS_Control_Types.functorWAG
																	)(r)(v3.value1.value1.value0)
																);
																var step2 = (function (dictAudioInterpret1) {
																	return changeInternal(dictChangeInternal)(
																		dictAudioInterpret1
																	);
																})(dictAudioInterpret)(
																	Type_Proxy['Proxy'].value
																)(Type_Proxy['Proxy'].value)(
																	Data_Functor.voidLeft(
																		WAGS_Control_Types.functorWAG
																	)(step1)(v3.value1.value1.value1)
																);
																var step3 = changeRL(dictChangeRL)(
																	dictAudioInterpret
																)(Type_Proxy['Proxy'].value)(
																	Type_Proxy['Proxy'].value
																)(Type_Proxy['Proxy'].value)(
																	Data_Functor.voidLeft(
																		WAGS_Control_Types.functorWAG
																	)(step2)(rx)
																);
																return step3;
															};
														};
													};
												};
											},
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var change = function (dict) {
		return dict.change;
	};
	var ichange = function (dictAudioInterpret) {
		return function (dictChange) {
			return function (r) {
				var $798 = change(dictChange)(dictAudioInterpret);
				var $799 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(r);
				return function ($800) {
					return $798($799($800));
				};
			};
		};
	};
	exports['ichange'] = ichange;
	exports['changeInternalAll'] = changeInternalAll;
	exports['changeAll'] = changeAll;
	exports['changeRLNil'] = changeRLNil;
	exports['changeRLCons'] = changeRLCons;
	exports['changeGain'] = changeGain;
	exports['changeLoopBuf'] = changeLoopBuf;
	exports['changePlayBuf'] = changePlayBuf;
	exports['changeSpeaker'] = changeSpeaker;
	exports['changeSubgraph'] = changeSubgraph;
	exports['changeTumult'] = changeTumult;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Connect'] = $PS['WAGS.Connect'] || {};
	var exports = $PS['WAGS.Connect'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Unit = $PS['Data.Unit'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var connectInstance = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictTypeToSym) {
				return function (dictTypeToSym1) {
					return function (dictIsSymbol2) {
						return function (dictIsSymbol3) {
							return function (dictCons) {
								return function (dictCons1) {
									return function (dictLacks) {
										return function (dictCons2) {
											return function (dictCons3) {
												return {
													connect: function (dictAudioInterpret) {
														return function (w) {
															var v = WAGS_Control_Types.unsafeUnWAG(w);
															var toI = Data_Symbol.reflectSymbol(
																dictIsSymbol1
															)(v.value.dest);
															var fromI = Data_Symbol.reflectSymbol(
																dictIsSymbol
															)(v.value.source);
															return WAGS_Control_Types.unsafeWAG({
																context: {
																	res: v.context.res,
																	instructions: Data_Semigroup.append(
																		Data_Semigroup.semigroupArray
																	)(v.context.instructions)([
																		WAGS_Interpret.connectXToY(
																			dictAudioInterpret
																		)(fromI)(
																			Data_Symbol.reflectSymbol(dictIsSymbol2)(
																				Type_Proxy['Proxy'].value
																			)
																		)(toI)(
																			Data_Symbol.reflectSymbol(dictIsSymbol3)(
																				Type_Proxy['Proxy'].value
																			)
																		),
																	]),
																},
																value: Data_Unit.unit,
															});
														};
													},
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var connect = function (dict) {
		return dict.connect;
	};
	exports['connect'] = connect;
	exports['connectInstance'] = connectInstance;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Control.Indexed'] = $PS['WAGS.Control.Indexed'] || {};
	var exports = $PS['WAGS.Control.Indexed'];
	var Data_Functor = $PS['Data.Functor'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var functorIxWAG = {
		map: function (f) {
			return function (v) {
				return Data_Functor.map(Data_Functor.functorFn)(
					Data_Functor.map(WAGS_Control_Types.functorWAG)(f)
				)(v);
			};
		},
	};
	exports['functorIxWAG'] = functorIxWAG;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Create'] = $PS['WAGS.Create'] || {};
	var exports = $PS['WAGS.Create'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Symbol = $PS['Data.Symbol'];
	var Data_Unit = $PS['Data.Unit'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Connect = $PS['WAGS.Connect'];
	var WAGS_ConstructEdges = $PS['WAGS.ConstructEdges'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Graph_Paramable = $PS['WAGS.Graph.Paramable'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGS_Tumult = $PS['WAGS.Tumult'];
	var createTumult = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictPos) {
				return function (dictLacks) {
					return function (dictCons) {
						return {
							"create'": function (dictAudioInterpret) {
								return function (ptr) {
									return function (w) {
										var v = WAGS_Control_Types.unsafeUnWAG(w);
										var pt = Data_Symbol.reflectSymbol(dictIsSymbol1)(
											Type_Proxy['Proxy'].value
										);
										var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
										var o = WAGS_Control_Types.unsafeWAG({
											context: {
												res: v.context.res,
												instructions: Data_Semigroup.append(
													Data_Semigroup.semigroupArray
												)(v.context.instructions)([
													WAGS_Interpret.makeTumult(dictAudioInterpret)(nn)(pt)(
														WAGS_Tumult.safeUntumult(v.value.value0)
													),
												]),
											},
											value: Data_Unit.unit,
										});
										return o;
									};
								};
							},
						};
					};
				};
			};
		};
	};
	var createSubgraph = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictPos) {
				return function (dictLacks) {
					return function (dictCons) {
						return {
							"create'": function (dictAudioInterpret) {
								return function (ptr) {
									return function (w) {
										var v = WAGS_Control_Types.unsafeUnWAG(w);
										var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
										var o = WAGS_Control_Types.unsafeWAG({
											context: {
												res: v.context.res,
												instructions: Data_Semigroup.append(
													Data_Semigroup.semigroupArray
												)(v.context.instructions)([
													WAGS_Interpret.makeSubgraph(dictAudioInterpret)(
														dictIsSymbol1
													)(dictPos)(nn)(Type_Proxy['Proxy'].value)(
														v.value.value0
													)(v.value.value2)(
														WAGS_Interpret.unAsSubGraph(v.value.value1)(
															dictAudioInterpret
														)
													),
												]),
											},
											value: Data_Unit.unit,
										});
										return o;
									};
								};
							},
						};
					};
				};
			};
		};
	};
	var createStepRLNil = {
		createStepRL: function (dictAudioInterpret) {
			return function (v) {
				return function (v1) {
					return function (v2) {
						return function (r) {
							return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(r)(
								Data_Unit.unit
							);
						};
					};
				};
			};
		},
	};
	var createStepRL = function (dict) {
		return dict.createStepRL;
	};
	var createSpeaker = function (dictLacks) {
		return function (dictCons) {
			return {
				"create'": function (dictAudioInterpret) {
					return function (v) {
						return function (w) {
							var v1 = WAGS_Control_Types.unsafeUnWAG(w);
							var o = WAGS_Control_Types.unsafeWAG({
								context: {
									res: v1.context.res,
									instructions: Data_Semigroup.append(
										Data_Semigroup.semigroupArray
									)(v1.context.instructions)([
										WAGS_Interpret.makeSpeaker(dictAudioInterpret),
									]),
								},
								value: Data_Unit.unit,
							});
							return o;
						};
					};
				},
			};
		};
	};
	var createPlayBuf = function (dictIsSymbol) {
		return function (dictParamable) {
			return function (dictOnOffable) {
				return function (dictLacks) {
					return function (dictCons) {
						return {
							"create'": function (dictAudioInterpret) {
								return function (ptr) {
									return function (w) {
										var v = WAGS_Control_Types.unsafeUnWAG(w);
										var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
										var argA_iv$prime = WAGS_Graph_Paramable.paramize(
											dictParamable
										)(v.value.value3);
										var o = WAGS_Control_Types.unsafeWAG({
											context: {
												res: v.context.res,
												instructions: Data_Semigroup.append(
													Data_Semigroup.semigroupArray
												)(v.context.instructions)([
													WAGS_Interpret.makePlayBuf(dictAudioInterpret)(nn)(
														v.value.value0
													)(v.value.value1)(
														WAGS_Graph_Paramable.onOffIze(dictOnOffable)(
															v.value.value2
														)
													)(argA_iv$prime),
												]),
											},
											value: Data_Unit.unit,
										});
										return o;
									};
								};
							},
						};
					};
				};
			};
		};
	};
	var createLoopBuf = function (dictIsSymbol) {
		return function (dictParamable) {
			return function (dictLacks) {
				return function (dictOnOffable) {
					return function (dictCons) {
						return {
							"create'": function (dictAudioInterpret) {
								return function (ptr) {
									return function (w) {
										var v = WAGS_Control_Types.unsafeUnWAG(w);
										var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
										var argA_iv$prime = WAGS_Graph_Paramable.paramize(
											dictParamable
										)(v.value.value2);
										var o = WAGS_Control_Types.unsafeWAG({
											context: {
												res: v.context.res,
												instructions: Data_Semigroup.append(
													Data_Semigroup.semigroupArray
												)(v.context.instructions)([
													WAGS_Interpret.makeLoopBuf(dictAudioInterpret)(nn)(
														v.value.value0
													)(
														WAGS_Graph_Paramable.onOffIze(dictOnOffable)(
															v.value.value1
														)
													)(argA_iv$prime)(v.value.value3)(v.value.value4),
												]),
											},
											value: Data_Unit.unit,
										});
										return o;
									};
								};
							},
						};
					};
				};
			};
		};
	};
	var createInternal = function (dict) {
		return dict.createInternal;
	};
	var createInput = function (dictIsSymbol) {
		return function (dictIsSymbol1) {
			return function (dictLacks) {
				return function (dictCons) {
					return {
						"create'": function (dictAudioInterpret) {
							return function (ptr) {
								return function (w) {
									var v = WAGS_Control_Types.unsafeUnWAG(w);
									var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
									var o = WAGS_Control_Types.unsafeWAG({
										context: {
											res: v.context.res,
											instructions: Data_Semigroup.append(
												Data_Semigroup.semigroupArray
											)(v.context.instructions)([
												WAGS_Interpret.makeInput(dictAudioInterpret)(nn)(
													Data_Symbol.reflectSymbol(dictIsSymbol1)(
														Type_Proxy['Proxy'].value
													)
												),
											]),
										},
										value: Data_Unit.unit,
									});
									return o;
								};
							};
						},
					};
				};
			};
		};
	};
	var createGain = function (dictIsSymbol) {
		return function (dictParamable) {
			return function (dictLacks) {
				return function (dictCons) {
					return {
						"create'": function (dictAudioInterpret) {
							return function (ptr) {
								return function (w) {
									var v = WAGS_Control_Types.unsafeUnWAG(w);
									var nn = Data_Symbol.reflectSymbol(dictIsSymbol)(ptr);
									var argA_iv$prime = WAGS_Graph_Paramable.paramize(
										dictParamable
									)(v.value.value0);
									var o = WAGS_Control_Types.unsafeWAG({
										context: {
											res: v.context.res,
											instructions: Data_Semigroup.append(
												Data_Semigroup.semigroupArray
											)(v.context.instructions)([
												WAGS_Interpret.makeGain(dictAudioInterpret)(nn)(
													argA_iv$prime
												),
											]),
										},
										value: Data_Unit.unit,
									});
									return o;
								};
							};
						},
					};
				};
			};
		};
	};
	var createAll = function (dictCreateInternal) {
		return {
			create: function (dictAudioInterpret) {
				return (function (dictAudioInterpret1) {
					return createInternal(dictCreateInternal)(dictAudioInterpret1);
				})(dictAudioInterpret)(Type_Proxy['Proxy'].value)(
					Type_Proxy['Proxy'].value
				);
			},
		};
	};
	var create$prime = function (dict) {
		return dict["create'"];
	};
	var createStepRLCons = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictMakePrefixIfNeeded) {
				return function (dictConstructEdges) {
					return function (dictCoercePrefixToString) {
						return function (dictAppend) {
							return function (dictCreate$prime) {
								return function (dictRowToList) {
									return function (dictCreateStepRL) {
										return function (dictCreateStepRL1) {
											return {
												createStepRL: function (dictAudioInterpret) {
													return function (v) {
														return function (v1) {
															return function (v2) {
																return function (r) {
																	var rx = Control_Comonad.extract(
																		WAGS_Control_Types.comonadWAG
																	)(r);
																	var v3 = WAGS_ConstructEdges.constructEdges(
																		dictConstructEdges
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Record.get(dictIsSymbol)()(
																			Type_Proxy['Proxy'].value
																		)(rx)
																	);
																	var step1 = create$prime(dictCreate$prime)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(r)(v3.value1.value1.value0)
																	);
																	var step2 = (function (dictAudioInterpret1) {
																		return createStepRL(dictCreateStepRL)(
																			dictAudioInterpret1
																		);
																	})(dictAudioInterpret)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step1)(v3.value1.value1.value1)
																	);
																	var step3 = createStepRL(dictCreateStepRL1)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step2)(rx)
																	);
																	return step3;
																};
															};
														};
													};
												},
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var createStepRLConsB = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictMakePrefixIfNeeded) {
				return function (dictConstructEdges) {
					return function (dictCoercePrefixToString) {
						return function (dictAppend) {
							return function (dictRowToList) {
								return function (dictCreateStepRL) {
									return function (dictCreateStepRL1) {
										return function (dictCreate$prime) {
											return {
												createStepRL: function (dictAudioInterpret) {
													return function (v) {
														return function (v1) {
															return function (v2) {
																return function (r) {
																	var rx = Control_Comonad.extract(
																		WAGS_Control_Types.comonadWAG
																	)(r);
																	var v3 = WAGS_ConstructEdges.constructEdges(
																		dictConstructEdges
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Record.get(dictIsSymbol)()(
																			Type_Proxy['Proxy'].value
																		)(rx)
																	);
																	var step1 = (function (dictAudioInterpret1) {
																		return createStepRL(dictCreateStepRL)(
																			dictAudioInterpret1
																		);
																	})(dictAudioInterpret)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(r)(v3.value1.value1.value1)
																	);
																	var step2 = createStepRL(dictCreateStepRL1)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step1)(rx)
																	);
																	var step3 = create$prime(dictCreate$prime)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step2)(v3.value1.value1.value0)
																	);
																	return step3;
																};
															};
														};
													};
												},
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var createStepRLConsC = function (dictIsSymbol) {
		return function (dictCons) {
			return function (dictMakePrefixIfNeeded) {
				return function (dictConstructEdges) {
					return function (dictCoercePrefixToString) {
						return function (dictAppend) {
							return function (dictRowToList) {
								return function (dictCreateStepRL) {
									return function (dictCreateStepRL1) {
										return function (dictCreate$prime) {
											return {
												createStepRL: function (dictAudioInterpret) {
													return function (v) {
														return function (v1) {
															return function (v2) {
																return function (r) {
																	var rx = Control_Comonad.extract(
																		WAGS_Control_Types.comonadWAG
																	)(r);
																	var v3 = WAGS_ConstructEdges.constructEdges(
																		dictConstructEdges
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Record.get(dictIsSymbol)()(
																			Type_Proxy['Proxy'].value
																		)(rx)
																	);
																	var step1 = (function (dictAudioInterpret1) {
																		return createStepRL(dictCreateStepRL)(
																			dictAudioInterpret1
																		);
																	})(dictAudioInterpret)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(r)(v3.value1.value1.value1)
																	);
																	var step2 = createStepRL(dictCreateStepRL1)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Type_Proxy['Proxy'].value
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step1)(rx)
																	);
																	var step3 = create$prime(dictCreate$prime)(
																		dictAudioInterpret
																	)(Type_Proxy['Proxy'].value)(
																		Data_Functor.voidLeft(
																			WAGS_Control_Types.functorWAG
																		)(step2)(v3.value1.value1.value0)
																	);
																	return step3;
																};
															};
														};
													};
												},
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var create = function (dict) {
		return dict.create;
	};
	var icreate = function (dictAudioInterpret) {
		return function (dictCreate) {
			return function (r) {
				var $559 = create(dictCreate)(dictAudioInterpret);
				var $560 = Data_Functor.voidRight(WAGS_Control_Types.functorWAG)(r);
				return function ($561) {
					return $559($560($561));
				};
			};
		};
	};
	var connectEdgesToNodeNil = {
		connectEdgesToNode: function (dictAudioInterpret) {
			return function (v) {
				return function (w) {
					return w;
				};
			};
		},
	};
	var connectEdgesToNode = function (dict) {
		return dict.connectEdgesToNode;
	};
	var connectEdgesToNodeCons = function (dictConnect) {
		return function (dictConnectEdgesToNode) {
			return {
				connectEdgesToNode: function (dictAudioInterpret) {
					return function (v) {
						return function (w) {
							var step1 = WAGS_Connect.connect(dictConnect)(dictAudioInterpret)(
								Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)({
									source: Type_Proxy['Proxy'].value,
									dest: Type_Proxy['Proxy'].value,
								})
							);
							var step2 = connectEdgesToNode(dictConnectEdgesToNode)(
								dictAudioInterpret
							)(Type_Proxy['Proxy'].value)(
								Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step1)(
									Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(w)
								)
							);
							return step2;
						};
					};
				},
			};
		};
	};
	var connectAfterCreateNil = {
		connectAfterCreate: function (dictAudioInterpret) {
			return function (v) {
				return function (v1) {
					return function (w) {
						return Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(w)(
							Data_Unit.unit
						);
					};
				};
			};
		},
	};
	var connectAfterCreate = function (dict) {
		return dict.connectAfterCreate;
	};
	var connectAfterCreateCons = function (dictMakePrefixIfNeeded) {
		return function (dictConstructEdgesT) {
			return function (dictRowToList) {
				return function (dictCoercePrefixToString) {
					return function (dictAppend) {
						return function (dictAddPrefixToRowList) {
							return function (dictConnectEdgesToNode) {
								return function (dictConnectAfterCreate) {
									return function (dictConnectAfterCreate1) {
										return {
											connectAfterCreate: function (dictAudioInterpret) {
												return function (v) {
													return function (v1) {
														return function (w) {
															var step1 = connectEdgesToNode(
																dictConnectEdgesToNode
															)(dictAudioInterpret)(Type_Proxy['Proxy'].value)(
																Data_Functor.voidLeft(
																	WAGS_Control_Types.functorWAG
																)(w)(Type_Proxy['Proxy'].value)
															);
															var step2 = connectAfterCreate(
																dictConnectAfterCreate
															)(dictAudioInterpret)(Type_Proxy['Proxy'].value)(
																Type_Proxy['Proxy'].value
															)(
																Data_Functor.voidLeft(
																	WAGS_Control_Types.functorWAG
																)(step1)(Type_Proxy['Proxy'].value)
															);
															var step3 = connectAfterCreate(
																dictConnectAfterCreate1
															)(dictAudioInterpret)(Type_Proxy['Proxy'].value)(
																Type_Proxy['Proxy'].value
															)(
																Data_Functor.voidLeft(
																	WAGS_Control_Types.functorWAG
																)(step2)(Type_Proxy['Proxy'].value)
															);
															return step3;
														};
													};
												};
											},
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var createInternalAll = function (dictRowToList) {
		return function (dictCreateStepRL) {
			return function (dictConnectAfterCreate) {
				return {
					createInternal: function (dictAudioInterpret) {
						return function (v) {
							return function (v1) {
								return function (r) {
									var step0 = (function (dictAudioInterpret1) {
										return createStepRL(dictCreateStepRL)(dictAudioInterpret1);
									})(dictAudioInterpret)(Type_Proxy['Proxy'].value)(
										Type_Proxy['Proxy'].value
									)(Type_Proxy['Proxy'].value)(r);
									var step1 = connectAfterCreate(dictConnectAfterCreate)(
										dictAudioInterpret
									)(Type_Proxy['Proxy'].value)(Type_Proxy['Proxy'].value)(
										Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(step0)(
											Type_Proxy['Proxy'].value
										)
									);
									return step1;
								};
							};
						};
					},
				};
			};
		};
	};
	exports['create'] = create;
	exports['icreate'] = icreate;
	exports['createStepRLNil'] = createStepRLNil;
	exports['createStepRLConsB'] = createStepRLConsB;
	exports['createStepRLConsC'] = createStepRLConsC;
	exports['createStepRLCons'] = createStepRLCons;
	exports['connectEdgesToNodeNil'] = connectEdgesToNodeNil;
	exports['connectEdgesToNodeCons'] = connectEdgesToNodeCons;
	exports['connectAfterCreateNil'] = connectAfterCreateNil;
	exports['connectAfterCreateCons'] = connectAfterCreateCons;
	exports['createInternalAll'] = createInternalAll;
	exports['createAll'] = createAll;
	exports['createGain'] = createGain;
	exports['createInput'] = createInput;
	exports['createLoopBuf'] = createLoopBuf;
	exports['createPlayBuf'] = createPlayBuf;
	exports['createSpeaker'] = createSpeaker;
	exports['createSubgraph'] = createSubgraph;
	exports['createTumult'] = createTumult;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Control.Functions'] = $PS['WAGS.Control.Functions'] || {};
	var exports = $PS['WAGS.Control.Functions'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Data_Either = $PS['Data.Either'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Unit = $PS['Data.Unit'];
	var WAGS_Change = $PS['WAGS.Change'];
	var WAGS_Control_Indexed = $PS['WAGS.Control.Indexed'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Create = $PS['WAGS.Create'];
	var makeScene = function (dictMonoid) {
		return function (dictIsScene) {
			return function (dictAudioInterpret) {
				return function (m) {
					return function (trans) {
						var go = function (env) {
							var v = m(env);
							if (v instanceof Data_Either.Left) {
								return WAGS_Control_Types.getFrame(dictIsScene)(v.value0)(env);
							}
							if (v instanceof Data_Either.Right) {
								var v1 = WAGS_Control_Types.unsafeUnWAG(v.value0);
								return {
									instructions: v1.context.instructions,
									res: v1.context.res,
									next: trans(
										WAGS_Control_Types.unsafeWAG({
											context: {
												res: Data_Monoid.mempty(dictMonoid),
												instructions: [],
											},
											value: v1.value,
										})
									),
								};
							}
							throw new Error(
								'Failed pattern match at WAGS.Control.Functions (line 97, column 12 - line 108, column 10): ' +
									[v.constructor.name]
							);
						};
						return WAGS_Control_Types.unFrame(dictIsScene)(go);
					};
				};
			};
		};
	};
	var makeSceneR = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (a) {
					return function (b) {
						return makeScene(dictMonoid)(dictIsScene)(dictAudioInterpret)(
							Data_Functor.map(Data_Functor.functorFn)(
								Data_Either.Right.create
							)(a)
						)(b);
					};
				};
			};
		};
	};
	var makeSceneR$prime = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (a) {
					return function (b) {
						return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(
							Control_Applicative.pure(Control_Applicative.applicativeFn)(a)
						)(b);
					};
				};
			};
		};
	};
	var loop = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (fa) {
					return function (ma) {
						return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(
							fa(ma)
						)(loop(dictMonoid)(dictAudioInterpret)(dictIsScene)(fa));
					};
				};
			};
		};
	};
	var initialAudioState = function (dictMonoid) {
		return {
			res: Data_Monoid.mempty(dictMonoid),
			instructions: [],
		};
	};
	var start = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return WAGS_Control_Types.unsafeWAG({
				context: initialAudioState(dictMonoid),
				value: Data_Unit.unit,
			});
		};
	};
	var istart = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (m) {
					return makeSceneR(dictMonoid)(dictAudioInterpret)(dictIsScene)(
						function (e) {
							var v = m(e);
							return v(start(dictMonoid)(dictAudioInterpret));
						}
					);
				};
			};
		};
	};
	var iloop = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (fa) {
					return loop(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (
						wa
					) {
						return function (e) {
							var v = fa(e)(
								Control_Comonad.extract(WAGS_Control_Types.comonadWAG)(wa)
							);
							return v(wa);
						};
					});
				};
			};
		};
	};
	var loopUsingScene = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (dictCreate) {
					return function (dictChange) {
						return function (sceneF) {
							return function (initialControl) {
								return istart(dictMonoid)(dictAudioInterpret)(dictIsScene)(
									function (env) {
										var v = sceneF(env)(initialControl);
										return Data_Functor.voidLeft(
											WAGS_Control_Indexed.functorIxWAG
										)(
											WAGS_Create.icreate(dictAudioInterpret)(dictCreate)(
												v.scene
											)
										)(v.control);
									}
								)(
									iloop(dictMonoid)(dictAudioInterpret)(dictIsScene)(function (
										env
									) {
										return function (icontrol) {
											var v = sceneF(env)(icontrol);
											return Data_Functor.voidLeft(
												WAGS_Control_Indexed.functorIxWAG
											)(
												WAGS_Change.ichange(dictAudioInterpret)(dictChange)(
													v.scene
												)
											)(v.control);
										};
									})
								);
							};
						};
					};
				};
			};
		};
	};
	var freeze = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictIsScene) {
				return function (s) {
					return makeScene(dictMonoid)(dictIsScene)(dictAudioInterpret)(
						Control_Applicative.pure(Control_Applicative.applicativeFn)(
							new Data_Either.Right(s)
						)
					)(freeze(dictMonoid)(dictAudioInterpret)(dictIsScene));
				};
			};
		};
	};
	exports['start'] = start;
	exports['loopUsingScene'] = loopUsingScene;
	exports["makeSceneR'"] = makeSceneR$prime;
	exports['freeze'] = freeze;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Control.Functions.Graph'] =
		$PS['WAGS.Control.Functions.Graph'] || {};
	var exports = $PS['WAGS.Control.Functions.Graph'];
	var WAGS_Control_Functions = $PS['WAGS.Control.Functions'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var loopUsingScene = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictCreate) {
				return function (dictChange) {
					return function (dictGraphIsRenderable) {
						return WAGS_Control_Functions.loopUsingScene(dictMonoid)(
							dictAudioInterpret
						)(WAGS_Control_Types.isSceneScene)(dictCreate)(dictChange);
					};
				};
			};
		};
	};
	exports['loopUsingScene'] = loopUsingScene;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Control.Functions.Subgraph'] =
		$PS['WAGS.Control.Functions.Subgraph'] || {};
	var exports = $PS['WAGS.Control.Functions.Subgraph'];
	var WAGS_Control_Functions = $PS['WAGS.Control.Functions'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var makeSceneR$prime = function (dictMonoid) {
		return function (dictSubgraphIsRenderable) {
			return function (dictAudioInterpret) {
				return WAGS_Control_Functions["makeSceneR'"](dictMonoid)(
					dictAudioInterpret
				)(WAGS_Control_Types.isSceneSubScene);
			};
		};
	};
	var loopUsingScene = function (dictMonoid) {
		return function (dictAudioInterpret) {
			return function (dictCreate) {
				return function (dictChange) {
					return function (dictSubgraphIsRenderable) {
						return WAGS_Control_Functions.loopUsingScene(dictMonoid)(
							dictAudioInterpret
						)(WAGS_Control_Types.isSceneSubScene)(dictCreate)(dictChange);
					};
				};
			};
		};
	};
	var freeze = function (dictMonoid) {
		return function (dictSubgraphIsRenderable) {
			return function (dictAudioInterpret) {
				return WAGS_Control_Functions.freeze(dictMonoid)(dictAudioInterpret)(
					WAGS_Control_Types.isSceneSubScene
				);
			};
		};
	};
	exports["makeSceneR'"] = makeSceneR$prime;
	exports['loopUsingScene'] = loopUsingScene;
	exports['freeze'] = freeze;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Create.Optionals'] = $PS['WAGS.Create.Optionals'] || {};
	var exports = $PS['WAGS.Create.Optionals'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Category = $PS['Control.Category'];
	var ConvertableOptions = $PS['ConvertableOptions'];
	var Data_Tuple = $PS['Data.Tuple'];
	var WAGS_Graph_AudioUnit = $PS['WAGS.Graph.AudioUnit'];
	var WAGS_Graph_Paramable = $PS['WAGS.Graph.Paramable'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var PlayBuf = (function () {
		function PlayBuf() {}
		PlayBuf.value = new PlayBuf();
		return PlayBuf;
	})();
	var LoopBuf = (function () {
		function LoopBuf() {}
		LoopBuf.value = new LoopBuf();
		return LoopBuf;
	})();
	var tumult = function (dictPos) {
		return function (tmt) {
			return Data_Tuple.Tuple.create(new WAGS_Graph_AudioUnit.Tumult(tmt));
		};
	};
	var subgraph = function (dictPos) {
		return function (vec) {
			return function (sg) {
				return function (ev) {
					return Data_Tuple.Tuple.create(
						new WAGS_Graph_AudioUnit.Subgraph(
							vec,
							function (dictAudioInterpret) {
								return sg(dictAudioInterpret);
							},
							ev
						)
					);
				};
			};
		};
	};
	var speaker = function (b) {
		return {
			speaker: new Data_Tuple.Tuple(WAGS_Graph_AudioUnit.Speaker.value, b),
		};
	};
	var playBuf = function (dict) {
		return dict.playBuf;
	};
	var loopBuf = function (dict) {
		return dict.loopBuf;
	};
	var input = function (dictIsSymbol) {
		return function (v) {
			return new Data_Tuple.Tuple(WAGS_Graph_AudioUnit.Input.value, {});
		};
	};
	var gain = function (dictParamable) {
		return function (a) {
			return Data_Tuple.Tuple.create(
				new WAGS_Graph_AudioUnit.Gain(
					WAGS_Graph_Paramable.paramize(dictParamable)(a)
				)
			);
		};
	};
	var defaultPlayBuf = {
		playbackRate: Control_Applicative.pure(
			WAGS_Graph_Parameter.applicativeAudioParameter
		)(1.0),
		onOff: Control_Applicative.pure(
			WAGS_Graph_Parameter.applicativeAudioParameter
		)(WAGS_Graph_AudioUnit.On.value),
		bufferOffset: 0.0,
	};
	var playBufCtor1 = function (dictConvertOptionsWithDefaults) {
		return {
			playBuf: function (provided) {
				return function (proxy) {
					var all = ConvertableOptions.convertOptionsWithDefaults(
						dictConvertOptionsWithDefaults
					)(PlayBuf.value)(defaultPlayBuf)(provided);
					return new Data_Tuple.Tuple(
						new WAGS_Graph_AudioUnit.PlayBuf(
							proxy,
							all.bufferOffset,
							all.onOff,
							all.playbackRate
						),
						{}
					);
				};
			},
		};
	};
	var defaultLoopBuf = {
		playbackRate: Control_Applicative.pure(
			WAGS_Graph_Parameter.applicativeAudioParameter
		)(1.0),
		onOff: Control_Applicative.pure(
			WAGS_Graph_Parameter.applicativeAudioParameter
		)(WAGS_Graph_AudioUnit.On.value),
		loopStart: 0.0,
		loopEnd: 0.0,
	};
	var loopBufCtor1 = function (dictConvertOptionsWithDefaults) {
		return {
			loopBuf: function (provided) {
				return function (proxy) {
					var all = ConvertableOptions.convertOptionsWithDefaults(
						dictConvertOptionsWithDefaults
					)(LoopBuf.value)(defaultLoopBuf)(provided);
					return new Data_Tuple.Tuple(
						new WAGS_Graph_AudioUnit.LoopBuf(
							proxy,
							all.onOff,
							all.playbackRate,
							all.loopStart,
							all.loopEnd
						),
						{}
					);
				};
			},
		};
	};
	var convertPlayBufPlaybackRate = function (dictParamable) {
		return {
			convertOption: function (v) {
				return function (v1) {
					return WAGS_Graph_Paramable.paramize(dictParamable);
				};
			},
		};
	};
	var convertPlayBufOnOff = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Applicative.pure(
					WAGS_Graph_Parameter.applicativeAudioParameter
				);
			};
		},
	};
	var convertPlayBufAPOnOff = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Category.identity(Control_Category.categoryFn);
			};
		},
	};
	var convertPlayBufAPBufferOffset = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Category.identity(Control_Category.categoryFn);
			};
		},
	};
	var convertLoopBufStart = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Category.identity(Control_Category.categoryFn);
			};
		},
	};
	var convertLoopBufPlaybackRate = function (dictParamable) {
		return {
			convertOption: function (v) {
				return function (v1) {
					return WAGS_Graph_Paramable.paramize(dictParamable);
				};
			},
		};
	};
	var convertLoopBufOnOff = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Applicative.pure(
					WAGS_Graph_Parameter.applicativeAudioParameter
				);
			};
		},
	};
	var convertLoopBufEnd = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Category.identity(Control_Category.categoryFn);
			};
		},
	};
	var convertLoopBufAPOnOff = {
		convertOption: function (v) {
			return function (v1) {
				return Control_Category.identity(Control_Category.categoryFn);
			};
		},
	};
	exports['loopBuf'] = loopBuf;
	exports['playBuf'] = playBuf;
	exports['gain'] = gain;
	exports['input'] = input;
	exports['speaker'] = speaker;
	exports['subgraph'] = subgraph;
	exports['tumult'] = tumult;
	exports['convertLoopBufPlaybackRate'] = convertLoopBufPlaybackRate;
	exports['convertLoopBufOnOff'] = convertLoopBufOnOff;
	exports['convertLoopBufAPOnOff'] = convertLoopBufAPOnOff;
	exports['convertLoopBufStart'] = convertLoopBufStart;
	exports['convertLoopBufEnd'] = convertLoopBufEnd;
	exports['loopBufCtor1'] = loopBufCtor1;
	exports['convertPlayBufPlaybackRate'] = convertPlayBufPlaybackRate;
	exports['convertPlayBufOnOff'] = convertPlayBufOnOff;
	exports['convertPlayBufAPOnOff'] = convertPlayBufAPOnOff;
	exports['convertPlayBufAPBufferOffset'] = convertPlayBufAPBufferOffset;
	exports['playBufCtor1'] = playBufCtor1;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Lib.Cofree'] = $PS['WAGS.Lib.Cofree'] || {};
	var exports = $PS['WAGS.Lib.Cofree'];
	var Control_Category = $PS['Control.Category'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Control_Comonad_Cofree_Class = $PS['Control.Comonad.Cofree.Class'];
	var Data_Function = $PS['Data.Function'];
	var Heterogeneous_Mapping = $PS['Heterogeneous.Mapping'];
	var Tailz = (function () {
		function Tailz() {}
		Tailz.value = new Tailz();
		return Tailz;
	})();
	var tails = function (dict) {
		return dict.tails;
	};
	var tailzMapping = function (dictTailable) {
		return {
			mapping: function (v) {
				return tails(dictTailable);
			},
		};
	};
	var tailableRow = function (dictHMap) {
		return {
			tails: Heterogeneous_Mapping.hmap(dictHMap)(Tailz.value),
		};
	};
	var tailableCf = function (dictComonadCofree) {
		return {
			tails: Control_Comonad_Cofree_Class.unwrapCofree(dictComonadCofree),
		};
	};
	var combineComonadCofree = function (dictFunctor) {
		return function (dictFunctor1) {
			return function (f1) {
				return function (f2) {
					return f2(combine(dictFunctor)(dictFunctor1)(f1)(f2));
				};
			};
		};
	};
	var combine = function (dictFunctor) {
		return function (dictFunctor1) {
			return function (f1) {
				return function (f2) {
					return function (c1) {
						return function (c2) {
							return Control_Comonad_Cofree.mkCofree(
								f1(
									Control_Comonad.extract(
										Control_Comonad_Cofree.comonadCofree(dictFunctor)
									)(c1)
								)(
									Control_Comonad.extract(
										Control_Comonad_Cofree.comonadCofree(dictFunctor1)
									)(c2)
								)
							)(
								combineComonadCofree(dictFunctor)(dictFunctor1)(f1)(f2)(
									Control_Comonad_Cofree_Class.unwrapCofree(
										Control_Comonad_Cofree_Class.comonadCofreeCofree(
											dictFunctor
										)
									)(c1)
								)(
									Control_Comonad_Cofree_Class.unwrapCofree(
										Control_Comonad_Cofree_Class.comonadCofreeCofree(
											dictFunctor1
										)
									)(c2)
								)
							);
						};
					};
				};
			};
		};
	};
	var combineComonadCofreeChooseB = function (dictFunctor) {
		return function (dictFunctor1) {
			return combineComonadCofree(dictFunctor)(dictFunctor1)(
				Data_Function['const'](
					Control_Category.identity(Control_Category.categoryFn)
				)
			);
		};
	};
	exports['tails'] = tails;
	exports['combineComonadCofreeChooseB'] = combineComonadCofreeChooseB;
	exports['tailableRow'] = tailableRow;
	exports['tailableCf'] = tailableCf;
	exports['tailzMapping'] = tailzMapping;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Lib.Score'] = $PS['WAGS.Lib.Score'] || {};
	var exports = $PS['WAGS.Lib.Score'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Control_Comonad_Cofree_Class = $PS['Control.Comonad.Cofree.Class'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Lens_Record = $PS['Data.Lens.Record'];
	var Data_Lens_Setter = $PS['Data.Lens.Setter'];
	var Data_Profunctor_Strong = $PS['Data.Profunctor.Strong'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Type_Proxy = $PS['Type.Proxy'];
	var makeOffsets = function (v) {
		var v1 = function (v2) {
			if (Data_Boolean.otherwise) {
				return {
					offsets: [],
					playhead: v.playhead,
					rest: v.rest,
				};
			}
			throw new Error(
				'Failed pattern match at WAGS.Lib.Score (line 36, column 1 - line 36, column 303): ' +
					[v.constructor.name]
			);
		};
		var $12 = v.rest({
			time: v.time,
			headroomInSeconds: v.headroomInSeconds,
			input: v.input,
		});
		var $13 = Control_Comonad.extract(
			Control_Comonad_Cofree.comonadCofree(Data_Functor.functorFn)
		)($12);
		var $14 = v.time + v.headroomInSeconds >= v.playhead + $13.startsAfter;
		if ($14) {
			return Data_Lens_Setter.over(
				Data_Lens_Record.prop({
					reflectSymbol: function () {
						return 'offsets';
					},
				})()()(Type_Proxy['Proxy'].value)(Data_Profunctor_Strong.strongFn)
			)(
				Data_Semigroup.append(Data_Semigroup.semigroupArray)([
					{
						offset: v.playhead + $13.startsAfter - v.time,
						rest: $13.rest,
					},
				])
			)(
				makeOffsets({
					time: v.time,
					headroomInSeconds: v.headroomInSeconds,
					playhead: v.playhead + $13.startsAfter,
					rest: Control_Comonad_Cofree_Class.unwrapCofree(
						Control_Comonad_Cofree_Class.comonadCofreeCofree(
							Data_Functor.functorFn
						)
					)($12),
					input: v.input,
				})
			);
		}
		return v1(true);
	};
	var makeScore = function (v) {
		var go = function (rest) {
			return function (playhead) {
				return function (v1) {
					var o = makeOffsets({
						time: v1.time,
						headroomInSeconds: v1.headroomInSeconds,
						playhead: playhead,
						rest: rest,
						input: v1.input,
					});
					return Control_Comonad_Cofree.mkCofree(o.offsets)(
						go(o.rest)(o.playhead)
					);
				};
			};
		};
		return go(v.noteStream)(v.startsAt);
	};
	exports['makeScore'] = makeScore;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Lib.BufferPool'] = $PS['WAGS.Lib.BufferPool'] || {};
	var exports = $PS['WAGS.Lib.BufferPool'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Data_Array = $PS['Data.Array'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Ordering = $PS['Data.Ordering'];
	var Data_Vec = $PS['Data.Vec'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Lib_Cofree = $PS['WAGS.Lib.Cofree'];
	var WAGS_Lib_Score = $PS['WAGS.Lib.Score'];
	var makeBufferPoolWithRest$prime = function (dictPos) {
		return function (v) {
			var sortForAttribution = function (v1) {
				return function (v2) {
					if (
						v1.val instanceof Data_Maybe.Just &&
						v2.val instanceof Data_Maybe.Just
					) {
						return Data_Ord.compare(Data_Ord.ordNumber)(
							v1.val.value0.buf.startTime +
								Data_Maybe.fromMaybe(0.0)(v1.val.value0.buf.duration)
						)(
							v2.val.value0.buf.startTime +
								Data_Maybe.fromMaybe(0.0)(v2.val.value0.buf.duration)
						);
					}
					if (
						v1.val instanceof Data_Maybe.Nothing &&
						v2.val instanceof Data_Maybe.Nothing
					) {
						return Data_Ordering.LT.value;
					}
					if (
						v1.val instanceof Data_Maybe.Nothing &&
						v2.val instanceof Data_Maybe.Just
					) {
						return Data_Ordering.LT.value;
					}
					if (
						v1.val instanceof Data_Maybe.Just &&
						v2.val instanceof Data_Maybe.Nothing
					) {
						return Data_Ordering.GT.value;
					}
					throw new Error(
						'Failed pattern match at WAGS.Lib.BufferPool (line 183, column 52 - line 187, column 26): ' +
							[v1.val.constructor.name, v2.val.constructor.name]
					);
				};
			};
			var maybeBufferToGainOnOff = function (v1) {
				return function (myPos) {
					return function (v2) {
						var v3 = function (v4) {
							if (
								v2.val instanceof Data_Maybe.Nothing &&
								Data_Boolean.otherwise
							) {
								return v2;
							}
							var v5 = function (v6) {
								if (
									v2.val instanceof Data_Maybe.Just &&
									Data_Boolean.otherwise
								) {
									return {
										orig: v2.orig,
										val: Data_Maybe.Just.create({
											durationF: v2.val.value0.durationF,
											buf: {
												startTime: v2.val.value0.buf.startTime,
												starting: false,
												rest: v2.val.value0.buf.rest,
												duration: v2.val.value0.buf.duration,
											},
										}),
									};
								}
								throw new Error(
									'Failed pattern match at WAGS.Lib.BufferPool (line 126, column 1 - line 130, column 22): ' +
										[
											v1.constructor.name,
											myPos.constructor.name,
											v2.constructor.name,
										]
								);
							};
							if (v2.val instanceof Data_Maybe.Just) {
								var $74 = Data_Array.index(v1.offsets)(myPos);
								if ($74 instanceof Data_Maybe.Just) {
									var startTime =
										v1.time +
										Data_Ord.max(Data_Ord.ordNumber)(0.0)($74.value0.offset);
									var tag = $74.value0.rest(startTime);
									var curried = $74.value0.duration(startTime);
									return {
										orig: v2.orig,
										val: Data_Maybe.Just.create({
											durationF: curried(false),
											buf: {
												startTime: startTime,
												starting: true,
												rest: tag,
												duration: curried(true)(v1.time),
											},
										}),
									};
								}
								return v5(true);
							}
							return v5(true);
						};
						if (v2.val instanceof Data_Maybe.Nothing) {
							var $89 = Data_Array.index(v1.offsets)(myPos);
							if ($89 instanceof Data_Maybe.Just) {
								var startTime =
									v1.time +
									Data_Ord.max(Data_Ord.ordNumber)(0.0)($89.value0.offset);
								var tag = $89.value0.rest(startTime);
								var curried = $89.value0.duration(startTime);
								return {
									orig: v2.orig,
									val: Data_Maybe.Just.create({
										durationF: curried(false),
										buf: {
											startTime: startTime,
											starting: true,
											rest: tag,
											duration: curried(true)(v1.time),
										},
									}),
								};
							}
							return v3(true);
						}
						return v3(true);
					};
				};
			};
			var go = function (v1) {
				return function (v2) {
					var internalStates = (function () {
						var $100 = Data_Array['null'](v2.offsets);
						if ($100) {
							return Data_Functor.map(Data_Vec.functorVec)(
								Data_Functor.map(Data_Maybe.functorMaybe)(function (v4) {
									return {
										durationF: v4.durationF,
										buf: {
											startTime: v4.buf.startTime,
											starting: false,
											rest: v4.buf.rest,
											duration: v4.durationF(v2.time),
										},
									};
								})
							)(v1);
						}
						return Data_Functor.map(Data_Vec.functorVec)(function (v4) {
							return v4.val;
						})(
							Data_Vec.sortBy(function (a) {
								return function (b) {
									return Data_Ord.compare(Data_Ord.ordInt)(a.orig)(b.orig);
								};
							})(
								Data_FunctorWithIndex.mapWithIndex(
									Data_Vec.functorWithIndexVec
								)(maybeBufferToGainOnOff(v2))(
									Data_Vec.sortBy(sortForAttribution)(
										Data_FunctorWithIndex.mapWithIndex(
											Data_Vec.functorWithIndexVec
										)(function (orig) {
											return function (a) {
												return {
													orig: orig,
													val: Data_Functor.map(Data_Maybe.functorMaybe)(
														function (v4) {
															return {
																durationF: v4.durationF,
																buf: {
																	startTime: v4.buf.startTime,
																	starting: false,
																	rest: v4.buf.rest,
																	duration: v4.durationF(v2.time),
																},
															};
														}
													)(a),
												};
											};
										})(v1)
									)
								)
							)
						);
					})();
					return Control_Comonad_Cofree.mkCofree(
						Data_Functor.map(Data_Vec.functorVec)(
							Data_Functor.map(Data_Maybe.functorMaybe)(function (v4) {
								return v4.buf;
							})
						)(internalStates)
					)(go(internalStates));
				};
			};
			return go(
				Data_Vec.fill(dictPos.Nat0())(
					Data_Function['const'](Data_Maybe.Nothing.value)
				)
			);
		};
	};
	var makeBufferPoolWithRest = function (dictPos) {
		return makeBufferPoolWithRest$prime(dictPos)(Type_Proxy['Proxy'].value);
	};
	var makeBufferPoolWithAnchor = function (dictPos) {
		return function (cf) {
			return WAGS_Lib_Cofree.combineComonadCofreeChooseB(
				Data_Functor.functorFn
			)(Data_Functor.functorFn)(function (cont) {
				return function (e) {
					return function (b) {
						return function (v) {
							var enow = e(v);
							var bnow = b({
								time: v.time,
								offsets: Control_Comonad.extract(
									Control_Comonad_Cofree.comonadCofree(Data_Functor.functorFn)
								)(enow),
							});
							return cont(enow)(bnow);
						};
					};
				};
			})(cf)(makeBufferPoolWithRest(dictPos));
		};
	};
	var makeScoredBufferPool = function (dictPos) {
		return function (v) {
			return makeBufferPoolWithAnchor(dictPos)(
				Data_Functor.map(Data_Functor.functorFn)(
					Data_Functor.map(
						Control_Comonad_Cofree.functorCofree(Data_Functor.functorFn)
					)(
						Data_Functor.map(Data_Functor.functorArray)(function (v1) {
							return {
								offset: v1.offset,
								rest: v1.rest.rest,
								duration: v1.rest.duration,
							};
						})
					)
				)(
					WAGS_Lib_Score.makeScore({
						startsAt: v.startsAt,
						noteStream: v.noteStream,
					})
				)
			);
		};
	};
	exports['makeScoredBufferPool'] = makeScoredBufferPool;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Lib.Learn'] = $PS['WAGS.Lib.Learn'] || {};
	var exports = $PS['WAGS.Lib.Learn'];
	var Data_Monoid = $PS['Data.Monoid'];
	var WAGS_Control_Functions_Graph = $PS['WAGS.Control.Functions.Graph'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var usingc = function (dictCreate) {
		return function (dictGraphIsRenderable) {
			return function (dictChange) {
				return function (triggerWorld) {
					return function (control) {
						return function (piece) {
							return {
								triggerWorld: triggerWorld,
								piece: WAGS_Control_Functions_Graph.loopUsingScene(
									Data_Monoid.monoidUnit
								)(WAGS_Interpret.mixedAudioInterpret)(dictCreate)(dictChange)()(
									piece
								)(control),
							};
						};
					};
				};
			};
		};
	};
	exports['usingc'] = usingc;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Math'] = $PS['WAGS.Math'] || {};
	var exports = $PS['WAGS.Math'];
	var calcSlope = function (x0) {
		return function (y0) {
			return function (x1) {
				return function (y1) {
					return function (x) {
						var $1 = x1 === x0 || y1 === y0;
						if ($1) {
							return y0;
						}
						var m = (y1 - y0) / (x1 - x0);
						var b = y0 - m * x0;
						return m * x + b;
					};
				};
			};
		};
	};
	exports['calcSlope'] = calcSlope;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Run'] = $PS['WAGS.Run'] || {};
	var exports = $PS['WAGS.Run'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Data_DateTime_Instant = $PS['Data.DateTime.Instant'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Int = $PS['Data.Int'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unit = $PS['Data.Unit'];
	var Effect = $PS['Effect'];
	var Effect_Ref = $PS['Effect.Ref'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Behavior_Time = $PS['FRP.Behavior.Time'];
	var FRP_Event = $PS['FRP.Event'];
	var FRP_Event_Time = $PS['FRP.Event.Time'];
	var Safe_Coerce = $PS['Safe.Coerce'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var workWithAnalysersNil = {
		makeAnalyserCallbacks: function (v) {
			return function (v1) {
				return {};
			};
		},
	};
	var makeAnalyserRefs = function (dict) {
		return dict.makeAnalyserRefs;
	};
	var makeAnalyserCallbacks = function (dict) {
		return dict.makeAnalyserCallbacks;
	};
	var getAnalysersNil = {
		getAnalysers: function (v) {
			return function (v1) {
				return Control_Applicative.pure(Effect.applicativeEffect)({});
			};
		},
	};
	var getAnalysers = function (dict) {
		return dict.getAnalysers;
	};
	var run = function (dictRowToList) {
		return function (dictAnalyserRefs) {
			return function (dictMakeAnalyserCallbacks) {
				return function (dictAnalysers) {
					return function (dictMonoid) {
						return function (trigger) {
							return function (inWorld) {
								return function (engineInfo) {
									return function (audioInfo) {
										return function (scene) {
											var runInternal = function (audioClockStart) {
												return function (fromEvents) {
													return function (world$prime) {
														return function (currentTimeoutCanceler) {
															return function (currentEasingAlg) {
																return function (currentScene) {
																	return function (nonBehavioralFFIInfo) {
																		return function (analyserCallbacks) {
																			return function (analyserRefs) {
																				return function (reporter) {
																					return function __do() {
																						var easingAlgNow =
																							Effect_Ref.read(
																								currentEasingAlg
																							)();
																						var sceneNow =
																							Effect_Ref.read(currentScene)();
																						var audioClockPriorToComputation =
																							WAGS_Interpret.getAudioClockTime(
																								nonBehavioralFFIInfo.context
																							)();
																						var headroom =
																							Control_Comonad_Cofree.head(
																								easingAlgNow
																							);
																						var headroomInSeconds =
																							Data_Int.toNumber(headroom) /
																							1000.0;
																						var time =
																							audioClockPriorToComputation -
																							audioClockStart +
																							headroomInSeconds;
																						var fromScene =
																							WAGS_Control_Types.oneFrame(
																								sceneNow
																							)(
																								Safe_Coerce.coerce()({
																									world: fromEvents.world,
																									trigger: fromEvents.trigger,
																									sysTime: fromEvents.sysTime,
																									time: time,
																									headroom: headroom,
																									headroomInSeconds:
																										headroomInSeconds,
																									analyserCallbacks:
																										analyserCallbacks,
																								})
																							);
																						var audioClockAfterComputation =
																							WAGS_Interpret.getAudioClockTime(
																								nonBehavioralFFIInfo.context
																							)();
																						var ffi = {
																							context:
																								nonBehavioralFFIInfo.context,
																							writeHead: Data_Ord.max(
																								Data_Ord.ordNumber
																							)(audioClockAfterComputation)(
																								audioClockPriorToComputation +
																									headroomInSeconds
																							),
																							units: nonBehavioralFFIInfo.units,
																						};
																						var applied = Data_Functor.map(
																							Data_Functor.functorArray
																						)(function (f) {
																							return f(
																								new Data_Tuple.Tuple(
																									Data_Unit.unit,
																									ffi
																								)
																							);
																						})(fromScene.instructions);
																						WAGS_Interpret.renderAudio(
																							Data_Functor.map(
																								Data_Functor.functorArray
																							)(Data_Tuple.snd)(applied)
																						)();
																						var remainingTimeInSeconds =
																							audioClockPriorToComputation +
																							headroomInSeconds -
																							audioClockAfterComputation;
																						var remainingTime = Data_Int.floor(
																							1000.0 * remainingTimeInSeconds
																						);
																						Effect_Ref.write(
																							Control_Comonad_Cofree.tail(
																								easingAlgNow
																							)(remainingTime)
																						)(currentEasingAlg)();
																						Effect_Ref.write(fromScene.next)(
																							currentScene
																						)();
																						var analysers = getAnalysers(
																							dictAnalysers
																						)(Type_Proxy['Proxy'].value)(
																							analyserRefs
																						)();
																						reporter({
																							instructions: Data_Functor.map(
																								Data_Functor.functorArray
																							)(Data_Tuple.fst)(applied),
																							res: fromScene.res,
																							remainingTimeInSeconds:
																								remainingTimeInSeconds,
																							remainingTime: remainingTime,
																							headroom: headroom,
																							headroomInSeconds:
																								headroomInSeconds,
																							analysers: analysers,
																						})();
																						var canceler = FRP_Event.subscribe(
																							FRP_Behavior.sample_(
																								FRP_Event.eventIsEvent
																							)(world$prime)(
																								FRP_Event_Time.delay(
																									Data_Ord.max(Data_Ord.ordInt)(
																										1
																									)(remainingTime)
																								)(
																									Control_Applicative.pure(
																										FRP_Event.applicativeEvent
																									)(Data_Unit.unit)
																								)
																							)
																						)(function (v) {
																							return runInternal(
																								audioClockStart
																							)({
																								world: v.world,
																								sysTime: v.sysTime,
																								trigger:
																									Data_Maybe.Nothing.value,
																							})(world$prime)(
																								currentTimeoutCanceler
																							)(currentEasingAlg)(currentScene)(
																								nonBehavioralFFIInfo
																							)(analyserCallbacks)(
																								analyserRefs
																							)(reporter);
																						})();
																						return Effect_Ref.write(canceler)(
																							currentTimeoutCanceler
																						)();
																					};
																				};
																			};
																		};
																	};
																};
															};
														};
													};
												};
											};
											return FRP_Event.makeEvent(function (k) {
												return function __do() {
													var refsForAnalysers = makeAnalyserRefs(
														dictAnalyserRefs
													)(Type_Proxy['Proxy'].value)();
													var audioClockStart =
														WAGS_Interpret.getAudioClockTime(
															audioInfo.context
														)();
													var currentTimeoutCanceler = Effect_Ref['new'](
														Control_Applicative.pure(Effect.applicativeEffect)(
															Data_Unit.unit
														)
													)();
													var currentScene = Effect_Ref['new'](scene)();
													var currentEasingAlg = Effect_Ref['new'](
														engineInfo.easingAlgorithm
													)();
													var newWorld = Control_Apply.apply(
														FRP_Behavior.applyABehavior(FRP_Event.functorEvent)
													)(
														Data_Functor.map(
															FRP_Behavior.functorABehavior(
																FRP_Event.functorEvent
															)
														)(function (v) {
															return function (v1) {
																return {
																	world: v,
																	sysTime: v1,
																};
															};
														})(inWorld)
													)(
														Data_Functor.map(
															FRP_Behavior.functorABehavior(
																FRP_Event.functorEvent
															)
														)(Data_DateTime_Instant.unInstant)(
															FRP_Behavior_Time.instant
														)
													);
													var eventAndEnv = FRP_Behavior.sampleBy(
														FRP_Event.eventIsEvent
													)(function (v) {
														return function (b) {
															return {
																trigger: new Data_Maybe.Just(b),
																world: v.world,
																sysTime: v.sysTime,
															};
														};
													})(newWorld)(trigger);
													var unsubscribe = FRP_Event.subscribe(eventAndEnv)(
														function (ee) {
															return function __do() {
																var cancelTimeout = Effect_Ref.read(
																	currentTimeoutCanceler
																)();
																cancelTimeout();
																return runInternal(audioClockStart)(ee)(
																	newWorld
																)(currentTimeoutCanceler)(currentEasingAlg)(
																	currentScene
																)({
																	context: audioInfo.context,
																	units: audioInfo.units,
																	writeHead: audioInfo.writeHead,
																})(
																	makeAnalyserCallbacks(
																		dictMakeAnalyserCallbacks
																	)(Type_Proxy['Proxy'].value)(refsForAnalysers)
																)(refsForAnalysers)(k)();
															};
														}
													)();
													return function __do() {
														var cancelTimeout = Effect_Ref.read(
															currentTimeoutCanceler
														)();
														cancelTimeout();
														return unsubscribe();
													};
												};
											});
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
	var analyserRefsNil = {
		makeAnalyserRefs: function (v) {
			return Control_Applicative.pure(Effect.applicativeEffect)({});
		},
	};
	exports['run'] = run;
	exports['getAnalysersNil'] = getAnalysersNil;
	exports['analyserRefsNil'] = analyserRefsNil;
	exports['workWithAnalysersNil'] = workWithAnalysersNil;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Tumult.Make'] = $PS['WAGS.Tumult.Make'] || {};
	var exports = $PS['WAGS.Tumult.Make'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Set = $PS['Data.Set'];
	var Data_Unit = $PS['Data.Unit'];
	var Data_Vec = $PS['Data.Vec'];
	var WAGS_Control_Functions = $PS['WAGS.Control.Functions'];
	var WAGS_Control_Functions_Subgraph = $PS['WAGS.Control.Functions.Subgraph'];
	var WAGS_Control_Types = $PS['WAGS.Control.Types'];
	var WAGS_Create = $PS['WAGS.Create'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGS_Rendered = $PS['WAGS.Rendered'];
	var WAGS_Tumult = $PS['WAGS.Tumult'];
	var tumultuously = function (dictPos) {
		return function (dictRowToList) {
			return function (dictCreate) {
				return function (dictSubgraphIsRenderable) {
					return function (dictNodesCanBeTumultuous) {
						return function (scenes) {
							var go = function (scene) {
								var init = WAGS_Create.create(dictCreate)(
									WAGS_Interpret.freeAudioInterpret
								)(
									Data_Functor.voidLeft(WAGS_Control_Types.functorWAG)(
										WAGS_Control_Functions.start(Data_Monoid.monoidUnit)(
											WAGS_Interpret.freeAudioInterpret
										)
									)(scene)
								);
								var subscene = WAGS_Control_Functions_Subgraph["makeSceneR'"](
									Data_Monoid.monoidUnit
								)()(WAGS_Interpret.freeAudioInterpret)(init)(
									WAGS_Control_Functions_Subgraph.freeze(
										Data_Monoid.monoidUnit
									)()(WAGS_Interpret.freeAudioInterpret)
								);
								var frame = WAGS_Control_Types.oneSubFrame(subscene)(
									Data_Unit.unit
								);
								return Data_Set.fromFoldable(Data_Foldable.foldableArray)(
									WAGS_Rendered.ordInstruction
								)(
									Data_Functor.map(Data_Functor.functorArray)(
										Data_Function.applyFlipped(Data_Unit.unit)
									)(frame.instructions)
								);
							};
							return WAGS_Tumult.unsafeTumult(
								Data_Functor.map(Data_Functor.functorArray)(go)(
									Data_Vec.toArray(scenes)
								)
							);
						};
					};
				};
			};
		};
	};
	exports['tumultuously'] = tumultuously;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGS.Util'] = $PS['WAGS.Util'] || {};
	var exports = $PS['WAGS.Util'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var natToSymD0 = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
	};
	var autoIncrementingInsertUnit = {
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
	};
	exports['autoIncrementingInsertUnit'] = autoIncrementingInsertUnit;
	exports['natToSymD0'] = natToSymD0;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Cycle'] = $PS['WAGSI.Plumbing.Cycle'] || {};
	var exports = $PS['WAGSI.Plumbing.Cycle'];
	var Branching = (function () {
		function Branching(value0) {
			this.value0 = value0;
		}
		Branching.create = function (value0) {
			return new Branching(value0);
		};
		return Branching;
	})();
	var Simultaneous = (function () {
		function Simultaneous(value0) {
			this.value0 = value0;
		}
		Simultaneous.create = function (value0) {
			return new Simultaneous(value0);
		};
		return Simultaneous;
	})();
	var Internal = (function () {
		function Internal(value0) {
			this.value0 = value0;
		}
		Internal.create = function (value0) {
			return new Internal(value0);
		};
		return Internal;
	})();
	var SingleNote = (function () {
		function SingleNote(value0) {
			this.value0 = value0;
		}
		SingleNote.create = function (value0) {
			return new SingleNote(value0);
		};
		return SingleNote;
	})();
	exports['Branching'] = Branching;
	exports['Simultaneous'] = Simultaneous;
	exports['Internal'] = Internal;
	exports['SingleNote'] = SingleNote;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.JSON'] = $PS['WAGSI.Plumbing.JSON'] || {};
	var exports = $PS['WAGSI.Plumbing.JSON'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad_Error_Class = $PS['Control.Monad.Error.Class'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Data_Ord = $PS['Data.Ord'];
	var Foreign = $PS['Foreign'];
	var Simple_JSON = $PS['Simple.JSON'];
	var readVariant = function (name) {
		return function (mp) {
			return function (i) {
				return Control_Bind.bind(
					Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)
				)(Simple_JSON.readImpl(Simple_JSON.readString)(i))(function (s) {
					var v = Data_Map_Internal.lookup(Data_Ord.ordString)(s)(mp);
					if (v instanceof Data_Maybe.Just) {
						return Control_Applicative.pure(
							Control_Monad_Except_Trans.applicativeExceptT(
								Data_Identity.monadIdentity
							)
						)(v.value0);
					}
					if (v instanceof Data_Maybe.Nothing) {
						return Control_Monad_Error_Class.throwError(
							Control_Monad_Except_Trans.monadThrowExceptT(
								Data_Identity.monadIdentity
							)
						)(
							new Data_NonEmpty.NonEmpty(
								Foreign.ForeignError.create(
									'Could not parse ' + (name + (': ' + s))
								),
								Data_List_Types.Nil.value
							)
						);
					}
					throw new Error(
						'Failed pattern match at WAGSI.Plumbing.JSON (line 17, column 15 - line 19, column 109): ' +
							[v.constructor.name]
					);
				});
			};
		};
	};
	exports['readVariant'] = readVariant;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.DemoEvent'] = $PS['WAGSI.Plumbing.DemoEvent'] || {};
	var exports = $PS['WAGSI.Plumbing.DemoEvent'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad_Error_Class = $PS['Control.Monad.Error.Class'];
	var Control_Monad_Except_Trans = $PS['Control.Monad.Except.Trans'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Foreign = $PS['Foreign'];
	var Simple_JSON = $PS['Simple.JSON'];
	var WAGSI_Plumbing_JSON = $PS['WAGSI.Plumbing.JSON'];
	var DE$primeLeaf = (function () {
		function DE$primeLeaf(value0) {
			this.value0 = value0;
		}
		DE$primeLeaf.create = function (value0) {
			return new DE$primeLeaf(value0);
		};
		return DE$primeLeaf;
	})();
	var DE$primeEnd = (function () {
		function DE$primeEnd() {}
		DE$primeEnd.value = new DE$primeEnd();
		return DE$primeEnd;
	})();
	var NDC$primeC1 = (function () {
		function NDC$primeC1() {}
		NDC$primeC1.value = new NDC$primeC1();
		return NDC$primeC1;
	})();
	var NDC$primeC2 = (function () {
		function NDC$primeC2() {}
		NDC$primeC2.value = new NDC$primeC2();
		return NDC$primeC2;
	})();
	var NDC$primeC3 = (function () {
		function NDC$primeC3() {}
		NDC$primeC3.value = new NDC$primeC3();
		return NDC$primeC3;
	})();
	var H$primeAdd_one = (function () {
		function H$primeAdd_one() {}
		H$primeAdd_one.value = new H$primeAdd_one();
		return H$primeAdd_one;
	})();
	var H$primeAdd_two = (function () {
		function H$primeAdd_two() {}
		H$primeAdd_two.value = new H$primeAdd_two();
		return H$primeAdd_two;
	})();
	var H$primeAdd_three = (function () {
		function H$primeAdd_three() {}
		H$primeAdd_three.value = new H$primeAdd_three();
		return H$primeAdd_three;
	})();
	var H$primeAdd_four = (function () {
		function H$primeAdd_four() {}
		H$primeAdd_four.value = new H$primeAdd_four();
		return H$primeAdd_four;
	})();
	var BC$primeC1 = (function () {
		function BC$primeC1() {}
		BC$primeC1.value = new BC$primeC1();
		return BC$primeC1;
	})();
	var BC$primeC2 = (function () {
		function BC$primeC2() {}
		BC$primeC2.value = new BC$primeC2();
		return BC$primeC2;
	})();
	var BC$primeC3 = (function () {
		function BC$primeC3() {}
		BC$primeC3.value = new BC$primeC3();
		return BC$primeC3;
	})();
	var BC$primeC4 = (function () {
		function BC$primeC4() {}
		BC$primeC4.value = new BC$primeC4();
		return BC$primeC4;
	})();
	var BC$primeC5 = (function () {
		function BC$primeC5() {}
		BC$primeC5.value = new BC$primeC5();
		return BC$primeC5;
	})();
	var BC$primeC6 = (function () {
		function BC$primeC6() {}
		BC$primeC6.value = new BC$primeC6();
		return BC$primeC6;
	})();
	var BC$primeC7 = (function () {
		function BC$primeC7() {}
		BC$primeC7.value = new BC$primeC7();
		return BC$primeC7;
	})();
	var DE$primeMusic_was_never_meant_to_be_static_or_fixed = (function () {
		function DE$primeMusic_was_never_meant_to_be_static_or_fixed() {}
		DE$primeMusic_was_never_meant_to_be_static_or_fixed.value =
			new DE$primeMusic_was_never_meant_to_be_static_or_fixed();
		return DE$primeMusic_was_never_meant_to_be_static_or_fixed;
	})();
	var DE$primeMusic_must_explode_with_possibilities = (function () {
		function DE$primeMusic_must_explode_with_possibilities() {}
		DE$primeMusic_must_explode_with_possibilities.value =
			new DE$primeMusic_must_explode_with_possibilities();
		return DE$primeMusic_must_explode_with_possibilities;
	})();
	var DE$primeThe_possibility_to_add_new_sounds = (function () {
		function DE$primeThe_possibility_to_add_new_sounds(value0) {
			this.value0 = value0;
		}
		DE$primeThe_possibility_to_add_new_sounds.create = function (value0) {
			return new DE$primeThe_possibility_to_add_new_sounds(value0);
		};
		return DE$primeThe_possibility_to_add_new_sounds;
	})();
	var DE$primeThe_possibility_to_take_a_sound_in_a_new_direction =
		(function () {
			function DE$primeThe_possibility_to_take_a_sound_in_a_new_direction(
				value0
			) {
				this.value0 = value0;
			}
			DE$primeThe_possibility_to_take_a_sound_in_a_new_direction.create =
				function (value0) {
					return new DE$primeThe_possibility_to_take_a_sound_in_a_new_direction(
						value0
					);
				};
			return DE$primeThe_possibility_to_take_a_sound_in_a_new_direction;
		})();
	var DE$primeThe_possibility_to_change_a_beat = (function () {
		function DE$primeThe_possibility_to_change_a_beat(value0) {
			this.value0 = value0;
		}
		DE$primeThe_possibility_to_change_a_beat.create = function (value0) {
			return new DE$primeThe_possibility_to_change_a_beat(value0);
		};
		return DE$primeThe_possibility_to_change_a_beat;
	})();
	var DE$primeThe_possibility_to_harmonize = (function () {
		function DE$primeThe_possibility_to_harmonize(value0) {
			this.value0 = value0;
		}
		DE$primeThe_possibility_to_harmonize.create = function (value0) {
			return new DE$primeThe_possibility_to_harmonize(value0);
		};
		return DE$primeThe_possibility_to_harmonize;
	})();
	var DE$primeThe_possibility_to_glitch_crackle_and_shimmer = (function () {
		function DE$primeThe_possibility_to_glitch_crackle_and_shimmer(value0) {
			this.value0 = value0;
		}
		DE$primeThe_possibility_to_glitch_crackle_and_shimmer.create = function (
			value0
		) {
			return new DE$primeThe_possibility_to_glitch_crackle_and_shimmer(value0);
		};
		return DE$primeThe_possibility_to_glitch_crackle_and_shimmer;
	})();
	var DE$primeThe_possibility_to_shape_it_with_a_gesture = (function () {
		function DE$primeThe_possibility_to_shape_it_with_a_gesture(value0) {
			this.value0 = value0;
		}
		DE$primeThe_possibility_to_shape_it_with_a_gesture.create = function (
			value0
		) {
			return new DE$primeThe_possibility_to_shape_it_with_a_gesture(value0);
		};
		return DE$primeThe_possibility_to_shape_it_with_a_gesture;
	})();
	var DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory =
		(function () {
			function DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory(
				value0
			) {
				this.value0 = value0;
			}
			DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory.create =
				function (value0) {
					return new DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory(
						value0
					);
				};
			return DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory;
		})();
	var DE$primeAnd_the_possibility_to_bring_them_back_again = (function () {
		function DE$primeAnd_the_possibility_to_bring_them_back_again() {}
		DE$primeAnd_the_possibility_to_bring_them_back_again.value =
			new DE$primeAnd_the_possibility_to_bring_them_back_again();
		return DE$primeAnd_the_possibility_to_bring_them_back_again;
	})();
	var DE$primeMusic_must_explode_with_possibilities_2 = (function () {
		function DE$primeMusic_must_explode_with_possibilities_2() {}
		DE$primeMusic_must_explode_with_possibilities_2.value =
			new DE$primeMusic_must_explode_with_possibilities_2();
		return DE$primeMusic_must_explode_with_possibilities_2;
	})();
	var DE$primeAnd_that$primes_why_we$primere_building_wavr = (function () {
		function DE$primeAnd_that$primes_why_we$primere_building_wavr() {}
		DE$primeAnd_that$primes_why_we$primere_building_wavr.value =
			new DE$primeAnd_that$primes_why_we$primere_building_wavr();
		return DE$primeAnd_that$primes_why_we$primere_building_wavr;
	})();
	var readJSONTree = {
		readImpl: function (i) {
			return Control_Alt.alt(
				Control_Monad_Except_Trans.altExceptT(
					Data_List_Types.semigroupNonEmptyList
				)(Data_Identity.monadIdentity)
			)(
				Data_Functor.map(
					Control_Monad_Except_Trans.functorExceptT(
						Data_Identity.functorIdentity
					)
				)(DE$primeLeaf.create)(
					Simple_JSON.readImpl(
						Simple_JSON.readRecord()(
							Simple_JSON.readFieldsCons({
								reflectSymbol: function () {
									return 'left';
								},
							})(readJSONTree)(
								Simple_JSON.readFieldsCons({
									reflectSymbol: function () {
										return 'right';
									},
								})(readJSONTree)(Simple_JSON.readFieldsNil)()()
							)()()
						)
					)(i)
				)
			)(
				Control_Bind.bind(
					Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)
				)(Simple_JSON.readImpl(Simple_JSON.readString)(i))(function (e) {
					var $74 = e === 'end';
					if ($74) {
						return Control_Applicative.pure(
							Control_Monad_Except_Trans.applicativeExceptT(
								Data_Identity.monadIdentity
							)
						)(DE$primeEnd.value);
					}
					return Control_Monad_Error_Class.throwError(
						Control_Monad_Except_Trans.monadThrowExceptT(
							Data_Identity.monadIdentity
						)
					)(
						new Data_NonEmpty.NonEmpty(
							Foreign.ForeignError.create('Could not parse jsonTree: ' + e),
							Data_List_Types.Nil.value
						)
					);
				})
			);
		},
	};
	var readJSONH = {
		readImpl: WAGSI_Plumbing_JSON.readVariant("DE'Harmonize")(
			Data_Map_Internal.fromFoldable(Data_Ord.ordString)(
				Data_Foldable.foldableArray
			)([
				new Data_Tuple.Tuple("H'Add_one", H$primeAdd_one.value),
				new Data_Tuple.Tuple("H'Add_two", H$primeAdd_two.value),
				new Data_Tuple.Tuple("H'Add_three", H$primeAdd_three.value),
				new Data_Tuple.Tuple("H'Add_four", H$primeAdd_four.value),
			])
		),
	};
	var readJSONDC = {
		readImpl: WAGSI_Plumbing_JSON.readVariant("DE'New_dir_choice")(
			Data_Map_Internal.fromFoldable(Data_Ord.ordString)(
				Data_Foldable.foldableArray
			)([
				new Data_Tuple.Tuple("NDC'C1", NDC$primeC1.value),
				new Data_Tuple.Tuple("NDC'C2", NDC$primeC2.value),
				new Data_Tuple.Tuple("NDC'C3", NDC$primeC3.value),
			])
		),
	};
	var readJSONBC = {
		readImpl: WAGSI_Plumbing_JSON.readVariant("DE'New_dir_choice")(
			Data_Map_Internal.fromFoldable(Data_Ord.ordString)(
				Data_Foldable.foldableArray
			)([
				new Data_Tuple.Tuple("BC'C1", BC$primeC1.value),
				new Data_Tuple.Tuple("BC'C2", BC$primeC2.value),
				new Data_Tuple.Tuple("BC'C3", BC$primeC3.value),
				new Data_Tuple.Tuple("BC'C4", BC$primeC4.value),
				new Data_Tuple.Tuple("BC'C5", BC$primeC5.value),
				new Data_Tuple.Tuple("BC'C6", BC$primeC6.value),
				new Data_Tuple.Tuple("BC'C7", BC$primeC7.value),
			])
		),
	};
	var readJSONDE = {
		readImpl: function (i) {
			return Control_Bind.bind(
				Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)
			)(
				Simple_JSON.readImpl(
					Simple_JSON.readRecord()(
						Simple_JSON.readFieldsCons({
							reflectSymbol: function () {
								return 'tag';
							},
						})(Simple_JSON.readString)(Simple_JSON.readFieldsNil)()()
					)
				)(i)
			)(function (v) {
				if (v.tag === "DE'Music_was_never_meant_to_be_static_or_fixed") {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(
							Data_Identity.monadIdentity
						)
					)(DE$primeMusic_was_never_meant_to_be_static_or_fixed.value);
				}
				if (v.tag === "DE'Music_must_explode_with_possibilities") {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(
							Data_Identity.monadIdentity
						)
					)(DE$primeMusic_must_explode_with_possibilities.value);
				}
				if (v.tag === "DE'The_possibility_to_add_new_sounds") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_add_new_sounds.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(
										Simple_JSON.readRecord()(
											Simple_JSON.readFieldsCons({
												reflectSymbol: function () {
													return 'four';
												},
											})(Simple_JSON.readBoolean)(
												Simple_JSON.readFieldsCons({
													reflectSymbol: function () {
														return 'one';
													},
												})(Simple_JSON.readBoolean)(
													Simple_JSON.readFieldsCons({
														reflectSymbol: function () {
															return 'three';
														},
													})(Simple_JSON.readBoolean)(
														Simple_JSON.readFieldsCons({
															reflectSymbol: function () {
																return 'two';
															},
														})(Simple_JSON.readBoolean)(
															Simple_JSON.readFieldsNil
														)()()
													)()()
												)()()
											)()()
										)
									)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'The_possibility_to_take_a_sound_in_a_new_direction") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_take_a_sound_in_a_new_direction.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(
										Simple_JSON.readRecord()(
											Simple_JSON.readFieldsCons({
												reflectSymbol: function () {
													return 'check';
												},
											})(Simple_JSON.readBoolean)(
												Simple_JSON.readFieldsCons({
													reflectSymbol: function () {
														return 'choice';
													},
												})(readJSONDC)(
													Simple_JSON.readFieldsCons({
														reflectSymbol: function () {
															return 'slider';
														},
													})(Simple_JSON.readNumber)(
														Simple_JSON.readFieldsNil
													)()()
												)()()
											)()()
										)
									)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'The_possibility_to_change_a_beat") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_change_a_beat.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(readJSONBC)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'The_possibility_to_harmonize") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_harmonize.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(readJSONH)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'The_possibility_to_glitch_crackle_and_shimmer") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_glitch_crackle_and_shimmer.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(Simple_JSON.readBoolean)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'The_possibility_to_shape_it_with_a_gesture") {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(DE$primeThe_possibility_to_shape_it_with_a_gesture.create)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(
										Simple_JSON.readRecord()(
											Simple_JSON.readFieldsCons({
												reflectSymbol: function () {
													return 'x';
												},
											})(Simple_JSON.readNumber)(
												Simple_JSON.readFieldsCons({
													reflectSymbol: function () {
														return 'y';
													},
												})(Simple_JSON.readNumber)(
													Simple_JSON.readFieldsNil
												)()()
											)()()
										)
									)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (
					v.tag ===
					"DE'The_possibility_to_bring_listeners_to_uncharted_musical_territory"
				) {
					return Data_Functor.map(
						Control_Monad_Except_Trans.functorExceptT(
							Data_Identity.functorIdentity
						)
					)(
						DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory.create
					)(
						Data_Functor.map(
							Control_Monad_Except_Trans.functorExceptT(
								Data_Identity.functorIdentity
							)
						)(function (v1) {
							return v1.event;
						})(
							Simple_JSON.readImpl(
								Simple_JSON.readRecord()(
									Simple_JSON.readFieldsCons({
										reflectSymbol: function () {
											return 'event';
										},
									})(readJSONTree)(Simple_JSON.readFieldsNil)()()
								)
							)(i)
						)
					);
				}
				if (v.tag === "DE'And_the_possibility_to_bring_them_back_again") {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(
							Data_Identity.monadIdentity
						)
					)(DE$primeAnd_the_possibility_to_bring_them_back_again.value);
				}
				if (v.tag === "DE'Music_must_explode_with_possibilities_2") {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(
							Data_Identity.monadIdentity
						)
					)(DE$primeMusic_must_explode_with_possibilities_2.value);
				}
				if (v.tag === "DE'And_that's_why_we're_building_wavr") {
					return Control_Applicative.pure(
						Control_Monad_Except_Trans.applicativeExceptT(
							Data_Identity.monadIdentity
						)
					)(DE$primeAnd_that$primes_why_we$primere_building_wavr.value);
				}
				return Control_Monad_Error_Class.throwError(
					Control_Monad_Except_Trans.monadThrowExceptT(
						Data_Identity.monadIdentity
					)
				)(
					new Data_NonEmpty.NonEmpty(
						Foreign.ForeignError.create('Could not parse demo event: ' + v.tag),
						Data_List_Types.Nil.value
					)
				);
			});
		},
	};
	exports["DE'Music_was_never_meant_to_be_static_or_fixed"] =
		DE$primeMusic_was_never_meant_to_be_static_or_fixed;
	exports["DE'Music_must_explode_with_possibilities"] =
		DE$primeMusic_must_explode_with_possibilities;
	exports["DE'The_possibility_to_add_new_sounds"] =
		DE$primeThe_possibility_to_add_new_sounds;
	exports["DE'The_possibility_to_take_a_sound_in_a_new_direction"] =
		DE$primeThe_possibility_to_take_a_sound_in_a_new_direction;
	exports["DE'The_possibility_to_change_a_beat"] =
		DE$primeThe_possibility_to_change_a_beat;
	exports["DE'The_possibility_to_harmonize"] =
		DE$primeThe_possibility_to_harmonize;
	exports["DE'The_possibility_to_glitch_crackle_and_shimmer"] =
		DE$primeThe_possibility_to_glitch_crackle_and_shimmer;
	exports["DE'The_possibility_to_shape_it_with_a_gesture"] =
		DE$primeThe_possibility_to_shape_it_with_a_gesture;
	exports[
		"DE'The_possibility_to_bring_listeners_to_uncharted_musical_territory"
	] = DE$primeThe_possibility_to_bring_listeners_to_uncharted_musical_territory;
	exports["DE'And_the_possibility_to_bring_them_back_again"] =
		DE$primeAnd_the_possibility_to_bring_them_back_again;
	exports["DE'Music_must_explode_with_possibilities_2"] =
		DE$primeMusic_must_explode_with_possibilities_2;
	exports["DE'And_that's_why_we're_building_wavr"] =
		DE$primeAnd_that$primes_why_we$primere_building_wavr;
	exports['readJSONDE'] = readJSONDE;
})(PS);
(function (exports) {
	function cloneAudioBuffer(context, audioBuffer) {
		var channels = [],
			numChannels = audioBuffer.numberOfChannels;

		//clone the underlying Float32Arrays
		for (var i = 0; i < numChannels; i++) {
			channels[i] = new Float32Array(audioBuffer.getChannelData(i));
		}

		//create the new AudioBuffer (assuming AudioContext variable is in scope)
		var newBuffer = context.createBuffer(
			audioBuffer.numberOfChannels,
			audioBuffer.length,
			audioBuffer.sampleRate
		);

		//copy the cloned arrays to the new AudioBuffer
		for (var i = 0; i < numChannels; i++) {
			newBuffer.getChannelData(i).set(channels[i]);
		}

		return newBuffer;
	}

	exports.reverseAudioBuffer = function (context) {
		return function (audioBuffer) {
			return function () {
				var cloned = cloneAudioBuffer(context, audioBuffer);
				for (var i = 0; i < cloned.numberOfChannels; i++) {
					Array.prototype.reverse.call(cloned.getChannelData(i));
				}
				return cloned;
			};
		};
	};
})((PS['WAGSI.Plumbing.Download'] = PS['WAGSI.Plumbing.Download'] || {}));
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Types'] = $PS['WAGSI.Plumbing.Types'] || {};
	var exports = $PS['WAGSI.Plumbing.Types'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var Data_Vec = $PS['Data.Vec'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var NoteInTime = function (x) {
		return x;
	};
	var IBranching = (function () {
		function IBranching(value0) {
			this.value0 = value0;
		}
		IBranching.create = function (value0) {
			return new IBranching(value0);
		};
		return IBranching;
	})();
	var ISimultaneous = (function () {
		function ISimultaneous(value0) {
			this.value0 = value0;
		}
		ISimultaneous.create = function (value0) {
			return new ISimultaneous(value0);
		};
		return ISimultaneous;
	})();
	var ISequential = (function () {
		function ISequential(value0) {
			this.value0 = value0;
		}
		ISequential.create = function (value0) {
			return new ISequential(value0);
		};
		return ISequential;
	})();
	var IInternal = (function () {
		function IInternal(value0) {
			this.value0 = value0;
		}
		IInternal.create = function (value0) {
			return new IInternal(value0);
		};
		return IInternal;
	})();
	var ISingleNote = (function () {
		function ISingleNote(value0) {
			this.value0 = value0;
		}
		ISingleNote.create = function (value0) {
			return new ISingleNote(value0);
		};
		return ISingleNote;
	})();
	var Note = function (x) {
		return x;
	};
	var Voice = function (x) {
		return x;
	};
	var TheFuture = function (x) {
		return x;
	};
	var zipProps = function (dictIsSymbol) {
		return function (dictCons) {
			return {
				mappingWithIndex: function (v) {
					return function (prop) {
						return Record.get(dictIsSymbol)()(prop)(v);
					};
				},
			};
		};
	};
	var sampleEq = {
		eq: function (x) {
			return function (y) {
				return x === y;
			};
		},
	};
	var sampleOrd = {
		compare: function (x) {
			return function (y) {
				return Data_Ord.compare(Data_Ord.ordString)(x)(y);
			};
		},
		Eq0: function () {
			return sampleEq;
		},
	};
	var h2vNil = {
		"h2v'": function (v) {
			return function (v1) {
				return Data_Vec.empty;
			};
		},
		Nat0: function () {
			return Data_Typelevel_Num_Sets.natD0;
		},
	};
	var h2v$prime = function (dict) {
		return dict["h2v'"];
	};
	var h2vCons = function (dictIsSymbol) {
		return function (dictLacks) {
			return function (dictCons) {
				return function (dictHomogenousToVec) {
					return function (dictSucc) {
						return {
							"h2v'": function (v) {
								return function (r) {
									return Data_Vec.cons(dictSucc)(
										Record.get(dictIsSymbol)()(Type_Proxy['Proxy'].value)(r)
									)(
										h2v$prime(dictHomogenousToVec)(Type_Proxy['Proxy'].value)(r)
									);
								};
							},
							Nat0: dictSucc.Pos1().Nat0,
						};
					};
				};
			};
		};
	};
	var eqBufferUrl = {
		eq: function (x) {
			return function (y) {
				return x === y;
			};
		},
	};
	exports["h2v'"] = h2v$prime;
	exports['Voice'] = Voice;
	exports['TheFuture'] = TheFuture;
	exports['NoteInTime'] = NoteInTime;
	exports['IBranching'] = IBranching;
	exports['ISimultaneous'] = ISimultaneous;
	exports['ISequential'] = ISequential;
	exports['IInternal'] = IInternal;
	exports['ISingleNote'] = ISingleNote;
	exports['Note'] = Note;
	exports['eqBufferUrl'] = eqBufferUrl;
	exports['zipProps'] = zipProps;
	exports['h2vNil'] = h2vNil;
	exports['h2vCons'] = h2vCons;
	exports['sampleOrd'] = sampleOrd;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Download'] = $PS['WAGSI.Plumbing.Download'] || {};
	var exports = $PS['WAGSI.Plumbing.Download'];
	var $foreign = $PS['WAGSI.Plumbing.Download'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Monad_Error_Class = $PS['Control.Monad.Error.Class'];
	var Control_Parallel_Class = $PS['Control.Parallel.Class'];
	var Control_Promise = $PS['Control.Promise'];
	var Data_Array = $PS['Data.Array'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Either = $PS['Data.Either'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Int = $PS['Data.Int'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Show = $PS['Data.Show'];
	var Data_Traversable = $PS['Data.Traversable'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Effect_Aff = $PS['Effect.Aff'];
	var Effect_Class = $PS['Effect.Class'];
	var Effect_Class_Console = $PS['Effect.Class.Console'];
	var Effect_Exception = $PS['Effect.Exception'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Event = $PS['FRP.Event'];
	var Record = $PS['Record'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGSI_Plumbing_Types = $PS['WAGSI.Plumbing.Types'];
	var initialBuffers = function (dictLacks) {
		return function (bf) {
			return function (v) {
				return new Data_Tuple.Tuple(
					v.value0,
					Control_Bind.bind(Effect_Aff.bindAff)(v.value1)(function (v1) {
						return Control_Applicative.pure(Effect_Aff.applicativeAff)(
							new Data_Tuple.Tuple(
								v1.value0,
								Control_Apply.apply(
									FRP_Behavior.applyABehavior(FRP_Event.functorEvent)
								)(
									Data_Functor.map(
										FRP_Behavior.functorABehavior(FRP_Event.functorEvent)
									)(
										Record.insert({
											reflectSymbol: function () {
												return 'buffers';
											},
										})()()(Type_Proxy['Proxy'].value)
									)(bf)
								)(v1.value1)
							)
						);
					})
				);
			};
		};
	};
	var chunks = function (v) {
		return function (v1) {
			if (v1.length === 0) {
				return [];
			}
			return Data_Semigroup.append(Data_Semigroup.semigroupArray)(
				Control_Applicative.pure(Control_Applicative.applicativeArray)(
					Data_Array.take(v)(v1)
				)
			)(chunks(v)(Data_Array.drop(v)(v1)));
		};
	};
	var backoff = function (aff) {
		var go = function (n) {
			if (n >= 3) {
				return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(
					Effect_Exception.error('Maximum download tries exceeded')
				);
			}
			if (Data_Boolean.otherwise) {
				return Control_Bind.bind(Effect_Aff.bindAff)(
					Control_Monad_Error_Class['try'](Effect_Aff.monadErrorAff)(aff)
				)(function (v) {
					if (v instanceof Data_Either.Left) {
						return Control_Apply.applySecond(Effect_Aff.applyAff)(
							Control_Apply.applySecond(Effect_Aff.applyAff)(
								Effect_Class_Console.error(Effect_Aff.monadEffectAff)(
									Data_Show.show(Effect_Exception.showError)(v.value0)
								)
							)(Effect_Aff.delay(Data_Int.toNumber((n + 1) | 0) * 1000.0))
						)(go((n + 1) | 0));
					}
					if (v instanceof Data_Either.Right) {
						return Control_Applicative.pure(Effect_Aff.applicativeAff)(
							v.value0
						);
					}
					throw new Error(
						'Failed pattern match at WAGSI.Plumbing.Download (line 80, column 31 - line 82, column 30): ' +
							[v.constructor.name]
					);
				});
			}
			throw new Error(
				'Failed pattern match at WAGSI.Plumbing.Download (line 78, column 3 - line 82, column 30): ' +
					[n.constructor.name]
			);
		};
		return go(0);
	};
	var downloadSilence = function (dictLacks) {
		return function (v) {
			var b = backoff(
				Control_Promise.toAffE(
					WAGS_Interpret.decodeAudioDataFromUri(v.value0)(
						'https://freesound.org/data/previews/459/459659_4766646-lq.mp3'
					)
				)
			);
			return new Data_Tuple.Tuple(
				v.value0,
				Control_Bind.bind(Effect_Aff.bindAff)(v.value1)(function (v1) {
					return Control_Bind.bind(Effect_Aff.bindAff)(b)(function (b$prime) {
						return Control_Applicative.pure(Effect_Aff.applicativeAff)(
							new Data_Tuple.Tuple(
								v1.value0,
								Data_Functor.map(
									FRP_Behavior.functorABehavior(FRP_Event.functorEvent)
								)(
									Record.insert({
										reflectSymbol: function () {
											return 'silence';
										},
									})()()(Type_Proxy['Proxy'].value)(b$prime)
								)(v1.value1)
							)
						);
					});
				})
			);
		};
	};
	var mapped = function (audioCtx) {
		return function (v) {
			return backoff(
				Control_Bind.bind(Effect_Aff.bindAff)(
					Control_Promise.toAffE(
						WAGS_Interpret.decodeAudioDataFromUri(audioCtx)(v)
					)
				)(function (forward) {
					return Control_Bind.bind(Effect_Aff.bindAff)(
						Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
							$foreign.reverseAudioBuffer(audioCtx)(forward)
						)
					)(function (backwards) {
						return Control_Applicative.pure(Effect_Aff.applicativeAff)({
							url: v,
							buffer: {
								forward: forward,
								backwards: backwards,
							},
						});
					});
				})
			);
		};
	};
	var getBuffersUsingCache = function (nameToUrl) {
		return function (audioCtx) {
			return function (alreadyDownloaded) {
				var traversed = Data_Traversable.traverse(
					Data_Traversable.traversableArray
				)(Effect_Aff.applicativeParAff)(function (v) {
					return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(
						backoff(
							Data_Functor.map(Effect_Aff.functorAff)(
								Data_Tuple.Tuple.create(v.value0)
							)(mapped(audioCtx)(v.value1))
						)
					);
				});
				var toDownload = Data_Map_Internal.mapMaybeWithKey(
					WAGSI_Plumbing_Types.sampleOrd
				)(function (k) {
					return function (v) {
						var v1 = Data_Map_Internal.lookup(WAGSI_Plumbing_Types.sampleOrd)(
							k
						)(alreadyDownloaded);
						if (v1 instanceof Data_Maybe.Nothing) {
							return new Data_Maybe.Just(v);
						}
						if (v1 instanceof Data_Maybe.Just) {
							var $47 = Data_Eq.eq(WAGSI_Plumbing_Types.eqBufferUrl)(
								v1.value0.url
							)(v);
							if ($47) {
								return Data_Maybe.Nothing.value;
							}
							return new Data_Maybe.Just(v);
						}
						throw new Error(
							'Failed pattern match at WAGSI.Plumbing.Download (line 64, column 56 - line 66, column 57): ' +
								[v1.constructor.name]
						);
					};
				})(nameToUrl);
				var toDownloadArr = Data_Map_Internal.toUnfoldable(
					Data_Unfoldable.unfoldableArray
				)(toDownload);
				var newBuffers = Data_Functor.map(Effect_Aff.functorAff)(
					(function () {
						var $50 = Data_Map_Internal.fromFoldable(
							WAGSI_Plumbing_Types.sampleOrd
						)(Data_Foldable.foldableArray);
						var $51 = Control_Bind.join(Control_Bind.bindArray);
						return function ($52) {
							return $50($51($52));
						};
					})()
				)(
					Data_Traversable.traverse(Data_Traversable.traversableArray)(
						Effect_Aff.applicativeAff
					)(
						(function () {
							var $53 = Control_Parallel_Class.sequential(
								Effect_Aff.parallelAff
							);
							return function ($54) {
								return $53(traversed($54));
							};
						})()
					)(chunks(100)(toDownloadArr))
				);
				return Control_Bind.bind(Effect_Aff.bindAff)(
					Control_Apply.apply(Effect_Aff.applyAff)(
						Data_Functor.map(Effect_Aff.functorAff)(
							Data_Map_Internal.union(WAGSI_Plumbing_Types.sampleOrd)
						)(newBuffers)
					)(
						Control_Applicative.pure(Effect_Aff.applicativeAff)(
							alreadyDownloaded
						)
					)
				)(function (res) {
					return Control_Applicative.pure(Effect_Aff.applicativeAff)(res);
				});
			};
		};
	};
	exports['getBuffersUsingCache'] = getBuffersUsingCache;
	exports['downloadSilence'] = downloadSilence;
	exports['initialBuffers'] = initialBuffers;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.FX'] = $PS['WAGSI.Plumbing.FX'] || {};
	var exports = $PS['WAGSI.Plumbing.FX'];
	var Data_Typelevel_Num_Ops = $PS['Data.Typelevel.Num.Ops'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var Data_Vec = $PS['Data.Vec'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_ConstructEdges = $PS['WAGS.ConstructEdges'];
	var WAGS_Create = $PS['WAGS.Create'];
	var WAGS_Create_Optionals = $PS['WAGS.Create.Optionals'];
	var WAGS_Tumult_Make = $PS['WAGS.Tumult.Make'];
	var hello = WAGS_Create_Optionals.input({
		reflectSymbol: function () {
			return 'voice';
		},
	})(Type_Proxy['Proxy'].value);
	var goodbye = function (v) {
		return {
			output: v,
		};
	};
	var fx = function (dictRowToList) {
		return function (dictCreate) {
			return function (dictSubgraphIsRenderable) {
				return function (dictNodesCanBeTumultuous) {
					return function (scene) {
						return WAGS_Tumult_Make.tumultuously(
							Data_Typelevel_Num_Sets.posD1
						)()(dictCreate)()()(
							Data_Vec.cons(
								Data_Typelevel_Num_Ops.typelevelSucc(
									Data_Typelevel_Num_Sets.posD1
								)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(
									Data_Typelevel_Num_Ops.divMod10D1D0
								)
							)(scene)(Data_Vec.empty)
						);
					};
				};
			};
		};
	};
	var calm = fx()(
		WAGS_Create.createAll(
			WAGS_Create.createInternalAll()(
				WAGS_Create.createStepRLCons({
					reflectSymbol: function () {
						return 'output';
					},
				})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
					WAGS_Create.createInput({
						reflectSymbol: function () {
							return 'output';
						},
					})({
						reflectSymbol: function () {
							return 'voice';
						},
					})()()
				)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil)
			)(
				WAGS_Create.connectAfterCreateCons()()()()()()(
					WAGS_Create.connectEdgesToNodeNil
				)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil)
			)
		)
	)()()(goodbye(hello));
	exports['calm'] = calm;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Samples'] = $PS['WAGSI.Plumbing.Samples'] || {};
	var exports = $PS['WAGSI.Plumbing.Samples'];
	var Data_Either = $PS['Data.Either'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Foreign_Object = $PS['Foreign.Object'];
	var Unsafe_Coerce = $PS['Unsafe.Coerce'];
	var WAGSI_Plumbing_Types = $PS['WAGSI.Plumbing.Types'];
	var yeah_9__Sample = 'yeah:9';
	var yeah_8__Sample = 'yeah:8';
	var yeah_7__Sample = 'yeah:7';
	var yeah_6__Sample = 'yeah:6';
	var yeah_5__Sample = 'yeah:5';
	var yeah_4__Sample = 'yeah:4';
	var yeah_3__Sample = 'yeah:3';
	var yeah_30__Sample = 'yeah:30';
	var yeah_2__Sample = 'yeah:2';
	var yeah_29__Sample = 'yeah:29';
	var yeah_28__Sample = 'yeah:28';
	var yeah_27__Sample = 'yeah:27';
	var yeah_26__Sample = 'yeah:26';
	var yeah_25__Sample = 'yeah:25';
	var yeah_24__Sample = 'yeah:24';
	var yeah_23__Sample = 'yeah:23';
	var yeah_22__Sample = 'yeah:22';
	var yeah_21__Sample = 'yeah:21';
	var yeah_20__Sample = 'yeah:20';
	var yeah_1__Sample = 'yeah:1';
	var yeah_19__Sample = 'yeah:19';
	var yeah_18__Sample = 'yeah:18';
	var yeah_17__Sample = 'yeah:17';
	var yeah_16__Sample = 'yeah:16';
	var yeah_15__Sample = 'yeah:15';
	var yeah_14__Sample = 'yeah:14';
	var yeah_13__Sample = 'yeah:13';
	var yeah_12__Sample = 'yeah:12';
	var yeah_11__Sample = 'yeah:11';
	var yeah_10__Sample = 'yeah:10';
	var yeah_0__Sample = 'yeah:0';
	var xmas_0__Sample = 'xmas:0';
	var x_909_0__Sample = 'x_909:0';
	var x_808sd_9__Sample = 'x_808sd:9';
	var x_808sd_8__Sample = 'x_808sd:8';
	var x_808sd_7__Sample = 'x_808sd:7';
	var x_808sd_6__Sample = 'x_808sd:6';
	var x_808sd_5__Sample = 'x_808sd:5';
	var x_808sd_4__Sample = 'x_808sd:4';
	var x_808sd_3__Sample = 'x_808sd:3';
	var x_808sd_2__Sample = 'x_808sd:2';
	var x_808sd_24__Sample = 'x_808sd:24';
	var x_808sd_23__Sample = 'x_808sd:23';
	var x_808sd_22__Sample = 'x_808sd:22';
	var x_808sd_21__Sample = 'x_808sd:21';
	var x_808sd_20__Sample = 'x_808sd:20';
	var x_808sd_1__Sample = 'x_808sd:1';
	var x_808sd_19__Sample = 'x_808sd:19';
	var x_808sd_18__Sample = 'x_808sd:18';
	var x_808sd_17__Sample = 'x_808sd:17';
	var x_808sd_16__Sample = 'x_808sd:16';
	var x_808sd_15__Sample = 'x_808sd:15';
	var x_808sd_14__Sample = 'x_808sd:14';
	var x_808sd_13__Sample = 'x_808sd:13';
	var x_808sd_12__Sample = 'x_808sd:12';
	var x_808sd_11__Sample = 'x_808sd:11';
	var x_808sd_10__Sample = 'x_808sd:10';
	var x_808sd_0__Sample = 'x_808sd:0';
	var x_808oh_4__Sample = 'x_808oh:4';
	var x_808oh_3__Sample = 'x_808oh:3';
	var x_808oh_2__Sample = 'x_808oh:2';
	var x_808oh_1__Sample = 'x_808oh:1';
	var x_808oh_0__Sample = 'x_808oh:0';
	var x_808mt_4__Sample = 'x_808mt:4';
	var x_808mt_3__Sample = 'x_808mt:3';
	var x_808mt_2__Sample = 'x_808mt:2';
	var x_808mt_1__Sample = 'x_808mt:1';
	var x_808mt_0__Sample = 'x_808mt:0';
	var x_808mc_4__Sample = 'x_808mc:4';
	var x_808mc_3__Sample = 'x_808mc:3';
	var x_808mc_2__Sample = 'x_808mc:2';
	var x_808mc_1__Sample = 'x_808mc:1';
	var x_808mc_0__Sample = 'x_808mc:0';
	var x_808lt_4__Sample = 'x_808lt:4';
	var x_808lt_3__Sample = 'x_808lt:3';
	var x_808lt_2__Sample = 'x_808lt:2';
	var x_808lt_1__Sample = 'x_808lt:1';
	var x_808lt_0__Sample = 'x_808lt:0';
	var x_808lc_4__Sample = 'x_808lc:4';
	var x_808lc_3__Sample = 'x_808lc:3';
	var x_808lc_2__Sample = 'x_808lc:2';
	var x_808lc_1__Sample = 'x_808lc:1';
	var x_808lc_0__Sample = 'x_808lc:0';
	var x_808ht_4__Sample = 'x_808ht:4';
	var x_808ht_3__Sample = 'x_808ht:3';
	var x_808ht_2__Sample = 'x_808ht:2';
	var x_808ht_1__Sample = 'x_808ht:1';
	var x_808ht_0__Sample = 'x_808ht:0';
	var x_808hc_4__Sample = 'x_808hc:4';
	var x_808hc_3__Sample = 'x_808hc:3';
	var x_808hc_2__Sample = 'x_808hc:2';
	var x_808hc_1__Sample = 'x_808hc:1';
	var x_808hc_0__Sample = 'x_808hc:0';
	var x_808cy_9__Sample = 'x_808cy:9';
	var x_808cy_8__Sample = 'x_808cy:8';
	var x_808cy_7__Sample = 'x_808cy:7';
	var x_808cy_6__Sample = 'x_808cy:6';
	var x_808cy_5__Sample = 'x_808cy:5';
	var x_808cy_4__Sample = 'x_808cy:4';
	var x_808cy_3__Sample = 'x_808cy:3';
	var x_808cy_2__Sample = 'x_808cy:2';
	var x_808cy_24__Sample = 'x_808cy:24';
	var x_808cy_23__Sample = 'x_808cy:23';
	var x_808cy_22__Sample = 'x_808cy:22';
	var x_808cy_21__Sample = 'x_808cy:21';
	var x_808cy_20__Sample = 'x_808cy:20';
	var x_808cy_1__Sample = 'x_808cy:1';
	var x_808cy_19__Sample = 'x_808cy:19';
	var x_808cy_18__Sample = 'x_808cy:18';
	var x_808cy_17__Sample = 'x_808cy:17';
	var x_808cy_16__Sample = 'x_808cy:16';
	var x_808cy_15__Sample = 'x_808cy:15';
	var x_808cy_14__Sample = 'x_808cy:14';
	var x_808cy_13__Sample = 'x_808cy:13';
	var x_808cy_12__Sample = 'x_808cy:12';
	var x_808cy_11__Sample = 'x_808cy:11';
	var x_808cy_10__Sample = 'x_808cy:10';
	var x_808cy_0__Sample = 'x_808cy:0';
	var x_808bd_9__Sample = 'x_808bd:9';
	var x_808bd_8__Sample = 'x_808bd:8';
	var x_808bd_7__Sample = 'x_808bd:7';
	var x_808bd_6__Sample = 'x_808bd:6';
	var x_808bd_5__Sample = 'x_808bd:5';
	var x_808bd_4__Sample = 'x_808bd:4';
	var x_808bd_3__Sample = 'x_808bd:3';
	var x_808bd_2__Sample = 'x_808bd:2';
	var x_808bd_24__Sample = 'x_808bd:24';
	var x_808bd_23__Sample = 'x_808bd:23';
	var x_808bd_22__Sample = 'x_808bd:22';
	var x_808bd_21__Sample = 'x_808bd:21';
	var x_808bd_20__Sample = 'x_808bd:20';
	var x_808bd_1__Sample = 'x_808bd:1';
	var x_808bd_19__Sample = 'x_808bd:19';
	var x_808bd_18__Sample = 'x_808bd:18';
	var x_808bd_17__Sample = 'x_808bd:17';
	var x_808bd_16__Sample = 'x_808bd:16';
	var x_808bd_15__Sample = 'x_808bd:15';
	var x_808bd_14__Sample = 'x_808bd:14';
	var x_808bd_13__Sample = 'x_808bd:13';
	var x_808bd_12__Sample = 'x_808bd:12';
	var x_808bd_11__Sample = 'x_808bd:11';
	var x_808bd_10__Sample = 'x_808bd:10';
	var x_808bd_0__Sample = 'x_808bd:0';
	var x_808_5__Sample = 'x_808:5';
	var x_808_4__Sample = 'x_808:4';
	var x_808_3__Sample = 'x_808:3';
	var x_808_2__Sample = 'x_808:2';
	var x_808_1__Sample = 'x_808:1';
	var x_808_0__Sample = 'x_808:0';
	var world_2__Sample = 'world:2';
	var world_1__Sample = 'world:1';
	var world_0__Sample = 'world:0';
	var wobble_0__Sample = 'wobble:0';
	var wind_9__Sample = 'wind:9';
	var wind_8__Sample = 'wind:8';
	var wind_7__Sample = 'wind:7';
	var wind_6__Sample = 'wind:6';
	var wind_5__Sample = 'wind:5';
	var wind_4__Sample = 'wind:4';
	var wind_3__Sample = 'wind:3';
	var wind_2__Sample = 'wind:2';
	var wind_1__Sample = 'wind:1';
	var wind_0__Sample = 'wind:0';
	var voodoo_4__Sample = 'voodoo:4';
	var voodoo_3__Sample = 'voodoo:3';
	var voodoo_2__Sample = 'voodoo:2';
	var voodoo_1__Sample = 'voodoo:1';
	var voodoo_0__Sample = 'voodoo:0';
	var v_5__Sample = 'v:5';
	var v_4__Sample = 'v:4';
	var v_3__Sample = 'v:3';
	var v_2__Sample = 'v:2';
	var v_1__Sample = 'v:1';
	var v_0__Sample = 'v:0';
	var uxay_2__Sample = 'uxay:2';
	var uxay_1__Sample = 'uxay:1';
	var uxay_0__Sample = 'uxay:0';
	var urls = {
		intentionalSilenceForInternalUseOnly:
			'https://freesound.org/data/previews/459/459659_4766646-lq.mp3',
		'kicklinn:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kicklinn/Linn_Kick_1.ogg',
		'msg:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/000_msg0.ogg',
		'msg:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/001_msg1.ogg',
		'msg:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/002_msg2.ogg',
		'msg:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/003_msg3.ogg',
		'msg:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/004_msg4.ogg',
		'msg:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/005_msg5.ogg',
		'msg:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/006_msg6.ogg',
		'msg:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/007_msg7.ogg',
		'msg:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/msg/008_msg8.ogg',
		'gabbalouder:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbalouder/000_0.ogg',
		'gabbalouder:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbalouder/001_1.ogg',
		'gabbalouder:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbalouder/002_2.ogg',
		'gabbalouder:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbalouder/003_3.ogg',
		'kurt:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/000_kurt01.ogg',
		'kurt:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/001_kurt02.ogg',
		'kurt:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/002_kurt03.ogg',
		'kurt:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/003_kurt04.ogg',
		'kurt:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/004_kurt05.ogg',
		'kurt:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/005_kurt06.ogg',
		'kurt:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/kurt/006_kurt07.ogg',
		'bassdm:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/001_BT0A0A7.ogg',
		'bassdm:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/002_BT0A0D0.ogg',
		'bassdm:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/003_BT0A0D3.ogg',
		'bassdm:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/004_BT0A0DA.ogg',
		'bassdm:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/005_BT0AAD0.ogg',
		'bassdm:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/006_BT0AADA.ogg',
		'bassdm:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/007_BT3A0D0.ogg',
		'bassdm:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/008_BT3A0D3.ogg',
		'bassdm:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/009_BT3A0D7.ogg',
		'bassdm:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/010_BT3A0DA.ogg',
		'bassdm:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/011_BT3AAD0.ogg',
		'bassdm:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/012_BT3AADA.ogg',
		'bassdm:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/013_BT7A0D0.ogg',
		'bassdm:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/014_BT7A0D3.ogg',
		'bassdm:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/015_BT7A0D7.ogg',
		'bassdm:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/016_BT7A0DA.ogg',
		'bassdm:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/017_BT7AAD0.ogg',
		'bassdm:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/018_BT7AADA.ogg',
		'bassdm:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/019_BTAA0D0.ogg',
		'bassdm:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/020_BTAA0D3.ogg',
		'bassdm:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/021_BTAA0D7.ogg',
		'bassdm:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/022_BTAA0DA.ogg',
		'bassdm:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/023_BTAAAD0.ogg',
		'bassdm:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassdm/024_BTAAADA.ogg',
		'tabla2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23645_loofa_A_001.ogg',
		'tabla2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23646_loofa_A_002.ogg',
		'tabla2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23647_loofa_A_003.ogg',
		'tabla2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23648_loofa_A_004.ogg',
		'tabla2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23649_loofa_A_005.ogg',
		'tabla2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23650_loofa_A_006.ogg',
		'tabla2:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23651_loofa_A_007.ogg',
		'tabla2:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23652_loofa_A_008.ogg',
		'tabla2:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23653_loofa_A_009.ogg',
		'tabla2:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23654_loofa_A_010.ogg',
		'tabla2:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23655_loofa_A_011.ogg',
		'tabla2:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23656_loofa_A_012.ogg',
		'tabla2:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23657_loofa_A_013.ogg',
		'tabla2:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23658_loofa_A_014.ogg',
		'tabla2:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23659_loofa_A_015.ogg',
		'tabla2:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23660_loofa_A_016.ogg',
		'tabla2:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23661_loofa_A_017.ogg',
		'tabla2:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23662_loofa_A_018.ogg',
		'tabla2:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23663_loofa_A_019.ogg',
		'tabla2:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23664_loofa_A_020.ogg',
		'tabla2:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23665_loofa_A_021.ogg',
		'tabla2:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23666_loofa_A_022.ogg',
		'tabla2:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23667_loofa_A_023.ogg',
		'tabla2:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23668_loofa_A_024.ogg',
		'tabla2:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23669_loofa_A_025.ogg',
		'tabla2:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23670_loofa_A_026.ogg',
		'tabla2:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23671_loofa_A_027.ogg',
		'tabla2:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23672_loofa_A_028.ogg',
		'tabla2:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23673_loofa_bahia001.ogg',
		'tabla2:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23674_loofa_bahia002.ogg',
		'tabla2:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23675_loofa_bahia003.ogg',
		'tabla2:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23676_loofa_bahia004.ogg',
		'tabla2:32':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23677_loofa_bahia005.ogg',
		'tabla2:33':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23678_loofa_bahia006.ogg',
		'tabla2:34':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23679_loofa_bahia007.ogg',
		'tabla2:35':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23680_loofa_bahia008.ogg',
		'tabla2:36':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23681_loofa_bahia009.ogg',
		'tabla2:37':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23682_loofa_bahia010.ogg',
		'tabla2:38':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23683_loofa_bahia011.ogg',
		'tabla2:39':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23684_loofa_bahia012.ogg',
		'tabla2:40':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23685_loofa_bahia013.ogg',
		'tabla2:41':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23686_loofa_bahia014.ogg',
		'tabla2:42':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23687_loofa_bahia015.ogg',
		'tabla2:43':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23688_loofa_bahia016.ogg',
		'tabla2:44':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23689_loofa_bahia017.ogg',
		'tabla2:45':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla2/23690_loofa_bahia018.ogg',
		'chin:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/chin/000_tik1.ogg',
		'chin:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/chin/001_tik2.ogg',
		'chin:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/chin/002_tik3.ogg',
		'chin:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/chin/003_tik4.ogg',
		'mp3:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mp3/000_mp30.ogg',
		'mp3:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mp3/001_mp31.ogg',
		'mp3:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mp3/002_mp32.ogg',
		'mp3:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mp3/003_mp33.ogg',
		'tablex:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tablex/0.ogg',
		'tablex:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tablex/1.ogg',
		'tablex:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tablex/fuckable.ogg',
		'sf:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/000_bass.ogg',
		'sf:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/001_1.ogg',
		'sf:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/002_10.ogg',
		'sf:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/003_11.ogg',
		'sf:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/004_12.ogg',
		'sf:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/005_13.ogg',
		'sf:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/006_14.ogg',
		'sf:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/007_15.ogg',
		'sf:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/008_16.ogg',
		'sf:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/009_17.ogg',
		'sf:10': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/010_2.ogg',
		'sf:11': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/011_3.ogg',
		'sf:12': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/012_4.ogg',
		'sf:13': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/013_5.ogg',
		'sf:14': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/014_6.ogg',
		'sf:15': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/015_7.ogg',
		'sf:16': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/016_8.ogg',
		'sf:17': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sf/017_9.ogg',
		'speakspell:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/000_1.ogg',
		'speakspell:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/001_10.ogg',
		'speakspell:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/002_11.ogg',
		'speakspell:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/003_12.ogg',
		'speakspell:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/004_2.ogg',
		'speakspell:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/005_3.ogg',
		'speakspell:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/006_4.ogg',
		'speakspell:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/007_5.ogg',
		'speakspell:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/008_6.ogg',
		'speakspell:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/009_7.ogg',
		'speakspell:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/010_8.ogg',
		'speakspell:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speakspell/011_9.ogg',
		'cc:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHD0.ogg',
		'cc:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHD2.ogg',
		'cc:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHD4.ogg',
		'cc:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHD6.ogg',
		'cc:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHD8.ogg',
		'cc:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cc/CSHDA.ogg',
		'gabbaloud:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbaloud/000_0.ogg',
		'gabbaloud:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbaloud/001_1.ogg',
		'gabbaloud:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbaloud/002_2.ogg',
		'gabbaloud:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabbaloud/003_3.ogg',
		'ades2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/000_01.ogg',
		'ades2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/001_02.ogg',
		'ades2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/002_03.ogg',
		'ades2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/003_04.ogg',
		'ades2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/004_05.ogg',
		'ades2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/005_06.ogg',
		'ades2:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/006_07.ogg',
		'ades2:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/007_08.ogg',
		'ades2:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades2/008_09.ogg',
		'space:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/000_0.ogg',
		'space:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/001_1.ogg',
		'space:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/002_11.ogg',
		'space:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/003_12.ogg',
		'space:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/004_13.ogg',
		'space:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/005_14.ogg',
		'space:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/006_15.ogg',
		'space:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/007_16.ogg',
		'space:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/008_17.ogg',
		'space:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/009_18.ogg',
		'space:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/010_2.ogg',
		'space:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/011_3.ogg',
		'space:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/012_4.ogg',
		'space:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/013_5.ogg',
		'space:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/014_6.ogg',
		'space:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/015_7.ogg',
		'space:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/016_8.ogg',
		'space:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/space/017_9.ogg',
		'battles:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/battles/000_explo1.ogg',
		'battles:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/battles/001_explo2.ogg',
		'voodoo:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/voodoo/000_VoodooBass.ogg',
		'voodoo:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/voodoo/001_VoodooHihat.ogg',
		'voodoo:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/voodoo/002_VoodooRim.ogg',
		'voodoo:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/voodoo/003_VoodooSnare.ogg',
		'voodoo:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/voodoo/004_VoodooTom.ogg',
		'ravemono:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ravemono/Babylon.ogg',
		'ravemono:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ravemono/prodigyloop.ogg',
		'psr:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/000_01.ogg',
		'psr:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/001_02.ogg',
		'psr:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/002_03.ogg',
		'psr:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/003_04.ogg',
		'psr:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/004_05.ogg',
		'psr:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/005_06.ogg',
		'psr:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/006_07.ogg',
		'psr:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/007_08.ogg',
		'psr:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/008_09.ogg',
		'psr:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/009_10.ogg',
		'psr:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/010_11.ogg',
		'psr:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/011_12.ogg',
		'psr:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/012_13.ogg',
		'psr:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/013_14.ogg',
		'psr:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/014_15.ogg',
		'psr:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/015_16.ogg',
		'psr:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/016_17.ogg',
		'psr:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/017_18.ogg',
		'psr:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/018_19.ogg',
		'psr:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/019_20.ogg',
		'psr:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/020_21.ogg',
		'psr:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/021_22.ogg',
		'psr:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/022_23.ogg',
		'psr:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/023_24.ogg',
		'psr:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/024_25.ogg',
		'psr:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/025_26.ogg',
		'psr:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/026_27.ogg',
		'psr:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/027_28.ogg',
		'psr:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/028_29.ogg',
		'psr:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/psr/029_30.ogg',
		'metal:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/000_0.ogg',
		'metal:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/001_1.ogg',
		'metal:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/002_2.ogg',
		'metal:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/003_3.ogg',
		'metal:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/004_4.ogg',
		'metal:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/005_5.ogg',
		'metal:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/006_6.ogg',
		'metal:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/007_7.ogg',
		'metal:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/008_8.ogg',
		'metal:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/metal/009_9.ogg',
		'hardcore:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/000_hcclosedhh.ogg',
		'hardcore:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/001_hchit1.ogg',
		'hardcore:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/002_hccrash.ogg',
		'hardcore:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/003_hchit2.ogg',
		'hardcore:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/004_hckick1.ogg',
		'hardcore:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/005_hckick2.ogg',
		'hardcore:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/006_hcopenhh.ogg',
		'hardcore:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/007_hcperc1.ogg',
		'hardcore:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/008_hcperc2.ogg',
		'hardcore:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/009_hcride.ogg',
		'hardcore:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/010_hcsnare1.ogg',
		'hardcore:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardcore/011_hcsnare2.ogg',
		'mouth:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/000_1.ogg',
		'mouth:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/001_10.ogg',
		'mouth:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/002_11.ogg',
		'mouth:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/003_12.ogg',
		'mouth:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/004_13.ogg',
		'mouth:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/005_14.ogg',
		'mouth:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/006_15.ogg',
		'mouth:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/007_2.ogg',
		'mouth:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/008_3.ogg',
		'mouth:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/009_4.ogg',
		'mouth:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/010_5.ogg',
		'mouth:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/011_6.ogg',
		'mouth:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/012_7.ogg',
		'mouth:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/013_8.ogg',
		'mouth:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mouth/014_9.ogg',
		'sugar:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sugar/000_bark.ogg',
		'sugar:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sugar/001_crab.ogg',
		'odx:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/000_Kick_1.ogg',
		'odx:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/001_DX_Snare_1.ogg',
		'odx:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/002_DXShaker.ogg',
		'odx:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/003_DXRimshot.ogg',
		'odx:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/004_DXRide.ogg',
		'odx:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/005_DX_Open_Hat.ogg',
		'odx:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/006_DX_Mid_Tom.ogg',
		'odx:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/007_DX_Med_Crash.ogg',
		'odx:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/008_DX_Low_Tom.ogg',
		'odx:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/009_DX_Lo_Crash.ogg',
		'odx:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/010_DX_Hi_Tom.ogg',
		'odx:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/011_DX_High_Crash.ogg',
		'odx:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/012_DX_Cl_Hat.ogg',
		'odx:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/013_DXClap.ogg',
		'odx:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/odx/014_DX_Ax_Hat.ogg',
		'x_808lc:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lc/LC00.ogg',
		'x_808lc:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lc/LC10.ogg',
		'x_808lc:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lc/LC25.ogg',
		'x_808lc:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lc/LC50.ogg',
		'x_808lc:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lc/LC75.ogg',
		'mt:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT0D0.ogg',
		'mt:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT0D3.ogg',
		'mt:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT0D7.ogg',
		'mt:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT0DA.ogg',
		'mt:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT3D0.ogg',
		'mt:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT3D3.ogg',
		'mt:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT3D7.ogg',
		'mt:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT3DA.ogg',
		'mt:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT7D0.ogg',
		'mt:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT7D3.ogg',
		'mt:10': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT7D7.ogg',
		'mt:11': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MT7DA.ogg',
		'mt:12': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MTAD0.ogg',
		'mt:13': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MTAD3.ogg',
		'mt:14': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MTAD7.ogg',
		'mt:15': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mt/MTADA.ogg',
		'drumtraks:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/000_DT_Cabasa.ogg',
		'drumtraks:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/001_DT_Claps.ogg',
		'drumtraks:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/002_DT_Cowbell.ogg',
		'drumtraks:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/003_DT_Crash.ogg',
		'drumtraks:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/004_DT_Hat_Closed.ogg',
		'drumtraks:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/005_DT_Hat_Open.ogg',
		'drumtraks:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/006_DT_Kick.ogg',
		'drumtraks:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/007_DT_Ride.ogg',
		'drumtraks:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/008_DT_Rimshot.ogg',
		'drumtraks:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/009_DT_Snare.ogg',
		'drumtraks:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/010_DT_Tambourine.ogg',
		'drumtraks:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/011_DT_Tom1.ogg',
		'drumtraks:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drumtraks/012_DT_Tom2.ogg',
		'print:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/000_0.ogg',
		'print:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/001_1.ogg',
		'print:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/002_10.ogg',
		'print:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/003_2.ogg',
		'print:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/004_3.ogg',
		'print:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/005_4.ogg',
		'print:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/006_5.ogg',
		'print:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/007_6.ogg',
		'print:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/008_7.ogg',
		'print:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/009_8.ogg',
		'print:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/print/010_9.ogg',
		'blip:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/blip/000_blipp01.ogg',
		'blip:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/blip/001_blipp02.ogg',
		'wobble:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wobble/000_0.ogg',
		'made:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/0.ogg',
		'made:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/1.ogg',
		'made:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/2.ogg',
		'made:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/3.ogg',
		'made:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/4.ogg',
		'made:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/5.ogg',
		'made:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made/6.ogg',
		'bass3:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83245__zgump__bass-0201.ogg',
		'bass3:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83246__zgump__bass-0202.ogg',
		'bass3:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83247__zgump__bass-0203.ogg',
		'bass3:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83248__zgump__bass-0204.ogg',
		'bass3:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83249__zgump__bass-0205.ogg',
		'bass3:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83250__zgump__bass-0206.ogg',
		'bass3:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83251__zgump__bass-0207.ogg',
		'bass3:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83252__zgump__bass-0208.ogg',
		'bass3:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/83253__zgump__bass-0209.ogg',
		'bass3:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/85056__zgump__reverse-bass-01.ogg',
		'bass3:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass3/85057__zgump__reverse-bass-02.ogg',
		'speechless:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/000_a.ogg',
		'speechless:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/001_pe.ogg',
		'speechless:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/002_pepepe.ogg',
		'speechless:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/003_pepepepepe.ogg',
		'speechless:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/004_pepper.ogg',
		'speechless:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/005_pepperpot.ogg',
		'speechless:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/006_pick.ogg',
		'speechless:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/007_pickle.ogg',
		'speechless:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/008_po.ogg',
		'speechless:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speechless/009_te.ogg',
		'sine:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/000_sine.ogg',
		'sine:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/001_sine2.ogg',
		'sine:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/002_sine3.ogg',
		'sine:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/003_sine4.ogg',
		'sine:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/004_sine5.ogg',
		'sine:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sine/005_sine6.ogg',
		'noise:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise/000_noise.ogg',
		'x_808lt:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lt/LT00.ogg',
		'x_808lt:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lt/LT10.ogg',
		'x_808lt:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lt/LT25.ogg',
		'x_808lt:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lt/LT50.ogg',
		'x_808lt:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808lt/LT75.ogg',
		'sd:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sd/rytm-00-hard.ogg',
		'sd:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sd/rytm-01-classic.ogg',
		'alphabet:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/a.ogg',
		'alphabet:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/b.ogg',
		'alphabet:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/c.ogg',
		'alphabet:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/d.ogg',
		'alphabet:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/e.ogg',
		'alphabet:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/f.ogg',
		'alphabet:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/g.ogg',
		'alphabet:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/h.ogg',
		'alphabet:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/i.ogg',
		'alphabet:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/j.ogg',
		'alphabet:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/k.ogg',
		'alphabet:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/l.ogg',
		'alphabet:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/m.ogg',
		'alphabet:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/n.ogg',
		'alphabet:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/o.ogg',
		'alphabet:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/p.ogg',
		'alphabet:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/q.ogg',
		'alphabet:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/r.ogg',
		'alphabet:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/s.ogg',
		'alphabet:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/t.ogg',
		'alphabet:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/u.ogg',
		'alphabet:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/v.ogg',
		'alphabet:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/w.ogg',
		'alphabet:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/x.ogg',
		'alphabet:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/y.ogg',
		'alphabet:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alphabet/z.ogg',
		'baa2:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/1.ogg',
		'baa2:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/2.ogg',
		'baa2:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/3.ogg',
		'baa2:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/4.ogg',
		'baa2:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/5.ogg',
		'baa2:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/6.ogg',
		'baa2:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa2/7.ogg',
		'tok:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tok/000_0.ogg',
		'tok:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tok/001_1.ogg',
		'tok:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tok/002_2.ogg',
		'tok:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tok/003_3.ogg',
		'ades3:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/01.ogg',
		'ades3:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/02.ogg',
		'ades3:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/03.ogg',
		'ades3:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/04.ogg',
		'ades3:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/05.ogg',
		'ades3:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/06.ogg',
		'ades3:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades3/07.ogg',
		'x_909:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/909/BT0A0A7.ogg',
		'sid:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/000_bas2.ogg',
		'sid:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/001_bas.ogg',
		'sid:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/002_basd.ogg',
		'sid:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/003_blipp01.ogg',
		'sid:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/004_blipp02.ogg',
		'sid:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/005_high.ogg',
		'sid:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/006_high2.ogg',
		'sid:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/007_hihat01.ogg',
		'sid:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/008_hihat02.ogg',
		'sid:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/009_lofidrums.ogg',
		'sid:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/010_sidsnares.ogg',
		'sid:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sid/011_tdrum.ogg',
		'jungbass:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/000_deeep_n_low.ogg',
		'jungbass:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/001_fat_808_sub.ogg',
		'jungbass:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/002_fukubass2.ogg',
		'jungbass:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/003_glide_up_down_sub.ogg',
		'jungbass:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/004_gliding_808_sub.ogg',
		'jungbass:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/005_jungasubdown.ogg',
		'jungbass:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/006_junglerevbass.ogg',
		'jungbass:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/007_junglesine.ogg',
		'jungbass:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/008_junglesine2.ogg',
		'jungbass:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/009_junglesine3.ogg',
		'jungbass:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/010_mega_jungasubdown.ogg',
		'jungbass:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/011_shiphorn_tekstep_bass.ogg',
		'jungbass:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/012_short.ogg',
		'jungbass:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/013_sub_to_open_wah.ogg',
		'jungbass:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/014_sustained_2_octave.ogg',
		'jungbass:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/015_sustained_3_octave.ogg',
		'jungbass:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/016_sustained_deep_low.ogg',
		'jungbass:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/017_sweep_me_low_bass.ogg',
		'jungbass:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/018_synthy_round.ogg',
		'jungbass:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungbass/019_thin_808_sub.ogg',
		'gabba:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabba/000_0.ogg',
		'gabba:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabba/001_1.ogg',
		'gabba:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabba/002_2.ogg',
		'gabba:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gabba/003_3.ogg',
		'crow:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/crow/000_crow.ogg',
		'crow:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/crow/001_crow2.ogg',
		'crow:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/crow/002_crow3.ogg',
		'crow:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/crow/003_crow4.ogg',
		'birds3:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/000_1.ogg',
		'birds3:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/001_10.ogg',
		'birds3:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/002_11.ogg',
		'birds3:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/003_12.ogg',
		'birds3:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/004_13.ogg',
		'birds3:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/005_14.ogg',
		'birds3:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/006_15.ogg',
		'birds3:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/007_16.ogg',
		'birds3:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/008_17.ogg',
		'birds3:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/009_18.ogg',
		'birds3:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/010_19.ogg',
		'birds3:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/011_2.ogg',
		'birds3:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/012_3.ogg',
		'birds3:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/013_4.ogg',
		'birds3:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/014_5.ogg',
		'birds3:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/015_6.ogg',
		'birds3:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/016_7.ogg',
		'birds3:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/017_8.ogg',
		'birds3:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds3/018_9.ogg',
		'auto:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/000_break-kick.ogg',
		'auto:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/001_break-ride.ogg',
		'auto:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/002_break-sd.ogg',
		'auto:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/003_cymrev.ogg',
		'auto:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/004_kick.ogg',
		'auto:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/005_kick-ambient.ogg',
		'auto:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/006_sd.ogg',
		'auto:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/007_sd-ambient.ogg',
		'auto:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/008_shake1.ogg',
		'auto:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/009_shake2.ogg',
		'auto:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/auto/010_shake3.ogg',
		'mute:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/000_FH_A-Sharp-2_SCF.ogg',
		'mute:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/001_FH_A3_SCF.ogg',
		'mute:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/002_FH_B3_SCF.ogg',
		'mute:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/003_FH_B4_SC.ogg',
		'mute:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/004_FH_B4_SCF.ogg',
		'mute:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/005_FH_C-Sharp-3_SC.ogg',
		'mute:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/006_FH_C-Sharp-3_SCF.ogg',
		'mute:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/007_FH_C-Sharp-5_SCF.ogg',
		'mute:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/008_FH_C4_SCF.ogg',
		'mute:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/009_FH_D-Sharp-4_SCF.ogg',
		'mute:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/010_FH_D-Sharp-5_SCF.ogg',
		'mute:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/011_FH_D3_SC.ogg',
		'mute:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/012_FH_D3_SCF.ogg',
		'mute:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/013_FH_E3_SC.ogg',
		'mute:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/014_FH_E3_SCF.ogg',
		'mute:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/015_FH_F-Sharp-4_SC.ogg',
		'mute:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/016_FH_F-Sharp-4_SCF.ogg',
		'mute:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/017_FH_F3_SC.ogg',
		'mute:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/018_FH_F3_SCF.ogg',
		'mute:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/019_FH_F5_SCF.ogg',
		'mute:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/020_FH_G-Sharp-2_SC.ogg',
		'mute:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/021_FH_G-Sharp-2_SCF.ogg',
		'mute:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/022_FH_G-Sharp-3_SC.ogg',
		'mute:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/023_FH_G-Sharp-3_SCF.ogg',
		'mute:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/024_FH_G-Sharp-4_SC.ogg',
		'mute:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/025_FH_G-Sharp-4_SCF.ogg',
		'mute:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/026_FH_G2_SC.ogg',
		'mute:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mute/027_FH_G2_SCF.ogg',
		'sheffield:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sheffield/jakeinsects.ogg',
		'casio:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/casio/high.ogg',
		'casio:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/casio/low.ogg',
		'casio:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/casio/noise.ogg',
		'sax:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/000_notes121a.ogg',
		'sax:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/001_notes121a2.ogg',
		'sax:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/002_notes121b.ogg',
		'sax:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/003_notes121bflat.ogg',
		'sax:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/004_notes121bflat2.ogg',
		'sax:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/005_notes121c.ogg',
		'sax:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/006_notes121c2.ogg',
		'sax:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/007_notes121csharp.ogg',
		'sax:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/008_notes121csharp2.ogg',
		'sax:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/009_notes121d.ogg',
		'sax:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/010_notes121e.ogg',
		'sax:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/011_notes121e2.ogg',
		'sax:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/012_notes121eflat.ogg',
		'sax:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/013_notes121eflat2.ogg',
		'sax:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/014_notes121f.ogg',
		'sax:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/015_notes121f2.ogg',
		'sax:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/016_notes121fsharp.ogg',
		'sax:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/017_notes121fsharp2.ogg',
		'sax:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/018_notes121g.ogg',
		'sax:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/019_notes121g2.ogg',
		'sax:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/020_notes121gsharp.ogg',
		'sax:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sax/021_notes121gsharp2.ogg',
		'circus:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/circus/000_bounce.ogg',
		'circus:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/circus/001_miss.ogg',
		'circus:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/circus/002_pop.ogg',
		'yeah:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/000_Sound0.ogg',
		'yeah:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/001_Sound10.ogg',
		'yeah:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/002_Sound11.ogg',
		'yeah:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/003_Sound13.ogg',
		'yeah:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/004_Sound14.ogg',
		'yeah:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/005_Sound15.ogg',
		'yeah:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/006_Sound17.ogg',
		'yeah:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/007_Sound18.ogg',
		'yeah:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/008_Sound19.ogg',
		'yeah:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/009_Sound20.ogg',
		'yeah:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/010_Sound21.ogg',
		'yeah:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/011_Sound22.ogg',
		'yeah:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/012_Sound23.ogg',
		'yeah:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/013_Sound24.ogg',
		'yeah:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/014_Sound25.ogg',
		'yeah:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/015_Sound26.ogg',
		'yeah:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/016_Sound27.ogg',
		'yeah:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/017_Sound28.ogg',
		'yeah:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/018_Sound29.ogg',
		'yeah:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/019_Sound3.ogg',
		'yeah:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/020_Sound32.ogg',
		'yeah:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/021_Sound33.ogg',
		'yeah:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/022_Sound34.ogg',
		'yeah:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/023_Sound35.ogg',
		'yeah:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/024_Sound36.ogg',
		'yeah:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/025_Sound4.ogg',
		'yeah:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/026_Sound5.ogg',
		'yeah:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/027_Sound6.ogg',
		'yeah:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/028_Sound7.ogg',
		'yeah:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/029_Sound8.ogg',
		'yeah:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/yeah/030_Sound9.ogg',
		'oc:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/oc/OPCL1.ogg',
		'oc:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/oc/OPCL2.ogg',
		'oc:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/oc/OPCL3.ogg',
		'oc:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/oc/OPCL4.ogg',
		'alex:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alex/000_drumx1.ogg',
		'alex:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/alex/001_drumx2.ogg',
		'can:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/000_1.ogg',
		'can:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/001_10.ogg',
		'can:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/002_11.ogg',
		'can:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/003_12.ogg',
		'can:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/004_13.ogg',
		'can:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/005_14.ogg',
		'can:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/006_2.ogg',
		'can:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/007_3.ogg',
		'can:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/008_4.ogg',
		'can:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/009_5.ogg',
		'can:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/010_6.ogg',
		'can:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/011_7.ogg',
		'can:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/012_8.ogg',
		'can:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/can/013_9.ogg',
		'jungle:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4closedhh.ogg',
		'jungle:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4crash.ogg',
		'jungle:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4hit1.ogg',
		'jungle:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4hit2.ogg',
		'jungle:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4hit3.ogg',
		'jungle:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4kick1.ogg',
		'jungle:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4kick2.ogg',
		'jungle:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4openhh.ogg',
		'jungle:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4perc1.ogg',
		'jungle:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4perc2.ogg',
		'jungle:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4ride.ogg',
		'jungle:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4snare1.ogg',
		'jungle:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jungle/jungle4snare2.ogg',
		'moog:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/000_Mighty_Moog_C2.ogg',
		'moog:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/001_Mighty_Moog_C3.ogg',
		'moog:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/002_Mighty_Moog_C4.ogg',
		'moog:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/003_Mighty_Moog_G1.ogg',
		'moog:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/004_Mighty_Moog_G2.ogg',
		'moog:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/005_Mighty_Moog_G3.ogg',
		'moog:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/moog/006_Mighty_Moog_G4.ogg',
		'h:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/000_0_da0.ogg',
		'h:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/001_0_da0-200-percent-_1000_0_R.ogg',
		'h:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/002_0_da0-50-percent-_1000_0_R.ogg',
		'h:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/003_1_da1.ogg',
		'h:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/004_2_da2.ogg',
		'h:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/005_3_tick.ogg',
		'h:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/h/006_4_tock.ogg',
		'wind:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/000_wind1.ogg',
		'wind:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/001_wind10.ogg',
		'wind:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/002_wind2.ogg',
		'wind:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/003_wind3.ogg',
		'wind:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/004_wind4.ogg',
		'wind:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/005_wind5.ogg',
		'wind:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/006_wind6.ogg',
		'wind:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/007_wind7.ogg',
		'wind:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/008_wind8.ogg',
		'wind:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/wind/009_wind9.ogg',
		'rs:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rs/rytm-rs.ogg',
		'em2:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/0.ogg',
		'em2:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/1.ogg',
		'em2:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/2.ogg',
		'em2:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/3.ogg',
		'em2:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/4.ogg',
		'em2:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/em2/5.ogg',
		'noise2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/000_0.ogg',
		'noise2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/001_1.ogg',
		'noise2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/002_2.ogg',
		'noise2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/003_3.ogg',
		'noise2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/004_4.ogg',
		'noise2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/005_5.ogg',
		'noise2:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/006_6.ogg',
		'noise2:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/noise2/007_7.ogg',
		'foo:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/000_samthfdbrk.ogg',
		'foo:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/001_frtwbrak.ogg',
		'foo:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/002_fullbrk.ogg',
		'foo:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/003_drydrmmr.ogg',
		'foo:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/004_brtalhat.ogg',
		'foo:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/005_nicedrop.ogg',
		'foo:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/006_fastfaze.ogg',
		'foo:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/007_lkfnkybr.ogg',
		'foo:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/008_clnkrbrk.ogg',
		'foo:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/009_hrdlvbrk.ogg',
		'foo:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/010_dngrsbrk.ogg',
		'foo:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/011_eyebreak.ogg',
		'foo:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/012_vctrybrk.ogg',
		'foo:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/013_mrestick.ogg',
		'foo:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/014_thumpnbr.ogg',
		'foo:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/015_sdstckbr.ogg',
		'foo:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/016_bllstmp.ogg',
		'foo:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/017_gattabrk.ogg',
		'foo:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/018_nlzdelit.ogg',
		'foo:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/019_crshstmp.ogg',
		'foo:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/020_fststick.ogg',
		'foo:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/021_sqezdbrk.ogg',
		'foo:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/022_cnfssbrk.ogg',
		'foo:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/023_btstmpbr.ogg',
		'foo:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/024_rlltnbrk.ogg',
		'foo:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/025_pssbreak.ogg',
		'foo:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/foo/026_vintage.ogg',
		'armora:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/000_beep.ogg',
		'armora:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/001_chopper.ogg',
		'armora:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/002_hiexp.ogg',
		'armora:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/003_jeepfire.ogg',
		'armora:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/004_loexp.ogg',
		'armora:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/005_tankeng.ogg',
		'armora:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/armora/006_tankfire.ogg',
		'bend:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bend/000_2.ogg',
		'bend:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bend/001_5.ogg',
		'bend:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bend/002_6.ogg',
		'bend:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bend/003_8.ogg',
		'newnotes:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/000_0.ogg',
		'newnotes:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/001_1.ogg',
		'newnotes:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/002_10.ogg',
		'newnotes:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/003_11.ogg',
		'newnotes:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/004_12.ogg',
		'newnotes:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/005_13.ogg',
		'newnotes:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/006_14.ogg',
		'newnotes:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/007_2.ogg',
		'newnotes:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/008_3.ogg',
		'newnotes:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/009_4.ogg',
		'newnotes:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/010_5.ogg',
		'newnotes:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/011_6.ogg',
		'newnotes:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/012_7.ogg',
		'newnotes:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/013_8.ogg',
		'newnotes:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/newnotes/014_9.ogg',
		'pebbles:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pebbles/90788__kmoon__pebbles-scrape-drag-foot.ogg',
		'mash2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash2/000_output.ogg',
		'mash2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash2/001_output2.ogg',
		'mash2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash2/002_output3.ogg',
		'mash2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash2/003_output4.ogg',
		'diphone2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/000_kd1_399.ogg',
		'diphone2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/001_kd1_400.ogg',
		'diphone2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/002_kd1_401.ogg',
		'diphone2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/003_kd1_402.ogg',
		'diphone2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/004_kd1_403.ogg',
		'diphone2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/005_kd1_404.ogg',
		'diphone2:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/006_kd1_405.ogg',
		'diphone2:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/007_kd1_406.ogg',
		'diphone2:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/008_kd3_010.ogg',
		'diphone2:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/009_kd3_011.ogg',
		'diphone2:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/010_kd3_012.ogg',
		'diphone2:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone2/011_kd3_013.ogg',
		'e:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/000_e1.ogg',
		'e:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/001_e2.ogg',
		'e:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/002_e3.ogg',
		'e:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/003_e4.ogg',
		'e:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/004_e5.ogg',
		'e:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/005_e6.ogg',
		'e:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/006_e7.ogg',
		'e:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/e/007_e8.ogg',
		'bubble:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/000_bub0.ogg',
		'bubble:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/001_bub1.ogg',
		'bubble:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/002_bub2.ogg',
		'bubble:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/003_bub3.ogg',
		'bubble:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/004_bub4.ogg',
		'bubble:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/005_bub5.ogg',
		'bubble:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/006_bub6.ogg',
		'bubble:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bubble/007_bub7.ogg',
		'insect:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/insect/000_everglades_conehead.ogg',
		'insect:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/insect/001_robust_shieldback.ogg',
		'insect:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/insect/002_seashore_meadow_katydid.ogg',
		'ade:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/000_011112-bassline.ogg',
		'ade:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/001_011112-melody.ogg',
		'ade:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/002_20020506-01.ogg',
		'ade:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/003_abt.ogg',
		'ade:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/004_fan.ogg',
		'ade:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/005_fanbass.ogg',
		'ade:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/006_glass.ogg',
		'ade:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/007_microsound.ogg',
		'ade:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/008_rhythm.ogg',
		'ade:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ade/009_rise.ogg',
		'glitch:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/000_BD.ogg',
		'glitch:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/001_CB.ogg',
		'glitch:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/002_FX.ogg',
		'glitch:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/003_HH.ogg',
		'glitch:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/004_OH.ogg',
		'glitch:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/005_P1.ogg',
		'glitch:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/006_P2.ogg',
		'glitch:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch/007_SN.ogg',
		'haw:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-hh.ogg',
		'haw:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-kick.ogg',
		'haw:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-pop.ogg',
		'haw:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-sd.ogg',
		'haw:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-short1.ogg',
		'haw:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/haw/hawaiian-short2.ogg',
		'popkick:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/000_1.ogg',
		'popkick:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/001_10.ogg',
		'popkick:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/002_2.ogg',
		'popkick:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/003_3.ogg',
		'popkick:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/004_4.ogg',
		'popkick:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/005_5.ogg',
		'popkick:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/006_6.ogg',
		'popkick:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/007_7.ogg',
		'popkick:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/008_8.ogg',
		'popkick:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/popkick/009_9.ogg',
		'breaks157:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breaks157/000_PLEAD.ogg',
		'gtr:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gtr/0001_cleanC.ogg',
		'gtr:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gtr/0002_ovrdC.ogg',
		'gtr:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gtr/0003_distC.ogg',
		'clubkick:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clubkick/1.ogg',
		'clubkick:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clubkick/2.ogg',
		'clubkick:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clubkick/3.ogg',
		'clubkick:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clubkick/4.ogg',
		'clubkick:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clubkick/5.ogg',
		'breaks152:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breaks152/000_AMEN.ogg',
		'x_808bd:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD0000.ogg',
		'x_808bd:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD0010.ogg',
		'x_808bd:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD0025.ogg',
		'x_808bd:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD0050.ogg',
		'x_808bd:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD0075.ogg',
		'x_808bd:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD1000.ogg',
		'x_808bd:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD1010.ogg',
		'x_808bd:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD1025.ogg',
		'x_808bd:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD1050.ogg',
		'x_808bd:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD1075.ogg',
		'x_808bd:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD2500.ogg',
		'x_808bd:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD2510.ogg',
		'x_808bd:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD2525.ogg',
		'x_808bd:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD2550.ogg',
		'x_808bd:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD2575.ogg',
		'x_808bd:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD5000.ogg',
		'x_808bd:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD5010.ogg',
		'x_808bd:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD5025.ogg',
		'x_808bd:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD5050.ogg',
		'x_808bd:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD5075.ogg',
		'x_808bd:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD7500.ogg',
		'x_808bd:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD7510.ogg',
		'x_808bd:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD7525.ogg',
		'x_808bd:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD7550.ogg',
		'x_808bd:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808bd/BD7575.ogg',
		'miniyeah:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/miniyeah/000_Sound0.ogg',
		'miniyeah:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/miniyeah/001_Sound11.ogg',
		'miniyeah:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/miniyeah/002_Sound23.ogg',
		'miniyeah:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/miniyeah/003_Sound36.ogg',
		'if:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/if/000_gab.ogg',
		'if:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/if/001_gab2.ogg',
		'if:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/if/002_snarl1b.ogg',
		'if:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/if/003_snarl2b.ogg',
		'if:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/if/004_snarl3b.ogg',
		'x_808oh:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808oh/OH00.ogg',
		'x_808oh:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808oh/OH10.ogg',
		'x_808oh:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808oh/OH25.ogg',
		'x_808oh:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808oh/OH50.ogg',
		'x_808oh:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808oh/OH75.ogg',
		'house:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/000_BD.ogg',
		'house:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/001_CB.ogg',
		'house:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/002_FX.ogg',
		'house:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/003_HH.ogg',
		'house:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/004_OH.ogg',
		'house:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/005_P1.ogg',
		'house:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/006_P2.ogg',
		'house:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/house/007_SN.ogg',
		'dr:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/000_002.ogg',
		'dr:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/001_003.ogg',
		'dr:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/002_004.ogg',
		'dr:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/003_005.ogg',
		'dr:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/004_006.ogg',
		'dr:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/005_008.ogg',
		'dr:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/006_009.ogg',
		'dr:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/007_010.ogg',
		'dr:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/008_011.ogg',
		'dr:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/009_014.ogg',
		'dr:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/010_015.ogg',
		'dr:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/011_016.ogg',
		'dr:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/012_017.ogg',
		'dr:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/013_019.ogg',
		'dr:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/014_023.ogg',
		'dr:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/015_024.ogg',
		'dr:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/016_025.ogg',
		'dr:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/017_026.ogg',
		'dr:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/018_027.ogg',
		'dr:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/019_028.ogg',
		'dr:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/020_029.ogg',
		'dr:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/021_030.ogg',
		'dr:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/022_031.ogg',
		'dr:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/023_032.ogg',
		'dr:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/024_033.ogg',
		'dr:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/025_034.ogg',
		'dr:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/026_035.ogg',
		'dr:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/027_036.ogg',
		'dr:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/028_037.ogg',
		'dr:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/029_038.ogg',
		'dr:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/030_039.ogg',
		'dr:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/031_040.ogg',
		'dr:32':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/032_041.ogg',
		'dr:33':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/033_042.ogg',
		'dr:34':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/034_043.ogg',
		'dr:35':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/035_044.ogg',
		'dr:36':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/036_045.ogg',
		'dr:37':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/037_046.ogg',
		'dr:38':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/038_047.ogg',
		'dr:39':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/039_048.ogg',
		'dr:40':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/040_049.ogg',
		'dr:41':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr/041_050.ogg',
		'dr55:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr55/000_DR55_hi_hat.ogg',
		'dr55:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr55/001_DR55_kick.ogg',
		'dr55:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr55/002_DR55_rimshot.ogg',
		'dr55:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr55/003_DR55_snare.ogg',
		'bass:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass/000_bass1.ogg',
		'bass:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass/001_bass2.ogg',
		'bass:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass/002_bass3.ogg',
		'bass:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass/003_bass4.ogg',
		'ho:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHOD0.ogg',
		'ho:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHOD2.ogg',
		'ho:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHOD4.ogg',
		'ho:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHOD6.ogg',
		'ho:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHOD8.ogg',
		'ho:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ho/HHODA.ogg',
		'hardkick:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_06.ogg',
		'hardkick:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_37.ogg',
		'hardkick:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_39.ogg',
		'hardkick:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_41.ogg',
		'hardkick:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_52.ogg',
		'hardkick:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hardkick/VEC1_BD_Distortion_53.ogg',
		'x_808hc:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808hc/HC00.ogg',
		'x_808hc:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808hc/HC10.ogg',
		'x_808hc:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808hc/HC25.ogg',
		'x_808hc:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808hc/HC50.ogg',
		'x_808hc:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808hc/HC75.ogg',
		'hit:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/bandpass-blart.ogg',
		'hit:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/electro-pling1.ogg',
		'hit:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/laser-powered-sword.ogg',
		'hit:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/robot-fart.ogg',
		'hit:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/ufo-take-me-away.ogg',
		'hit:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hit/zap-to-crack.ogg',
		'breaks165:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breaks165/000_RAWCLN.ogg',
		'dr2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/000_DR110CHT.ogg',
		'dr2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/001_DR110CLP.ogg',
		'dr2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/002_DR110CYM.ogg',
		'dr2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/003_DR110KIK.ogg',
		'dr2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/004_DR110OHT.ogg',
		'dr2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr2/005_DR110SNR.ogg',
		'tabla:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/000_bass_flick1.ogg',
		'tabla:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/001_bass_flick2.ogg',
		'tabla:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/002_bass_lick1.ogg',
		'tabla:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/003_dead_hit1.ogg',
		'tabla:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/004_dead_hit2.ogg',
		'tabla:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/005_dead_hit3.ogg',
		'tabla:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/006_d_sharp_hit.ogg',
		'tabla:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/007_hi_flick1.ogg',
		'tabla:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/008_hi_flick2.ogg',
		'tabla:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/009_hi_hit1.ogg',
		'tabla:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/010_hi_hit10.ogg',
		'tabla:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/011_hi_hit2.ogg',
		'tabla:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/012_hi_hit3.ogg',
		'tabla:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/013_hi_hit4.ogg',
		'tabla:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/014_hi_hit5.ogg',
		'tabla:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/015_hi_hit6.ogg',
		'tabla:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/016_hi_hit7.ogg',
		'tabla:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/017_hi_hit8.ogg',
		'tabla:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/018_hi_hit9.ogg',
		'tabla:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/019_lower1_hit.ogg',
		'tabla:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/020_lower2_hit.ogg',
		'tabla:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/021_lower3_hit.ogg',
		'tabla:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/022_lower4_hit.ogg',
		'tabla:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/023_lower5_hit.ogg',
		'tabla:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/024_lower6_hit.ogg',
		'tabla:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tabla/025_lower_hits_descending.ogg',
		'dork2:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dork2/0.ogg',
		'dork2:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dork2/1.ogg',
		'dork2:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dork2/2.ogg',
		'dork2:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dork2/4.ogg',
		'hc:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCD0.ogg',
		'hc:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCD2.ogg',
		'hc:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCD4.ogg',
		'hc:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCD6.ogg',
		'hc:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCD8.ogg',
		'hc:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hc/HHCDA.ogg',
		'bassfoo:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassfoo/000_0.ogg',
		'bassfoo:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassfoo/001_1.ogg',
		'bassfoo:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bassfoo/002_2.ogg',
		'seawolf:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/seawolf/000_minehit.ogg',
		'seawolf:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/seawolf/001_shiphit.ogg',
		'seawolf:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/seawolf/002_torpedo.ogg',
		'cp:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cp/HANDCLP0.ogg',
		'cp:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cp/HANDCLPA.ogg',
		'jazz:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/000_BD.ogg',
		'jazz:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/001_CB.ogg',
		'jazz:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/002_FX.ogg',
		'jazz:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/003_HH.ogg',
		'jazz:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/004_OH.ogg',
		'jazz:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/005_P1.ogg',
		'jazz:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/006_P2.ogg',
		'jazz:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jazz/007_SN.ogg',
		'juno:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/00_juno_raw_low.ogg',
		'juno:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/01_juno_raw_mid.ogg',
		'juno:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/02_juno_raw_high.ogg',
		'juno:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/03_juno_chorus_low.ogg',
		'juno:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/04_juno_chorus_mid.ogg',
		'juno:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/05_juno_chorus_high.ogg',
		'juno:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/06_juno_release_low.ogg',
		'juno:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/07_juno_release_mid.ogg',
		'juno:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/08_juno_release_high.ogg',
		'juno:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/09_juno_pad_c_minor_filter.ogg',
		'juno:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/10_juno_pad_c_minor_no_filter.ogg',
		'juno:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/juno/11_juno_pad_c_minor_noise.ogg',
		'birds:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/000_1.ogg',
		'birds:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/001_10.ogg',
		'birds:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/002_2.ogg',
		'birds:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/003_3.ogg',
		'birds:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/004_4.ogg',
		'birds:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/005_5.ogg',
		'birds:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/006_6.ogg',
		'birds:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/007_7.ogg',
		'birds:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/008_8.ogg',
		'birds:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/birds/009_9.ogg',
		'glasstap:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glasstap/000_0.ogg',
		'glasstap:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glasstap/001_1.ogg',
		'glasstap:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glasstap/002_2.ogg',
		'bass1:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18076__daven__01-sb-bass-hit-c.ogg',
		'bass1:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18077__daven__02-sb-bass-hit-c.ogg',
		'bass1:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18078__daven__03-sb-bass-hit-c.ogg',
		'bass1:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18079__daven__04-sb-bass-hit-c.ogg',
		'bass1:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18080__daven__05-sb-bass-hit-c.ogg',
		'bass1:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18081__daven__06-sb-bass-hit-c.ogg',
		'bass1:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18082__daven__07-sb-bass-hit-c.ogg',
		'bass1:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18083__daven__08-sb-bass-hit-c.ogg',
		'bass1:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18084__daven__09-sb-bass-hit-c.ogg',
		'bass1:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18085__daven__10-sb-bass-hit-c.ogg',
		'bass1:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18086__daven__11-sb-bass-hit-c.ogg',
		'bass1:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18087__daven__12-sb-bass-hit-c.ogg',
		'bass1:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18088__daven__13-sb-bass-hit-c.ogg',
		'bass1:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18089__daven__14-sb-bass-hit-c.ogg',
		'bass1:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18090__daven__15-sb-bass-hit-c.ogg',
		'bass1:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18091__daven__16-sb-bass-hit-c.ogg',
		'bass1:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18092__daven__17-sb-bass-hit-c.ogg',
		'bass1:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18093__daven__18-sb-bass-hit-c.ogg',
		'bass1:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18094__daven__19-sb-bass-hit-f.ogg',
		'bass1:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18095__daven__20-sb-bass-hit-f.ogg',
		'bass1:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18096__daven__21-sb-bass-hit-f.ogg',
		'bass1:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18097__daven__22-sb-bass-hit-f.ogg',
		'bass1:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18098__daven__23-sb-bass-hit-f.ogg',
		'bass1:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18099__daven__24-sb-bass-hit-f.ogg',
		'bass1:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18100__daven__25-sb-bass-hit-f.ogg',
		'bass1:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18101__daven__26-sb-bass-hit-f.ogg',
		'bass1:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18102__daven__27-sb-bass-hit-f.ogg',
		'bass1:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18103__daven__28-sb-bass-hit-f.ogg',
		'bass1:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18104__daven__29-sb-bass-hit-f.ogg',
		'bass1:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass1/18105__daven__30-sb-bass-hit-f.ogg',
		'hh27:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/000_hh27closedhh.ogg',
		'hh27:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/001_hh27crash.ogg',
		'hh27:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/002_hh27hit1.ogg',
		'hh27:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/003_hh27hit2.ogg',
		'hh27:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/004_hh27hit3.ogg',
		'hh27:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/005_hh27kick1.ogg',
		'hh27:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/006_hh27kick2.ogg',
		'hh27:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/007_hh27opendhh.ogg',
		'hh27:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/008_hh27perc1.ogg',
		'hh27:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/009_hh27perc2.ogg',
		'hh27:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/010_hh27ride.ogg',
		'hh27:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/011_hh27snare1.ogg',
		'hh27:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh27/012_hh27snare2.ogg',
		'x_808:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/CB.ogg',
		'x_808:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/CH.ogg',
		'x_808:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/CL.ogg',
		'x_808:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/CP.ogg',
		'x_808:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/MA.ogg',
		'x_808:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808/RS.ogg',
		'notes:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/000_0.ogg',
		'notes:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/001_1.ogg',
		'notes:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/002_10.ogg',
		'notes:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/003_11.ogg',
		'notes:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/004_12.ogg',
		'notes:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/005_13.ogg',
		'notes:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/006_14.ogg',
		'notes:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/007_2.ogg',
		'notes:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/008_3.ogg',
		'notes:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/009_4.ogg',
		'notes:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/010_5.ogg',
		'notes:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/011_6.ogg',
		'notes:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/012_7.ogg',
		'notes:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/013_8.ogg',
		'notes:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/notes/014_9.ogg',
		'xmas:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/xmas/170535__cognito-perceptu__merry-christmas.ogg',
		'erk:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/erk/000_123.ogg',
		'x_808mt:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mt/MT00.ogg',
		'x_808mt:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mt/MT10.ogg',
		'x_808mt:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mt/MT25.ogg',
		'x_808mt:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mt/MT50.ogg',
		'x_808mt:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mt/MT75.ogg',
		'lighter:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/000_0.ogg',
		'lighter:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/001_1.ogg',
		'lighter:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/002_2.ogg',
		'lighter:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/003_3.ogg',
		'lighter:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/004_4.ogg',
		'lighter:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/005_5.ogg',
		'lighter:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/006_6.ogg',
		'lighter:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/007_7.ogg',
		'lighter:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/008_8.ogg',
		'lighter:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/009_9.ogg',
		'lighter:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/010_10.ogg',
		'lighter:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/011_11.ogg',
		'lighter:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/012_12.ogg',
		'lighter:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/013_13.ogg',
		'lighter:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/014_14.ogg',
		'lighter:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/015_15.ogg',
		'lighter:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/016_16.ogg',
		'lighter:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/017_17.ogg',
		'lighter:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/018_18.ogg',
		'lighter:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/019_19.ogg',
		'lighter:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/020_20.ogg',
		'lighter:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/021_21.ogg',
		'lighter:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/022_22.ogg',
		'lighter:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/023_23.ogg',
		'lighter:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/024_24.ogg',
		'lighter:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/025_25.ogg',
		'lighter:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/026_26.ogg',
		'lighter:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/027_27.ogg',
		'lighter:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/028_28.ogg',
		'lighter:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/029_29.ogg',
		'lighter:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/030_30.ogg',
		'lighter:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/031_31.ogg',
		'lighter:32':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lighter/032_32.ogg',
		'cb:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cb/rytm-cb.ogg',
		'subroc3d:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/000_01.ogg',
		'subroc3d:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/001_02.ogg',
		'subroc3d:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/002_03.ogg',
		'subroc3d:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/003_04.ogg',
		'subroc3d:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/004_05.ogg',
		'subroc3d:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/005_06.ogg',
		'subroc3d:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/006_07.ogg',
		'subroc3d:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/007_08.ogg',
		'subroc3d:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/008_09.ogg',
		'subroc3d:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/009_11.ogg',
		'subroc3d:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/subroc3d/010_12.ogg',
		'ul:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/000_beep.ogg',
		'ul:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/001_little-whip.ogg',
		'ul:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/002_ulhh.ogg',
		'ul:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/003_ulkick.ogg',
		'ul:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/004_ulnoisey-kick.ogg',
		'ul:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/005_ulnoisey-run.ogg',
		'ul:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/006_ulnoisey-snare.ogg',
		'ul:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/007_ulsnare.ogg',
		'ul:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/008_ulsnare-reverb.ogg',
		'ul:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ul/009_ulsnare-reverse.ogg',
		'gab:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab01.ogg',
		'gab:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab02.ogg',
		'gab:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab03.ogg',
		'gab:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab04.ogg',
		'gab:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab05.ogg',
		'gab:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab06.ogg',
		'gab:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab07.ogg',
		'gab:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab08.ogg',
		'gab:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab09.ogg',
		'gab:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gab/gab10.ogg',
		'monsterb:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/000_jumpdown.ogg',
		'monsterb:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/001_laughter.ogg',
		'monsterb:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/002_tongue.ogg',
		'monsterb:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/003_warping.ogg',
		'monsterb:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/004_wolfman.ogg',
		'monsterb:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/monsterb/005_zap.ogg',
		'diphone:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/000_kd1_002.ogg',
		'diphone:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/001_kd1_003.ogg',
		'diphone:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/002_kd1_004.ogg',
		'diphone:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/003_kd1_005.ogg',
		'diphone:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/004_kd1_006.ogg',
		'diphone:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/005_kd1_007.ogg',
		'diphone:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/006_kd1_008.ogg',
		'diphone:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/007_kd1_009.ogg',
		'diphone:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/008_kd1_010.ogg',
		'diphone:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/009_kd1_011.ogg',
		'diphone:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/010_kd1_012.ogg',
		'diphone:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/011_kd1_013.ogg',
		'diphone:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/012_kd1_014.ogg',
		'diphone:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/013_kd1_015.ogg',
		'diphone:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/014_kd1_016.ogg',
		'diphone:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/015_kd1_017.ogg',
		'diphone:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/016_kd1_018.ogg',
		'diphone:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/017_kd1_019.ogg',
		'diphone:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/018_kd1_020.ogg',
		'diphone:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/019_kd1_021.ogg',
		'diphone:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/020_kd1_022.ogg',
		'diphone:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/021_kd1_023.ogg',
		'diphone:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/022_kd1_024.ogg',
		'diphone:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/023_kd1_025.ogg',
		'diphone:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/024_kd1_026.ogg',
		'diphone:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/025_kd1_027.ogg',
		'diphone:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/026_kd1_028.ogg',
		'diphone:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/027_kd1_029.ogg',
		'diphone:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/028_kd1_030.ogg',
		'diphone:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/029_kd1_031.ogg',
		'diphone:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/030_kd1_032.ogg',
		'diphone:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/031_kd1_033.ogg',
		'diphone:32':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/032_kd1_034.ogg',
		'diphone:33':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/033_kd1_035.ogg',
		'diphone:34':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/034_kd1_036.ogg',
		'diphone:35':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/035_kd1_037.ogg',
		'diphone:36':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/036_kd1_038.ogg',
		'diphone:37':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/diphone/037_kd1_039.ogg',
		'clak:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clak/000_clak1.ogg',
		'clak:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/clak/001_clak2.ogg',
		'sitar:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/000_d_maj_sitar_chorda.ogg',
		'sitar:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/001_d_maj_sitar_chordb.ogg',
		'sitar:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/002_d_maj_sitar_chordc.ogg',
		'sitar:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/003_d_maj_sitar_chordd.ogg',
		'sitar:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/004_d_maj_sitar_chorde.ogg',
		'sitar:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/005_d_minor_sitar_chorda.ogg',
		'sitar:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/006_d_minor_sitar_chordb.ogg',
		'sitar:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sitar/007_d_minor_sitar_chordc.ogg',
		'ab:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/000_ab2closedhh.ogg',
		'ab:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/001_ab2crash.ogg',
		'ab:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/002_ab2hit1.ogg',
		'ab:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/003_ab2hit2.ogg',
		'ab:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/004_ab2kick1.ogg',
		'ab:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/005_ab2kick2.ogg',
		'ab:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/006_ab2openhh.ogg',
		'ab:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/007_ab2perc1.ogg',
		'ab:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/008_ab2perc2.ogg',
		'ab:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/009_ab2ride.ogg',
		'ab:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/010_ab2snare1.ogg',
		'ab:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ab/011_ab2snare2.ogg',
		'cr:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDED0.ogg',
		'cr:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDED2.ogg',
		'cr:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDED4.ogg',
		'cr:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDED6.ogg',
		'cr:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDED8.ogg',
		'cr:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cr/RIDEDA.ogg',
		'tacscan:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/000_01.ogg',
		'tacscan:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/001_02.ogg',
		'tacscan:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/002_03.ogg',
		'tacscan:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/003_1up.ogg',
		'tacscan:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/004_credit.ogg',
		'tacscan:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/005_eexpl.ogg',
		'tacscan:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/006_eshot.ogg',
		'tacscan:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/007_flight1.ogg',
		'tacscan:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/008_flight2.ogg',
		'tacscan:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/009_flight3.ogg',
		'tacscan:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/010_flight4.ogg',
		'tacscan:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/011_flight5.ogg',
		'tacscan:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/012_formatn.ogg',
		'tacscan:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/013_pexpl.ogg',
		'tacscan:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/014_plaser.ogg',
		'tacscan:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/015_pship.ogg',
		'tacscan:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/016_sexpl.ogg',
		'tacscan:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/017_slaser.ogg',
		'tacscan:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/018_sthrust.ogg',
		'tacscan:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/019_tunnelh.ogg',
		'tacscan:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/020_tunnelw.ogg',
		'tacscan:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tacscan/021_warp.ogg',
		'v:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/000_b_blipp01.ogg',
		'v:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/001_v_blipp02.ogg',
		'v:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/002_v_perc3.ogg',
		'v:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/003_v_perc5.ogg',
		'v:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/004_v_snare01.ogg',
		'v:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/v/005_v_snare02.ogg',
		'bd:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0A0A7.ogg',
		'bd:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0A0D0.ogg',
		'bd:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0A0D3.ogg',
		'bd:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0A0DA.ogg',
		'bd:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0AAD0.ogg',
		'bd:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT0AADA.ogg',
		'bd:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3A0D0.ogg',
		'bd:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3A0D3.ogg',
		'bd:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3A0D7.ogg',
		'bd:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3A0DA.ogg',
		'bd:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3AAD0.ogg',
		'bd:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT3AADA.ogg',
		'bd:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7A0D0.ogg',
		'bd:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7A0D3.ogg',
		'bd:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7A0D7.ogg',
		'bd:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7A0DA.ogg',
		'bd:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7AAD0.ogg',
		'bd:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BT7AADA.ogg',
		'bd:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAA0D0.ogg',
		'bd:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAA0D3.ogg',
		'bd:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAA0D7.ogg',
		'bd:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAA0DA.ogg',
		'bd:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAAAD0.ogg',
		'bd:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bd/BTAAADA.ogg',
		'rm:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rm/RIM0.ogg',
		'rm:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rm/RIMA.ogg',
		'blue:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/blue/aya.ogg',
		'blue:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/blue/howdoesitfeel.ogg',
		'latibro:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/000_Sound2.ogg',
		'latibro:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/001_Sound3.ogg',
		'latibro:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/002_Sound4.ogg',
		'latibro:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/003_Sound5.ogg',
		'latibro:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/004_Sound6.ogg',
		'latibro:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/005_Sound7.ogg',
		'latibro:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/006_Sound8.ogg',
		'latibro:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/latibro/007_Sound9.ogg',
		'dr_few:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/000_001.ogg',
		'dr_few:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/001_007.ogg',
		'dr_few:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/002_012.ogg',
		'dr_few:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/003_013.ogg',
		'dr_few:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/004_018.ogg',
		'dr_few:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/005_020.ogg',
		'dr_few:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/006_021.ogg',
		'dr_few:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dr_few/007_022.ogg',
		'rave2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/electric_ping01.ogg',
		'rave2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/rave_bass01.ogg',
		'rave2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/rave_bass02.ogg',
		'rave2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/rave_bass03.ogg',
		'rave2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/rave_bass04.ogg',
		'rave2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave2/rave_choir01.ogg',
		'koy:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/koy/01_left.ogg',
		'koy:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/koy/02_right.ogg',
		'glitch2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/000_BD.ogg',
		'glitch2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/001_CB.ogg',
		'glitch2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/002_FX.ogg',
		'glitch2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/003_HH.ogg',
		'glitch2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/004_OH.ogg',
		'glitch2:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/005_P1.ogg',
		'glitch2:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/006_P2.ogg',
		'glitch2:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/glitch2/007_SN.ogg',
		'hmm:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hmm/hmm.ogg',
		'arp:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arp/000_arp2.ogg',
		'arp:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arp/001_arp.ogg',
		'made2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/made2/output.ogg',
		'uxay:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/uxay/000_bar.ogg',
		'uxay:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/uxay/001_erk.ogg',
		'uxay:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/uxay/002_foo.ogg',
		'stomp:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/000_0.ogg',
		'stomp:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/001_0_2.ogg',
		'stomp:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/002_1.ogg',
		'stomp:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/003_2.ogg',
		'stomp:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/004_3.ogg',
		'stomp:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/005_5.ogg',
		'stomp:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/006_6.ogg',
		'stomp:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/007_7.ogg',
		'stomp:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/008_8.ogg',
		'stomp:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stomp/009_9.ogg',
		'tech:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1closedhh.ogg',
		'tech:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1crash.ogg',
		'tech:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1hit1.ogg',
		'tech:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1hit2.ogg',
		'tech:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1hit3.ogg',
		'tech:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1kick1.ogg',
		'tech:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1kick2.ogg',
		'tech:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1openhh.ogg',
		'tech:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1perc1.ogg',
		'tech:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1perc2.ogg',
		'tech:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1ride.ogg',
		'tech:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1snare1.ogg',
		'tech:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tech/tn1snare2.ogg',
		'sn:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T0S0.ogg',
		'sn:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T0S3.ogg',
		'sn:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T0S7.ogg',
		'sn:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T0SA.ogg',
		'sn:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T3S3.ogg',
		'sn:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T3S7.ogg',
		'sn:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T3SA.ogg',
		'sn:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T7S3.ogg',
		'sn:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T7S7.ogg',
		'sn:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0T7SA.ogg',
		'sn:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0TAS3.ogg',
		'sn:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0TAS7.ogg',
		'sn:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST0TASA.ogg',
		'sn:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T0S0.ogg',
		'sn:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T0S3.ogg',
		'sn:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T0S7.ogg',
		'sn:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T0SA.ogg',
		'sn:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T3S3.ogg',
		'sn:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T3S7.ogg',
		'sn:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T3SA.ogg',
		'sn:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T7S3.ogg',
		'sn:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T7S7.ogg',
		'sn:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3T7SA.ogg',
		'sn:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3TAS3.ogg',
		'sn:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3TAS7.ogg',
		'sn:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST3TASA.ogg',
		'sn:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T0S0.ogg',
		'sn:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T0S3.ogg',
		'sn:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T0S7.ogg',
		'sn:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T0SA.ogg',
		'sn:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T3S3.ogg',
		'sn:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T3S7.ogg',
		'sn:32':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T3SA.ogg',
		'sn:33':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T7S3.ogg',
		'sn:34':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T7S7.ogg',
		'sn:35':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7T7SA.ogg',
		'sn:36':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7TAS3.ogg',
		'sn:37':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7TAS7.ogg',
		'sn:38':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/ST7TASA.ogg',
		'sn:39':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT0S0.ogg',
		'sn:40':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT0S3.ogg',
		'sn:41':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT0S7.ogg',
		'sn:42':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT0SA.ogg',
		'sn:43':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT3S3.ogg',
		'sn:44':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT3S7.ogg',
		'sn:45':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT3SA.ogg',
		'sn:46':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT7S3.ogg',
		'sn:47':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT7S7.ogg',
		'sn:48':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STAT7SA.ogg',
		'sn:49':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STATAS3.ogg',
		'sn:50':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STATAS7.ogg',
		'sn:51':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sn/STATASA.ogg',
		'less:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/less/bass2.ogg',
		'less:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/less/hhxx.ogg',
		'less:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/less/kicklesshuman.ogg',
		'less:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/less/snare.ogg',
		'off:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/off/000_01.ogg',
		'x_808sd:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD0000.ogg',
		'x_808sd:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD0010.ogg',
		'x_808sd:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD0025.ogg',
		'x_808sd:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD0050.ogg',
		'x_808sd:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD0075.ogg',
		'x_808sd:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD1000.ogg',
		'x_808sd:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD1010.ogg',
		'x_808sd:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD1025.ogg',
		'x_808sd:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD1050.ogg',
		'x_808sd:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD1075.ogg',
		'x_808sd:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD2500.ogg',
		'x_808sd:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD2510.ogg',
		'x_808sd:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD2525.ogg',
		'x_808sd:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD2550.ogg',
		'x_808sd:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD2575.ogg',
		'x_808sd:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD5000.ogg',
		'x_808sd:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD5010.ogg',
		'x_808sd:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD5025.ogg',
		'x_808sd:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD5050.ogg',
		'x_808sd:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD5075.ogg',
		'x_808sd:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD7500.ogg',
		'x_808sd:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD7510.ogg',
		'x_808sd:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD7525.ogg',
		'x_808sd:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD7550.ogg',
		'x_808sd:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808sd/SD7575.ogg',
		'trump:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/000_tightstabb.ogg',
		'trump:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/001_tightstabblowoct.ogg',
		'trump:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/002_tightstabe.ogg',
		'trump:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/003_tightstabg.ogg',
		'trump:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/004_trumpfunk107a.ogg',
		'trump:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/005_trumpstabb.ogg',
		'trump:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/006_trumpstabblowoct.ogg',
		'trump:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/007_trumpstabe.ogg',
		'trump:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/008_trumpstabg.ogg',
		'trump:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/009_trumpstabschord.ogg',
		'trump:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/trump/010_trumptightstabschord.ogg',
		'bev:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bev/00-mono.ogg',
		'bev:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bev/01-stereo.ogg',
		'pad:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pad/alien-monolith-pad.ogg',
		'pad:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pad/angelpads.ogg',
		'pad:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pad/bellpad-harmonics.ogg',
		'led:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/led/000_foo.ogg',
		'perc:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/000_perc0.ogg',
		'perc:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/001_perc1.ogg',
		'perc:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/002_perc2.ogg',
		'perc:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/003_perc3.ogg',
		'perc:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/004_perc4.ogg',
		'perc:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/perc/005_perc5.ogg',
		'pluck:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_A-Sharp-2_PI.ogg',
		'pluck:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_A1_PI.ogg',
		'pluck:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_A3_PI.ogg',
		'pluck:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_B1_PI.ogg',
		'pluck:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_B3_PI.ogg',
		'pluck:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_C3_PI.ogg',
		'pluck:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_D-Sharp-3_PI.ogg',
		'pluck:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_D2_PI.ogg',
		'pluck:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_D4_PI.ogg',
		'pluck:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_E1_PI.ogg',
		'pluck:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_E2_PI.ogg',
		'pluck:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_F1_PI.ogg',
		'pluck:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_F3_PI.ogg',
		'pluck:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_G-Sharp-2_PI.ogg',
		'pluck:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_G1_PI.ogg',
		'pluck:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_G2_PI.ogg',
		'pluck:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/pluck/BS_G3_PI.ogg',
		'bleep:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/boip.ogg',
		'bleep:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/checkpoint-hit.ogg',
		'bleep:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/echo-blip-thing.ogg',
		'bleep:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/harsh-whippleszoot.ogg',
		'bleep:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/pc_beep.ogg',
		'bleep:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/shortsaxish.ogg',
		'bleep:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/simpletone.ogg',
		'bleep:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/stereo-star-trek-pager.ogg',
		'bleep:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/tiniest.ogg',
		'bleep:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/tinynote.ogg',
		'bleep:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/vidgame-bleep1.ogg',
		'bleep:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/vidgame-bleep2.ogg',
		'bleep:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bleep/watch_beep.ogg',
		'ht:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT0D0.ogg',
		'ht:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT0D3.ogg',
		'ht:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT0D7.ogg',
		'ht:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT0DA.ogg',
		'ht:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT3D0.ogg',
		'ht:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT3D3.ogg',
		'ht:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT3D7.ogg',
		'ht:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT3DA.ogg',
		'ht:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT7D0.ogg',
		'ht:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT7D3.ogg',
		'ht:10': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT7D7.ogg',
		'ht:11': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HT7DA.ogg',
		'ht:12': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HTAD0.ogg',
		'ht:13': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HTAD3.ogg',
		'ht:14': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HTAD7.ogg',
		'ht:15': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ht/HTADA.ogg',
		'ades4:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/01.ogg',
		'ades4:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/02.ogg',
		'ades4:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/03.ogg',
		'ades4:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/04.ogg',
		'ades4:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/05.ogg',
		'ades4:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ades4/06.ogg',
		'proc:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/proc/000_2.ogg',
		'proc:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/proc/001_3.ogg',
		'gretsch:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/000_brushhitom.ogg',
		'gretsch:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/001_brushlotom.ogg',
		'gretsch:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/002_brushsnare.ogg',
		'gretsch:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/003_brushsnareghost.ogg',
		'gretsch:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/004_closedhat.ogg',
		'gretsch:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/005_closedhathard.ogg',
		'gretsch:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/006_cowbell.ogg',
		'gretsch:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/007_cymbalgrab.ogg',
		'gretsch:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/008_cymbalrub.ogg',
		'gretsch:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/009_flam.ogg',
		'gretsch:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/010_foothat.ogg',
		'gretsch:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/011_foothat2.ogg',
		'gretsch:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/012_hitom.ogg',
		'gretsch:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/013_kick.ogg',
		'gretsch:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/014_kicksnare.ogg',
		'gretsch:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/015_lotom.ogg',
		'gretsch:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/016_openclosedhat.ogg',
		'gretsch:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/017_openhat.ogg',
		'gretsch:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/018_ridebell.ogg',
		'gretsch:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/019_ridecymbal.ogg',
		'gretsch:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/020_snare.ogg',
		'gretsch:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/021_snareghost.ogg',
		'gretsch:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/022_snarehard.ogg',
		'gretsch:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/gretsch/023_snareslack.ogg',
		'outdoor:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/1.ogg',
		'outdoor:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/2.ogg',
		'outdoor:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/3.ogg',
		'outdoor:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/4.ogg',
		'outdoor:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/5.ogg',
		'outdoor:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/outdoor/6.ogg',
		'techno:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/000_0.ogg',
		'techno:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/001_1.ogg',
		'techno:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/002_3.ogg',
		'techno:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/003_4.ogg',
		'techno:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/004_5.ogg',
		'techno:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/005_6.ogg',
		'techno:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/techno/006_7.ogg',
		'ulgab:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ulgab/gab1.ogg',
		'ulgab:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ulgab/gab2.ogg',
		'ulgab:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ulgab/gab3.ogg',
		'ulgab:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ulgab/gab4.ogg',
		'ulgab:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ulgab/gab5.ogg',
		'breaks125:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breaks125/015_sdstckbr.ogg',
		'breaks125:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breaks125/016_bllstmp.ogg',
		'bin:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bin/000_bin1.ogg',
		'bin:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bin/001_0.ogg',
		'x_808mc:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mc/MC00.ogg',
		'x_808mc:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mc/MC10.ogg',
		'x_808mc:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mc/MC25.ogg',
		'x_808mc:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mc/MC50.ogg',
		'x_808mc:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808mc/MC75.ogg',
		'lt:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT0D0.ogg',
		'lt:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT0D3.ogg',
		'lt:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT0D7.ogg',
		'lt:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT0DA.ogg',
		'lt:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT3D0.ogg',
		'lt:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT3D3.ogg',
		'lt:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT3D7.ogg',
		'lt:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT3DA.ogg',
		'lt:8': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT7D0.ogg',
		'lt:9': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT7D3.ogg',
		'lt:10': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT7D7.ogg',
		'lt:11': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LT7DA.ogg',
		'lt:12': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LTAD0.ogg',
		'lt:13': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LTAD3.ogg',
		'lt:14': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LTAD7.ogg',
		'lt:15': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/lt/LTADA.ogg',
		'amencutup:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/000_AMENCUT_001.ogg',
		'amencutup:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/001_AMENCUT_002.ogg',
		'amencutup:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/002_AMENCUT_003.ogg',
		'amencutup:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/003_AMENCUT_004.ogg',
		'amencutup:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/004_AMENCUT_005.ogg',
		'amencutup:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/005_AMENCUT_006.ogg',
		'amencutup:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/006_AMENCUT_007.ogg',
		'amencutup:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/007_AMENCUT_008.ogg',
		'amencutup:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/008_AMENCUT_009.ogg',
		'amencutup:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/009_AMENCUT_010.ogg',
		'amencutup:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/010_AMENCUT_011.ogg',
		'amencutup:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/011_AMENCUT_012.ogg',
		'amencutup:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/012_AMENCUT_013.ogg',
		'amencutup:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/013_AMENCUT_014.ogg',
		'amencutup:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/014_AMENCUT_015.ogg',
		'amencutup:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/015_AMENCUT_016.ogg',
		'amencutup:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/016_AMENCUT_017.ogg',
		'amencutup:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/017_AMENCUT_018.ogg',
		'amencutup:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/018_AMENCUT_019.ogg',
		'amencutup:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/019_AMENCUT_020.ogg',
		'amencutup:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/020_AMENCUT_021.ogg',
		'amencutup:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/021_AMENCUT_022.ogg',
		'amencutup:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/022_AMENCUT_023.ogg',
		'amencutup:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/023_AMENCUT_024.ogg',
		'amencutup:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/024_AMENCUT_025.ogg',
		'amencutup:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/025_AMENCUT_026.ogg',
		'amencutup:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/026_AMENCUT_027.ogg',
		'amencutup:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/027_AMENCUT_028.ogg',
		'amencutup:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/028_AMENCUT_029.ogg',
		'amencutup:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/029_AMENCUT_030.ogg',
		'amencutup:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/030_AMENCUT_031.ogg',
		'amencutup:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/amencutup/031_AMENCUT_032.ogg',
		'drum:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/000_drum1.ogg',
		'drum:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/001_drum2.ogg',
		'drum:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/002_drum3.ogg',
		'drum:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/003_drum4.ogg',
		'drum:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/004_drum5.ogg',
		'drum:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/drum/005_drum6.ogg',
		'coins:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/coins/coins.ogg',
		'industrial:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/000_01.ogg',
		'industrial:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/001_02.ogg',
		'industrial:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/002_03.ogg',
		'industrial:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/003_04.ogg',
		'industrial:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/004_05.ogg',
		'industrial:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/005_06.ogg',
		'industrial:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/006_07.ogg',
		'industrial:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/007_08.ogg',
		'industrial:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/008_09.ogg',
		'industrial:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/009_10.ogg',
		'industrial:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/010_11.ogg',
		'industrial:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/011_12.ogg',
		'industrial:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/012_13.ogg',
		'industrial:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/013_14.ogg',
		'industrial:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/014_15.ogg',
		'industrial:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/015_16.ogg',
		'industrial:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/016_17.ogg',
		'industrial:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/017_18.ogg',
		'industrial:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/018_19.ogg',
		'industrial:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/019_20.ogg',
		'industrial:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/020_21.ogg',
		'industrial:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/021_22.ogg',
		'industrial:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/022_23.ogg',
		'industrial:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/023_24.ogg',
		'industrial:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/024_25.ogg',
		'industrial:25':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/025_26.ogg',
		'industrial:26':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/026_27.ogg',
		'industrial:27':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/027_28.ogg',
		'industrial:28':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/028_29.ogg',
		'industrial:29':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/029_30.ogg',
		'industrial:30':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/030_31.ogg',
		'industrial:31':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/industrial/031_32.ogg',
		'tink:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tink/000_tink1.ogg',
		'tink:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tink/001_tink2.ogg',
		'tink:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tink/002_tink3.ogg',
		'tink:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tink/003_tink4.ogg',
		'tink:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/tink/004_tink5.ogg',
		'co:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/co/CLOP1.ogg',
		'co:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/co/CLOP2.ogg',
		'co:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/co/CLOP3.ogg',
		'co:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/co/CLOP4.ogg',
		'fest:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fest/000_foo.ogg',
		'feelfx:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/blnk.ogg',
		'feelfx:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/boschwitz.ogg',
		'feelfx:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/bwawp.ogg',
		'feelfx:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/doing.ogg',
		'feelfx:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/laser-buzz.ogg',
		'feelfx:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/machine.ogg',
		'feelfx:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/silent.ogg',
		'feelfx:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feelfx/surfactant_15_xilo.ogg',
		'x_808cy:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY0000.ogg',
		'x_808cy:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY0010.ogg',
		'x_808cy:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY0025.ogg',
		'x_808cy:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY0050.ogg',
		'x_808cy:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY0075.ogg',
		'x_808cy:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY1000.ogg',
		'x_808cy:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY1010.ogg',
		'x_808cy:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY1025.ogg',
		'x_808cy:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY1050.ogg',
		'x_808cy:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY1075.ogg',
		'x_808cy:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY2500.ogg',
		'x_808cy:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY2510.ogg',
		'x_808cy:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY2525.ogg',
		'x_808cy:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY2550.ogg',
		'x_808cy:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY2575.ogg',
		'x_808cy:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY5000.ogg',
		'x_808cy:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY5010.ogg',
		'x_808cy:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY5025.ogg',
		'x_808cy:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY5050.ogg',
		'x_808cy:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY5075.ogg',
		'x_808cy:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY7500.ogg',
		'x_808cy:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY7510.ogg',
		'x_808cy:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY7525.ogg',
		'x_808cy:23':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY7550.ogg',
		'x_808cy:24':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808cy/CY7575.ogg',
		'world:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/world/bd.ogg',
		'world:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/world/gabbakick.ogg',
		'world:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/world/sn.ogg',
		'f:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/f/000_f.ogg',
		'numbers:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/0.ogg',
		'numbers:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/1.ogg',
		'numbers:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/2.ogg',
		'numbers:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/3.ogg',
		'numbers:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/4.ogg',
		'numbers:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/5.ogg',
		'numbers:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/6.ogg',
		'numbers:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/7.ogg',
		'numbers:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/numbers/8.ogg',
		'd:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/d/000_d1.ogg',
		'd:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/d/001_d2.ogg',
		'd:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/d/002_d3.ogg',
		'd:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/d/003_d4.ogg',
		'padlong:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/padlong/atmospheric-abduction.ogg',
		'sequential:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/000_Tom_Clap.ogg',
		'sequential:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/001_Tom_Crash.ogg',
		'sequential:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/002_Tom_Hat_Closed.ogg',
		'sequential:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/003_Tom_Kick.ogg',
		'sequential:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/004_Tom_Openhat.ogg',
		'sequential:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/005_Tom_Snare.ogg',
		'sequential:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/006_Tom_Tom1.ogg',
		'sequential:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sequential/007_Tom_Tom2.ogg',
		'stab:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/000_stab1.ogg',
		'stab:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/001_stab10.ogg',
		'stab:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/002_stab11.ogg',
		'stab:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/003_stab12.ogg',
		'stab:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/004_stab13.ogg',
		'stab:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/005_stab14.ogg',
		'stab:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/006_stab15.ogg',
		'stab:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/007_stab16.ogg',
		'stab:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/008_stab17.ogg',
		'stab:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/009_stab18.ogg',
		'stab:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/010_stab19.ogg',
		'stab:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/011_stab2.ogg',
		'stab:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/012_stab20.ogg',
		'stab:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/013_stab21.ogg',
		'stab:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/014_stab22.ogg',
		'stab:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/015_stab23.ogg',
		'stab:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/016_stab3.ogg',
		'stab:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/017_stab4.ogg',
		'stab:18':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/018_stab5.ogg',
		'stab:19':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/019_stab6.ogg',
		'stab:20':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/020_stab7.ogg',
		'stab:21':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/021_stab8.ogg',
		'stab:22':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/stab/022_stab9.ogg',
		'electro1:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/000_et1closedhh.ogg',
		'electro1:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/001_et1crash.ogg',
		'electro1:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/002_et1hit1.ogg',
		'electro1:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/003_et1hit2.ogg',
		'electro1:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/004_et1hit3.ogg',
		'electro1:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/005_et1kick1.ogg',
		'electro1:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/006_et1kick2.ogg',
		'electro1:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/007_et1openhh.ogg',
		'electro1:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/008_et1perc1.ogg',
		'electro1:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/009_et1perc2.ogg',
		'electro1:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/010_et1ride.ogg',
		'electro1:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/011_et1snare1.ogg',
		'electro1:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/electro1/012_et1snare2.ogg',
		'ifdrums:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ifdrums/ignorebd.ogg',
		'ifdrums:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ifdrums/ignorehh.ogg',
		'ifdrums:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/ifdrums/ignoresd.ogg',
		'invaders:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/000_0.ogg',
		'invaders:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/001_1.ogg',
		'invaders:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/002_11.ogg',
		'invaders:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/003_12.ogg',
		'invaders:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/004_13.ogg',
		'invaders:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/005_14.ogg',
		'invaders:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/006_15.ogg',
		'invaders:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/007_16.ogg',
		'invaders:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/008_17.ogg',
		'invaders:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/009_18.ogg',
		'invaders:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/010_2.ogg',
		'invaders:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/011_3.ogg',
		'invaders:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/012_4.ogg',
		'invaders:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/013_5.ogg',
		'invaders:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/014_6.ogg',
		'invaders:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/015_7.ogg',
		'invaders:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/016_8.ogg',
		'invaders:17':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/invaders/017_9.ogg',
		'dist:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/000_inddistb1.ogg',
		'dist:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/001_inddistb2.ogg',
		'dist:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/002_inddistb1ride.ogg',
		'dist:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/003_inddistb2ride.ogg',
		'dist:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/004_inddistb3.ogg',
		'dist:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/005_inddistb3ride.ogg',
		'dist:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/006_inddistb4.ogg',
		'dist:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/007_inddistb4ride.ogg',
		'dist:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/008_inddistb5.ogg',
		'dist:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/009_inddistb5ride.ogg',
		'dist:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/010_inddistb6.ogg',
		'dist:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/011_inddistb6ride.ogg',
		'dist:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/012_inddistb7.ogg',
		'dist:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/013_inddistb7ride.ogg',
		'dist:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/014_inddistb8.ogg',
		'dist:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dist/015_inddistb8ride.ogg',
		'sundance:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/000_bong.ogg',
		'sundance:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/001_explsion.ogg',
		'sundance:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/002_hatch.ogg',
		'sundance:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/003_ping1.ogg',
		'sundance:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/004_ping2.ogg',
		'sundance:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/sundance/005_whoosh.ogg',
		'speech:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/000_Sound10.ogg',
		'speech:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/001_Sound4.ogg',
		'speech:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/002_Sound5.ogg',
		'speech:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/003_Sound6.ogg',
		'speech:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/004_Sound7.ogg',
		'speech:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/005_Sound8.ogg',
		'speech:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speech/006_Sound9.ogg',
		'toys:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/000_ClassicalMusic.ogg',
		'toys:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/001_ClassicalMusic-Notes.ogg',
		'toys:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/002_ClassicalMusic-Words.ogg',
		'toys:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/003_Colors.ogg',
		'toys:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/004_Colors-Notes.ogg',
		'toys:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/005_Colors-Words.ogg',
		'toys:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/006_MusicalMedley.ogg',
		'toys:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/007_MusicalMedley-Notes.ogg',
		'toys:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/008_MusicalMedley-Words.ogg',
		'toys:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/009_Numbers.ogg',
		'toys:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/010_Numbers-Notes.ogg',
		'toys:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/011_Numbers-Words.ogg',
		'toys:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/toys/012_ToyNotes.ogg',
		'bass0:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass0/000_0.ogg',
		'bass0:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass0/001_1.ogg',
		'bass0:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass0/002_2.ogg',
		'realclaps:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/realclaps/1.ogg',
		'realclaps:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/realclaps/2.ogg',
		'realclaps:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/realclaps/3.ogg',
		'realclaps:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/realclaps/4.ogg',
		'dorkbot:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dorkbot/1.ogg',
		'dorkbot:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/dorkbot/2.ogg',
		'arpy:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy01.ogg',
		'arpy:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy02.ogg',
		'arpy:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy03.ogg',
		'arpy:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy04.ogg',
		'arpy:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy05.ogg',
		'arpy:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy06.ogg',
		'arpy:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy07.ogg',
		'arpy:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy08.ogg',
		'arpy:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy09.ogg',
		'arpy:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy10.ogg',
		'arpy:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/arpy/arpy11.ogg',
		'fire:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fire/fire.ogg',
		'hoover:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/1.ogg',
		'hoover:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/2.ogg',
		'hoover:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/3.ogg',
		'hoover:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/4.ogg',
		'hoover:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/5.ogg',
		'hoover:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hoover/6.ogg',
		'breath:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/breath/000_breath.ogg',
		'rave:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/AREUREADY.ogg',
		'rave:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/Babylon.ogg',
		'rave:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/cut.ogg',
		'rave:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/doh.ogg',
		'rave:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/giveit.ogg',
		'rave:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/ourcrew.ogg',
		'rave:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/prodigyloop.ogg',
		'rave:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/rave/stabah.ogg',
		'bottle:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/000_1.ogg',
		'bottle:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/001_10.ogg',
		'bottle:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/002_11.ogg',
		'bottle:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/003_12.ogg',
		'bottle:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/004_13.ogg',
		'bottle:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/005_2.ogg',
		'bottle:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/006_3.ogg',
		'bottle:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/007_4.ogg',
		'bottle:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/008_5.ogg',
		'bottle:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/009_6.ogg',
		'bottle:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/010_7.ogg',
		'bottle:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/011_8.ogg',
		'bottle:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bottle/012_9.ogg',
		'east:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/000_nipon_wood_block.ogg',
		'east:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/001_ohkawa_mute.ogg',
		'east:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/002_ohkawa_open.ogg',
		'east:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/003_shime_hi.ogg',
		'east:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/004_shime_hi_2.ogg',
		'east:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/005_shime_mute.ogg',
		'east:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/006_taiko_1.ogg',
		'east:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/007_taiko_2.ogg',
		'east:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/east/008_taiko_3.ogg',
		'linnhats:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/1.ogg',
		'linnhats:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/2.ogg',
		'linnhats:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/3.ogg',
		'linnhats:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/4.ogg',
		'linnhats:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/5.ogg',
		'linnhats:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/linnhats/6.ogg',
		'speedupdown:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/000_Sound20.ogg',
		'speedupdown:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/001_Sound21.ogg',
		'speedupdown:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/002_Sound22.ogg',
		'speedupdown:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/003_Sound23.ogg',
		'speedupdown:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/004_Sound24.ogg',
		'speedupdown:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/005_Sound25.ogg',
		'speedupdown:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/006_Sound26.ogg',
		'speedupdown:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/007_Sound27.ogg',
		'speedupdown:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/speedupdown/008_Sound28.ogg',
		'cosmicg:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/000_cg_att.ogg',
		'cosmicg:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/001_cg_chnc.ogg',
		'cosmicg:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/002_cg_dest.ogg',
		'cosmicg:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/003_cg_ext.ogg',
		'cosmicg:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/004_cg_gotb.ogg',
		'cosmicg:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/005_cg_gotm.ogg',
		'cosmicg:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/006_cg_gun.ogg',
		'cosmicg:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/007_cg_m0.ogg',
		'cosmicg:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/008_cg_m1.ogg',
		'cosmicg:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/009_cg_m2.ogg',
		'cosmicg:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/010_cg_m3.ogg',
		'cosmicg:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/011_cg_m4.ogg',
		'cosmicg:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/012_cg_m5.ogg',
		'cosmicg:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/013_cg_m6.ogg',
		'cosmicg:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/cosmicg/014_cg_m7.ogg',
		'jvbass:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/000_01.ogg',
		'jvbass:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/001_02.ogg',
		'jvbass:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/002_03.ogg',
		'jvbass:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/003_04.ogg',
		'jvbass:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/004_05.ogg',
		'jvbass:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/005_06.ogg',
		'jvbass:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/006_07.ogg',
		'jvbass:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/007_08.ogg',
		'jvbass:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/008_09.ogg',
		'jvbass:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/009_10.ogg',
		'jvbass:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/010_11.ogg',
		'jvbass:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/011_12.ogg',
		'jvbass:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/jvbass/012_13.ogg',
		'mash:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash/0.ogg',
		'mash:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/mash/1.ogg',
		'feel:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/BD_04_d.ogg',
		'feel:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/HH_003b.ogg',
		'feel:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/Sd_139.ogg',
		'feel:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/Sd_180.ogg',
		'feel:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/Sd_223.ogg',
		'feel:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/hihat029a.ogg',
		'feel:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/feel/sub.ogg',
		'short:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/short/sampleoftheday-gtt-fx-synth-009.ogg',
		'short:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/short/sampleoftheday-gtt-snare-drum-010.ogg',
		'short:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/short/sampleoftheday-gtt-snare-drum-012.ogg',
		'short:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/short/sampleoftheday-gtt-snare-drum-020.ogg',
		'short:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/short/sampleoftheday-gtt-snare-drum-021.ogg',
		'incoming:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/000_Mattel__Snare.ogg',
		'incoming:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/001_Mattel__Tom_VHigh.ogg',
		'incoming:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/002_Mattel_Cymbal.ogg',
		'incoming:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/003_Mattel_Hi-Hat.ogg',
		'incoming:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/004_Mattel_Kick.ogg',
		'incoming:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/005_Mattel_Tom_High.ogg',
		'incoming:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/006_Mattel_Tom_Low.ogg',
		'incoming:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/incoming/007_Mattel_Tom_VLow.ogg',
		'flick:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/000_square-p.ogg',
		'flick:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/001_1.ogg',
		'flick:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/002_10.ogg',
		'flick:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/003_11.ogg',
		'flick:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/004_12.ogg',
		'flick:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/005_13.ogg',
		'flick:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/006_14.ogg',
		'flick:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/007_2.ogg',
		'flick:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/008_3.ogg',
		'flick:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/009_4.ogg',
		'flick:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/010_5.ogg',
		'flick:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/011_6.ogg',
		'flick:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/012_7.ogg',
		'flick:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/013_8.ogg',
		'flick:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/014_9.ogg',
		'flick:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/015_hi.ogg',
		'flick:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/flick/016_square.ogg',
		'reverbkick:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/reverbkick/1.ogg',
		'bass2:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass2/69988__noizemassacre__hardcore-bass-1.ogg',
		'bass2:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass2/69989__noizemassacre__hardcore-bass-2.ogg',
		'bass2:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass2/69990__noizemassacre__hardcore-bass-3.ogg',
		'bass2:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass2/69991__noizemassacre__hardcore-bass-4.ogg',
		'bass2:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/bass2/69992__noizemassacre__hardcore-bass-5.ogg',
		'baa:0': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/1.ogg',
		'baa:1': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/2.ogg',
		'baa:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/3.ogg',
		'baa:3': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/4.ogg',
		'baa:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/5.ogg',
		'baa:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/6.ogg',
		'baa:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/baa/7.ogg',
		'fm:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/31seconds.ogg',
		'fm:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/808909stabs.ogg',
		'fm:2': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/badboy.ogg',
		'fm:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/bambaataa.ogg',
		'fm:4': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/break1.ogg',
		'fm:5': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/break2.ogg',
		'fm:6': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/break3.ogg',
		'fm:7': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/charly.ogg',
		'fm:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/electro1.ogg',
		'fm:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/electro2.ogg',
		'fm:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/femalevocal1.ogg',
		'fm:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/femalevocal2.ogg',
		'fm:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/femalevocal3.ogg',
		'fm:13': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/heyhey.ogg',
		'fm:14': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/pad.ogg',
		'fm:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/shakedown.ogg',
		'fm:16': 'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/fm/stabs.ogg',
		'click:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/click/000_click0.ogg',
		'click:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/click/001_click1.ogg',
		'click:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/click/002_click2.ogg',
		'click:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/click/003_click3.ogg',
		'control:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/control/1.ogg',
		'control:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/control/2.ogg',
		'peri:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/000_bd.ogg',
		'peri:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/001_bd-rev.ogg',
		'peri:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/002_hh2.ogg',
		'peri:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/003_hhx.ogg',
		'peri:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/004_ksh.ogg',
		'peri:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/005_sd.ogg',
		'peri:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/006_sd-rev.ogg',
		'peri:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/007_xbigclang.ogg',
		'peri:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/008_xbong.ogg',
		'peri:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/009_xbusket.ogg',
		'peri:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/010_xchinga.ogg',
		'peri:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/011_xfx1.ogg',
		'peri:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/012_xfx2.ogg',
		'peri:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/013_xfx3.ogg',
		'peri:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/peri/014_xgillclank.ogg',
		'procshort:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/000_1.ogg',
		'procshort:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/001_10.ogg',
		'procshort:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/002_11.ogg',
		'procshort:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/003_4.ogg',
		'procshort:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/004_5.ogg',
		'procshort:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/005_7.ogg',
		'procshort:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/006_8.ogg',
		'procshort:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/procshort/007_9.ogg',
		'hand:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand1-mono.ogg',
		'hand:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand11-mono.ogg',
		'hand:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand12-mono.ogg',
		'hand:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand13-mono.ogg',
		'hand:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand14-mono.ogg',
		'hand:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand15-mono.ogg',
		'hand:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand16-mono.ogg',
		'hand:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand17.ogg',
		'hand:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand2-mono.ogg',
		'hand:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand20.ogg',
		'hand:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand21-mono.ogg',
		'hand:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand22-mono.ogg',
		'hand:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand3-mono.ogg',
		'hand:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand4-mono.ogg',
		'hand:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand7-mono.ogg',
		'hand:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand8-mono.ogg',
		'hand:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hand/hand9-mono.ogg',
		'future:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/000_808KICK4.ogg',
		'future:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/001_808KICK9.ogg',
		'future:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/002_Bd1_w.ogg',
		'future:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/003_Bd2_w.ogg',
		'future:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/004_Bd3_w.ogg',
		'future:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/005_Johnson.ogg',
		'future:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/006_Kick9.ogg',
		'future:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/007_MKD03.ogg',
		'future:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/008_MKD60601.ogg',
		'future:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/009_MKDRCK05.ogg',
		'future:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/010_MKDRCK06.ogg',
		'future:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/011_MKDRCK07.ogg',
		'future:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/012_Mhhcf3.ogg',
		'future:13':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/013_Shake2.ogg',
		'future:14':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/014_Shake4.ogg',
		'future:15':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/015_lockett_conga_mute2.ogg',
		'future:16':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/future/016_lockett_conga_open1.ogg',
		'hh:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/000_hh3closedhh.ogg',
		'hh:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/001_hh3crash.ogg',
		'hh:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/002_hh3hit1.ogg',
		'hh:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/003_hh3hit2.ogg',
		'hh:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/004_hh3hit3.ogg',
		'hh:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/005_hh3kick1.ogg',
		'hh:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/006_hh3kick2.ogg',
		'hh:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/007_hh3openhh.ogg',
		'hh:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/008_hh3rerc1.ogg',
		'hh:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/009_hh3rerc2.ogg',
		'hh:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/010_hh3ride.ogg',
		'hh:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/011_hh3snare1.ogg',
		'hh:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/hh/012_hh3snare2.ogg',
		'x_808ht:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808ht/HT00.ogg',
		'x_808ht:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808ht/HT10.ogg',
		'x_808ht:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808ht/HT25.ogg',
		'x_808ht:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808ht/HT50.ogg',
		'x_808ht:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/808ht/HT75.ogg',
		'db:0':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12closedhh.ogg',
		'db:1':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12crash.ogg',
		'db:2':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12hit1.ogg',
		'db:3':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12hit2.ogg',
		'db:4':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12hit3.ogg',
		'db:5':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12kick1.ogg',
		'db:6':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12kick2.ogg',
		'db:7':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12openhh.ogg',
		'db:8':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12perc1.ogg',
		'db:9':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12perc2.ogg',
		'db:10':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12ride.ogg',
		'db:11':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12snare1.ogg',
		'db:12':
			'https://d1jrewpgfi51ge.cloudfront.net/dirt-samples/db/dbs12snare2.ogg',
		'spacewind:0':
			'https://freesound.org/data/previews/370/370754_3104030-hq.mp3',
		'ambienta:0':
			'https://freesound.org/data/previews/546/546360_10196790-hq.mp3',
		'lowdark:0':
			'https://freesound.org/data/previews/579/579260_10522382-hq.mp3',
		'harmonium:0':
			'https://freesound.org/data/previews/264/264442_4965426-hq.mp3',
		'hollowair:0':
			'https://freesound.org/data/previews/370/370316_3104030-hq.mp3',
		'digeridoo:0':
			'https://freesound.org/data/previews/197/197998_3684181-hq.mp3',
	};
	var unsafeSamples = Unsafe_Coerce.unsafeCoerce;
	var ulgab_4__Sample = 'ulgab:4';
	var ulgab_3__Sample = 'ulgab:3';
	var ulgab_2__Sample = 'ulgab:2';
	var ulgab_1__Sample = 'ulgab:1';
	var ulgab_0__Sample = 'ulgab:0';
	var ul_9__Sample = 'ul:9';
	var ul_8__Sample = 'ul:8';
	var ul_7__Sample = 'ul:7';
	var ul_6__Sample = 'ul:6';
	var ul_5__Sample = 'ul:5';
	var ul_4__Sample = 'ul:4';
	var ul_3__Sample = 'ul:3';
	var ul_2__Sample = 'ul:2';
	var ul_1__Sample = 'ul:1';
	var ul_0__Sample = 'ul:0';
	var trump_9__Sample = 'trump:9';
	var trump_8__Sample = 'trump:8';
	var trump_7__Sample = 'trump:7';
	var trump_6__Sample = 'trump:6';
	var trump_5__Sample = 'trump:5';
	var trump_4__Sample = 'trump:4';
	var trump_3__Sample = 'trump:3';
	var trump_2__Sample = 'trump:2';
	var trump_1__Sample = 'trump:1';
	var trump_10__Sample = 'trump:10';
	var trump_0__Sample = 'trump:0';
	var toys_9__Sample = 'toys:9';
	var toys_8__Sample = 'toys:8';
	var toys_7__Sample = 'toys:7';
	var toys_6__Sample = 'toys:6';
	var toys_5__Sample = 'toys:5';
	var toys_4__Sample = 'toys:4';
	var toys_3__Sample = 'toys:3';
	var toys_2__Sample = 'toys:2';
	var toys_1__Sample = 'toys:1';
	var toys_12__Sample = 'toys:12';
	var toys_11__Sample = 'toys:11';
	var toys_10__Sample = 'toys:10';
	var toys_0__Sample = 'toys:0';
	var tok_3__Sample = 'tok:3';
	var tok_2__Sample = 'tok:2';
	var tok_1__Sample = 'tok:1';
	var tok_0__Sample = 'tok:0';
	var tink_4__Sample = 'tink:4';
	var tink_3__Sample = 'tink:3';
	var tink_2__Sample = 'tink:2';
	var tink_1__Sample = 'tink:1';
	var tink_0__Sample = 'tink:0';
	var techno_6__Sample = 'techno:6';
	var techno_5__Sample = 'techno:5';
	var techno_4__Sample = 'techno:4';
	var techno_3__Sample = 'techno:3';
	var techno_2__Sample = 'techno:2';
	var techno_1__Sample = 'techno:1';
	var techno_0__Sample = 'techno:0';
	var tech_9__Sample = 'tech:9';
	var tech_8__Sample = 'tech:8';
	var tech_7__Sample = 'tech:7';
	var tech_6__Sample = 'tech:6';
	var tech_5__Sample = 'tech:5';
	var tech_4__Sample = 'tech:4';
	var tech_3__Sample = 'tech:3';
	var tech_2__Sample = 'tech:2';
	var tech_1__Sample = 'tech:1';
	var tech_12__Sample = 'tech:12';
	var tech_11__Sample = 'tech:11';
	var tech_10__Sample = 'tech:10';
	var tech_0__Sample = 'tech:0';
	var tacscan_9__Sample = 'tacscan:9';
	var tacscan_8__Sample = 'tacscan:8';
	var tacscan_7__Sample = 'tacscan:7';
	var tacscan_6__Sample = 'tacscan:6';
	var tacscan_5__Sample = 'tacscan:5';
	var tacscan_4__Sample = 'tacscan:4';
	var tacscan_3__Sample = 'tacscan:3';
	var tacscan_2__Sample = 'tacscan:2';
	var tacscan_21__Sample = 'tacscan:21';
	var tacscan_20__Sample = 'tacscan:20';
	var tacscan_1__Sample = 'tacscan:1';
	var tacscan_19__Sample = 'tacscan:19';
	var tacscan_18__Sample = 'tacscan:18';
	var tacscan_17__Sample = 'tacscan:17';
	var tacscan_16__Sample = 'tacscan:16';
	var tacscan_15__Sample = 'tacscan:15';
	var tacscan_14__Sample = 'tacscan:14';
	var tacscan_13__Sample = 'tacscan:13';
	var tacscan_12__Sample = 'tacscan:12';
	var tacscan_11__Sample = 'tacscan:11';
	var tacscan_10__Sample = 'tacscan:10';
	var tacscan_0__Sample = 'tacscan:0';
	var tablex_2__Sample = 'tablex:2';
	var tablex_1__Sample = 'tablex:1';
	var tablex_0__Sample = 'tablex:0';
	var tabla_9__Sample = 'tabla:9';
	var tabla_8__Sample = 'tabla:8';
	var tabla_7__Sample = 'tabla:7';
	var tabla_6__Sample = 'tabla:6';
	var tabla_5__Sample = 'tabla:5';
	var tabla_4__Sample = 'tabla:4';
	var tabla_3__Sample = 'tabla:3';
	var tabla_2__Sample = 'tabla:2';
	var tabla_25__Sample = 'tabla:25';
	var tabla_24__Sample = 'tabla:24';
	var tabla_23__Sample = 'tabla:23';
	var tabla_22__Sample = 'tabla:22';
	var tabla_21__Sample = 'tabla:21';
	var tabla_20__Sample = 'tabla:20';
	var tabla_1__Sample = 'tabla:1';
	var tabla_19__Sample = 'tabla:19';
	var tabla_18__Sample = 'tabla:18';
	var tabla_17__Sample = 'tabla:17';
	var tabla_16__Sample = 'tabla:16';
	var tabla_15__Sample = 'tabla:15';
	var tabla_14__Sample = 'tabla:14';
	var tabla_13__Sample = 'tabla:13';
	var tabla_12__Sample = 'tabla:12';
	var tabla_11__Sample = 'tabla:11';
	var tabla_10__Sample = 'tabla:10';
	var tabla_0__Sample = 'tabla:0';
	var tabla2_9__Sample = 'tabla2:9';
	var tabla2_8__Sample = 'tabla2:8';
	var tabla2_7__Sample = 'tabla2:7';
	var tabla2_6__Sample = 'tabla2:6';
	var tabla2_5__Sample = 'tabla2:5';
	var tabla2_4__Sample = 'tabla2:4';
	var tabla2_45__Sample = 'tabla2:45';
	var tabla2_44__Sample = 'tabla2:44';
	var tabla2_43__Sample = 'tabla2:43';
	var tabla2_42__Sample = 'tabla2:42';
	var tabla2_41__Sample = 'tabla2:41';
	var tabla2_40__Sample = 'tabla2:40';
	var tabla2_3__Sample = 'tabla2:3';
	var tabla2_39__Sample = 'tabla2:39';
	var tabla2_38__Sample = 'tabla2:38';
	var tabla2_37__Sample = 'tabla2:37';
	var tabla2_36__Sample = 'tabla2:36';
	var tabla2_35__Sample = 'tabla2:35';
	var tabla2_34__Sample = 'tabla2:34';
	var tabla2_33__Sample = 'tabla2:33';
	var tabla2_32__Sample = 'tabla2:32';
	var tabla2_31__Sample = 'tabla2:31';
	var tabla2_30__Sample = 'tabla2:30';
	var tabla2_2__Sample = 'tabla2:2';
	var tabla2_29__Sample = 'tabla2:29';
	var tabla2_28__Sample = 'tabla2:28';
	var tabla2_27__Sample = 'tabla2:27';
	var tabla2_26__Sample = 'tabla2:26';
	var tabla2_25__Sample = 'tabla2:25';
	var tabla2_24__Sample = 'tabla2:24';
	var tabla2_23__Sample = 'tabla2:23';
	var tabla2_22__Sample = 'tabla2:22';
	var tabla2_21__Sample = 'tabla2:21';
	var tabla2_20__Sample = 'tabla2:20';
	var tabla2_1__Sample = 'tabla2:1';
	var tabla2_19__Sample = 'tabla2:19';
	var tabla2_18__Sample = 'tabla2:18';
	var tabla2_17__Sample = 'tabla2:17';
	var tabla2_16__Sample = 'tabla2:16';
	var tabla2_15__Sample = 'tabla2:15';
	var tabla2_14__Sample = 'tabla2:14';
	var tabla2_13__Sample = 'tabla2:13';
	var tabla2_12__Sample = 'tabla2:12';
	var tabla2_11__Sample = 'tabla2:11';
	var tabla2_10__Sample = 'tabla2:10';
	var tabla2_0__Sample = 'tabla2:0';
	var sundance_5__Sample = 'sundance:5';
	var sundance_4__Sample = 'sundance:4';
	var sundance_3__Sample = 'sundance:3';
	var sundance_2__Sample = 'sundance:2';
	var sundance_1__Sample = 'sundance:1';
	var sundance_0__Sample = 'sundance:0';
	var sugar_1__Sample = 'sugar:1';
	var sugar_0__Sample = 'sugar:0';
	var subroc3d_9__Sample = 'subroc3d:9';
	var subroc3d_8__Sample = 'subroc3d:8';
	var subroc3d_7__Sample = 'subroc3d:7';
	var subroc3d_6__Sample = 'subroc3d:6';
	var subroc3d_5__Sample = 'subroc3d:5';
	var subroc3d_4__Sample = 'subroc3d:4';
	var subroc3d_3__Sample = 'subroc3d:3';
	var subroc3d_2__Sample = 'subroc3d:2';
	var subroc3d_1__Sample = 'subroc3d:1';
	var subroc3d_10__Sample = 'subroc3d:10';
	var subroc3d_0__Sample = 'subroc3d:0';
	var stomp_9__Sample = 'stomp:9';
	var stomp_8__Sample = 'stomp:8';
	var stomp_7__Sample = 'stomp:7';
	var stomp_6__Sample = 'stomp:6';
	var stomp_5__Sample = 'stomp:5';
	var stomp_4__Sample = 'stomp:4';
	var stomp_3__Sample = 'stomp:3';
	var stomp_2__Sample = 'stomp:2';
	var stomp_1__Sample = 'stomp:1';
	var stomp_0__Sample = 'stomp:0';
	var stab_9__Sample = 'stab:9';
	var stab_8__Sample = 'stab:8';
	var stab_7__Sample = 'stab:7';
	var stab_6__Sample = 'stab:6';
	var stab_5__Sample = 'stab:5';
	var stab_4__Sample = 'stab:4';
	var stab_3__Sample = 'stab:3';
	var stab_2__Sample = 'stab:2';
	var stab_22__Sample = 'stab:22';
	var stab_21__Sample = 'stab:21';
	var stab_20__Sample = 'stab:20';
	var stab_1__Sample = 'stab:1';
	var stab_19__Sample = 'stab:19';
	var stab_18__Sample = 'stab:18';
	var stab_17__Sample = 'stab:17';
	var stab_16__Sample = 'stab:16';
	var stab_15__Sample = 'stab:15';
	var stab_14__Sample = 'stab:14';
	var stab_13__Sample = 'stab:13';
	var stab_12__Sample = 'stab:12';
	var stab_11__Sample = 'stab:11';
	var stab_10__Sample = 'stab:10';
	var stab_0__Sample = 'stab:0';
	var speedupdown_8__Sample = 'speedupdown:8';
	var speedupdown_7__Sample = 'speedupdown:7';
	var speedupdown_6__Sample = 'speedupdown:6';
	var speedupdown_5__Sample = 'speedupdown:5';
	var speedupdown_4__Sample = 'speedupdown:4';
	var speedupdown_3__Sample = 'speedupdown:3';
	var speedupdown_2__Sample = 'speedupdown:2';
	var speedupdown_1__Sample = 'speedupdown:1';
	var speedupdown_0__Sample = 'speedupdown:0';
	var speechless_9__Sample = 'speechless:9';
	var speechless_8__Sample = 'speechless:8';
	var speechless_7__Sample = 'speechless:7';
	var speechless_6__Sample = 'speechless:6';
	var speechless_5__Sample = 'speechless:5';
	var speechless_4__Sample = 'speechless:4';
	var speechless_3__Sample = 'speechless:3';
	var speechless_2__Sample = 'speechless:2';
	var speechless_1__Sample = 'speechless:1';
	var speechless_0__Sample = 'speechless:0';
	var speech_6__Sample = 'speech:6';
	var speech_5__Sample = 'speech:5';
	var speech_4__Sample = 'speech:4';
	var speech_3__Sample = 'speech:3';
	var speech_2__Sample = 'speech:2';
	var speech_1__Sample = 'speech:1';
	var speech_0__Sample = 'speech:0';
	var speakspell_9__Sample = 'speakspell:9';
	var speakspell_8__Sample = 'speakspell:8';
	var speakspell_7__Sample = 'speakspell:7';
	var speakspell_6__Sample = 'speakspell:6';
	var speakspell_5__Sample = 'speakspell:5';
	var speakspell_4__Sample = 'speakspell:4';
	var speakspell_3__Sample = 'speakspell:3';
	var speakspell_2__Sample = 'speakspell:2';
	var speakspell_1__Sample = 'speakspell:1';
	var speakspell_11__Sample = 'speakspell:11';
	var speakspell_10__Sample = 'speakspell:10';
	var speakspell_0__Sample = 'speakspell:0';
	var spacewind_0__Sample = 'spacewind:0';
	var space_9__Sample = 'space:9';
	var space_8__Sample = 'space:8';
	var space_7__Sample = 'space:7';
	var space_6__Sample = 'space:6';
	var space_5__Sample = 'space:5';
	var space_4__Sample = 'space:4';
	var space_3__Sample = 'space:3';
	var space_2__Sample = 'space:2';
	var space_1__Sample = 'space:1';
	var space_17__Sample = 'space:17';
	var space_16__Sample = 'space:16';
	var space_15__Sample = 'space:15';
	var space_14__Sample = 'space:14';
	var space_13__Sample = 'space:13';
	var space_12__Sample = 'space:12';
	var space_11__Sample = 'space:11';
	var space_10__Sample = 'space:10';
	var space_0__Sample = 'space:0';
	var sn_9__Sample = 'sn:9';
	var sn_8__Sample = 'sn:8';
	var sn_7__Sample = 'sn:7';
	var sn_6__Sample = 'sn:6';
	var sn_5__Sample = 'sn:5';
	var sn_51__Sample = 'sn:51';
	var sn_50__Sample = 'sn:50';
	var sn_4__Sample = 'sn:4';
	var sn_49__Sample = 'sn:49';
	var sn_48__Sample = 'sn:48';
	var sn_47__Sample = 'sn:47';
	var sn_46__Sample = 'sn:46';
	var sn_45__Sample = 'sn:45';
	var sn_44__Sample = 'sn:44';
	var sn_43__Sample = 'sn:43';
	var sn_42__Sample = 'sn:42';
	var sn_41__Sample = 'sn:41';
	var sn_40__Sample = 'sn:40';
	var sn_3__Sample = 'sn:3';
	var sn_39__Sample = 'sn:39';
	var sn_38__Sample = 'sn:38';
	var sn_37__Sample = 'sn:37';
	var sn_36__Sample = 'sn:36';
	var sn_35__Sample = 'sn:35';
	var sn_34__Sample = 'sn:34';
	var sn_33__Sample = 'sn:33';
	var sn_32__Sample = 'sn:32';
	var sn_31__Sample = 'sn:31';
	var sn_30__Sample = 'sn:30';
	var sn_2__Sample = 'sn:2';
	var sn_29__Sample = 'sn:29';
	var sn_28__Sample = 'sn:28';
	var sn_27__Sample = 'sn:27';
	var sn_26__Sample = 'sn:26';
	var sn_25__Sample = 'sn:25';
	var sn_24__Sample = 'sn:24';
	var sn_23__Sample = 'sn:23';
	var sn_22__Sample = 'sn:22';
	var sn_21__Sample = 'sn:21';
	var sn_20__Sample = 'sn:20';
	var sn_1__Sample = 'sn:1';
	var sn_19__Sample = 'sn:19';
	var sn_18__Sample = 'sn:18';
	var sn_17__Sample = 'sn:17';
	var sn_16__Sample = 'sn:16';
	var sn_15__Sample = 'sn:15';
	var sn_14__Sample = 'sn:14';
	var sn_13__Sample = 'sn:13';
	var sn_12__Sample = 'sn:12';
	var sn_11__Sample = 'sn:11';
	var sn_10__Sample = 'sn:10';
	var sn_0__Sample = 'sn:0';
	var sitar_7__Sample = 'sitar:7';
	var sitar_6__Sample = 'sitar:6';
	var sitar_5__Sample = 'sitar:5';
	var sitar_4__Sample = 'sitar:4';
	var sitar_3__Sample = 'sitar:3';
	var sitar_2__Sample = 'sitar:2';
	var sitar_1__Sample = 'sitar:1';
	var sitar_0__Sample = 'sitar:0';
	var sine_5__Sample = 'sine:5';
	var sine_4__Sample = 'sine:4';
	var sine_3__Sample = 'sine:3';
	var sine_2__Sample = 'sine:2';
	var sine_1__Sample = 'sine:1';
	var sine_0__Sample = 'sine:0';
	var sid_9__Sample = 'sid:9';
	var sid_8__Sample = 'sid:8';
	var sid_7__Sample = 'sid:7';
	var sid_6__Sample = 'sid:6';
	var sid_5__Sample = 'sid:5';
	var sid_4__Sample = 'sid:4';
	var sid_3__Sample = 'sid:3';
	var sid_2__Sample = 'sid:2';
	var sid_1__Sample = 'sid:1';
	var sid_11__Sample = 'sid:11';
	var sid_10__Sample = 'sid:10';
	var sid_0__Sample = 'sid:0';
	var short_4__Sample = 'short:4';
	var short_3__Sample = 'short:3';
	var short_2__Sample = 'short:2';
	var short_1__Sample = 'short:1';
	var short_0__Sample = 'short:0';
	var sheffield_0__Sample = 'sheffield:0';
	var sf_9__Sample = 'sf:9';
	var sf_8__Sample = 'sf:8';
	var sf_7__Sample = 'sf:7';
	var sf_6__Sample = 'sf:6';
	var sf_5__Sample = 'sf:5';
	var sf_4__Sample = 'sf:4';
	var sf_3__Sample = 'sf:3';
	var sf_2__Sample = 'sf:2';
	var sf_1__Sample = 'sf:1';
	var sf_17__Sample = 'sf:17';
	var sf_16__Sample = 'sf:16';
	var sf_15__Sample = 'sf:15';
	var sf_14__Sample = 'sf:14';
	var sf_13__Sample = 'sf:13';
	var sf_12__Sample = 'sf:12';
	var sf_11__Sample = 'sf:11';
	var sf_10__Sample = 'sf:10';
	var sf_0__Sample = 'sf:0';
	var sequential_7__Sample = 'sequential:7';
	var sequential_6__Sample = 'sequential:6';
	var sequential_5__Sample = 'sequential:5';
	var sequential_4__Sample = 'sequential:4';
	var sequential_3__Sample = 'sequential:3';
	var sequential_2__Sample = 'sequential:2';
	var sequential_1__Sample = 'sequential:1';
	var sequential_0__Sample = 'sequential:0';
	var seawolf_2__Sample = 'seawolf:2';
	var seawolf_1__Sample = 'seawolf:1';
	var seawolf_0__Sample = 'seawolf:0';
	var sd_1__Sample = 'sd:1';
	var sd_0__Sample = 'sd:0';
	var sax_9__Sample = 'sax:9';
	var sax_8__Sample = 'sax:8';
	var sax_7__Sample = 'sax:7';
	var sax_6__Sample = 'sax:6';
	var sax_5__Sample = 'sax:5';
	var sax_4__Sample = 'sax:4';
	var sax_3__Sample = 'sax:3';
	var sax_2__Sample = 'sax:2';
	var sax_21__Sample = 'sax:21';
	var sax_20__Sample = 'sax:20';
	var sax_1__Sample = 'sax:1';
	var sax_19__Sample = 'sax:19';
	var sax_18__Sample = 'sax:18';
	var sax_17__Sample = 'sax:17';
	var sax_16__Sample = 'sax:16';
	var sax_15__Sample = 'sax:15';
	var sax_14__Sample = 'sax:14';
	var sax_13__Sample = 'sax:13';
	var sax_12__Sample = 'sax:12';
	var sax_11__Sample = 'sax:11';
	var sax_10__Sample = 'sax:10';
	var sax_0__Sample = 'sax:0';
	var sampleToUrls = Data_Map_Internal.fromFoldable(
		WAGSI_Plumbing_Types.sampleOrd
	)(Data_Foldable.foldableArray)(
		Data_Functor.map(Data_Functor.functorArray)(function (v) {
			return new Data_Tuple.Tuple(v.value0, v.value1);
		})(
			Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(
				unsafeSamples(urls)
			)
		)
	);
	var rs_0__Sample = 'rs:0';
	var rm_1__Sample = 'rm:1';
	var rm_0__Sample = 'rm:0';
	var reverbkick_0__Sample = 'reverbkick:0';
	var realclaps_3__Sample = 'realclaps:3';
	var realclaps_2__Sample = 'realclaps:2';
	var realclaps_1__Sample = 'realclaps:1';
	var realclaps_0__Sample = 'realclaps:0';
	var ravemono_1__Sample = 'ravemono:1';
	var ravemono_0__Sample = 'ravemono:0';
	var rave_7__Sample = 'rave:7';
	var rave_6__Sample = 'rave:6';
	var rave_5__Sample = 'rave:5';
	var rave_4__Sample = 'rave:4';
	var rave_3__Sample = 'rave:3';
	var rave_2__Sample = 'rave:2';
	var rave_1__Sample = 'rave:1';
	var rave_0__Sample = 'rave:0';
	var rave2_5__Sample = 'rave2:5';
	var rave2_4__Sample = 'rave2:4';
	var rave2_3__Sample = 'rave2:3';
	var rave2_2__Sample = 'rave2:2';
	var rave2_1__Sample = 'rave2:1';
	var rave2_0__Sample = 'rave2:0';
	var psr_9__Sample = 'psr:9';
	var psr_8__Sample = 'psr:8';
	var psr_7__Sample = 'psr:7';
	var psr_6__Sample = 'psr:6';
	var psr_5__Sample = 'psr:5';
	var psr_4__Sample = 'psr:4';
	var psr_3__Sample = 'psr:3';
	var psr_2__Sample = 'psr:2';
	var psr_29__Sample = 'psr:29';
	var psr_28__Sample = 'psr:28';
	var psr_27__Sample = 'psr:27';
	var psr_26__Sample = 'psr:26';
	var psr_25__Sample = 'psr:25';
	var psr_24__Sample = 'psr:24';
	var psr_23__Sample = 'psr:23';
	var psr_22__Sample = 'psr:22';
	var psr_21__Sample = 'psr:21';
	var psr_20__Sample = 'psr:20';
	var psr_1__Sample = 'psr:1';
	var psr_19__Sample = 'psr:19';
	var psr_18__Sample = 'psr:18';
	var psr_17__Sample = 'psr:17';
	var psr_16__Sample = 'psr:16';
	var psr_15__Sample = 'psr:15';
	var psr_14__Sample = 'psr:14';
	var psr_13__Sample = 'psr:13';
	var psr_12__Sample = 'psr:12';
	var psr_11__Sample = 'psr:11';
	var psr_10__Sample = 'psr:10';
	var psr_0__Sample = 'psr:0';
	var procshort_7__Sample = 'procshort:7';
	var procshort_6__Sample = 'procshort:6';
	var procshort_5__Sample = 'procshort:5';
	var procshort_4__Sample = 'procshort:4';
	var procshort_3__Sample = 'procshort:3';
	var procshort_2__Sample = 'procshort:2';
	var procshort_1__Sample = 'procshort:1';
	var procshort_0__Sample = 'procshort:0';
	var proc_1__Sample = 'proc:1';
	var proc_0__Sample = 'proc:0';
	var print_9__Sample = 'print:9';
	var print_8__Sample = 'print:8';
	var print_7__Sample = 'print:7';
	var print_6__Sample = 'print:6';
	var print_5__Sample = 'print:5';
	var print_4__Sample = 'print:4';
	var print_3__Sample = 'print:3';
	var print_2__Sample = 'print:2';
	var print_1__Sample = 'print:1';
	var print_10__Sample = 'print:10';
	var print_0__Sample = 'print:0';
	var popkick_9__Sample = 'popkick:9';
	var popkick_8__Sample = 'popkick:8';
	var popkick_7__Sample = 'popkick:7';
	var popkick_6__Sample = 'popkick:6';
	var popkick_5__Sample = 'popkick:5';
	var popkick_4__Sample = 'popkick:4';
	var popkick_3__Sample = 'popkick:3';
	var popkick_2__Sample = 'popkick:2';
	var popkick_1__Sample = 'popkick:1';
	var popkick_0__Sample = 'popkick:0';
	var pluck_9__Sample = 'pluck:9';
	var pluck_8__Sample = 'pluck:8';
	var pluck_7__Sample = 'pluck:7';
	var pluck_6__Sample = 'pluck:6';
	var pluck_5__Sample = 'pluck:5';
	var pluck_4__Sample = 'pluck:4';
	var pluck_3__Sample = 'pluck:3';
	var pluck_2__Sample = 'pluck:2';
	var pluck_1__Sample = 'pluck:1';
	var pluck_16__Sample = 'pluck:16';
	var pluck_15__Sample = 'pluck:15';
	var pluck_14__Sample = 'pluck:14';
	var pluck_13__Sample = 'pluck:13';
	var pluck_12__Sample = 'pluck:12';
	var pluck_11__Sample = 'pluck:11';
	var pluck_10__Sample = 'pluck:10';
	var pluck_0__Sample = 'pluck:0';
	var peri_9__Sample = 'peri:9';
	var peri_8__Sample = 'peri:8';
	var peri_7__Sample = 'peri:7';
	var peri_6__Sample = 'peri:6';
	var peri_5__Sample = 'peri:5';
	var peri_4__Sample = 'peri:4';
	var peri_3__Sample = 'peri:3';
	var peri_2__Sample = 'peri:2';
	var peri_1__Sample = 'peri:1';
	var peri_14__Sample = 'peri:14';
	var peri_13__Sample = 'peri:13';
	var peri_12__Sample = 'peri:12';
	var peri_11__Sample = 'peri:11';
	var peri_10__Sample = 'peri:10';
	var peri_0__Sample = 'peri:0';
	var perc_5__Sample = 'perc:5';
	var perc_4__Sample = 'perc:4';
	var perc_3__Sample = 'perc:3';
	var perc_2__Sample = 'perc:2';
	var perc_1__Sample = 'perc:1';
	var perc_0__Sample = 'perc:0';
	var pebbles_0__Sample = 'pebbles:0';
	var padlong_0__Sample = 'padlong:0';
	var pad_2__Sample = 'pad:2';
	var pad_1__Sample = 'pad:1';
	var pad_0__Sample = 'pad:0';
	var outdoor_5__Sample = 'outdoor:5';
	var outdoor_4__Sample = 'outdoor:4';
	var outdoor_3__Sample = 'outdoor:3';
	var outdoor_2__Sample = 'outdoor:2';
	var outdoor_1__Sample = 'outdoor:1';
	var outdoor_0__Sample = 'outdoor:0';
	var off_0__Sample = 'off:0';
	var odx_9__Sample = 'odx:9';
	var odx_8__Sample = 'odx:8';
	var odx_7__Sample = 'odx:7';
	var odx_6__Sample = 'odx:6';
	var odx_5__Sample = 'odx:5';
	var odx_4__Sample = 'odx:4';
	var odx_3__Sample = 'odx:3';
	var odx_2__Sample = 'odx:2';
	var odx_1__Sample = 'odx:1';
	var odx_14__Sample = 'odx:14';
	var odx_13__Sample = 'odx:13';
	var odx_12__Sample = 'odx:12';
	var odx_11__Sample = 'odx:11';
	var odx_10__Sample = 'odx:10';
	var odx_0__Sample = 'odx:0';
	var oc_3__Sample = 'oc:3';
	var oc_2__Sample = 'oc:2';
	var oc_1__Sample = 'oc:1';
	var oc_0__Sample = 'oc:0';
	var numbers_8__Sample = 'numbers:8';
	var numbers_7__Sample = 'numbers:7';
	var numbers_6__Sample = 'numbers:6';
	var numbers_5__Sample = 'numbers:5';
	var numbers_4__Sample = 'numbers:4';
	var numbers_3__Sample = 'numbers:3';
	var numbers_2__Sample = 'numbers:2';
	var numbers_1__Sample = 'numbers:1';
	var numbers_0__Sample = 'numbers:0';
	var notes_9__Sample = 'notes:9';
	var notes_8__Sample = 'notes:8';
	var notes_7__Sample = 'notes:7';
	var notes_6__Sample = 'notes:6';
	var notes_5__Sample = 'notes:5';
	var notes_4__Sample = 'notes:4';
	var notes_3__Sample = 'notes:3';
	var notes_2__Sample = 'notes:2';
	var notes_1__Sample = 'notes:1';
	var notes_14__Sample = 'notes:14';
	var notes_13__Sample = 'notes:13';
	var notes_12__Sample = 'notes:12';
	var notes_11__Sample = 'notes:11';
	var notes_10__Sample = 'notes:10';
	var notes_0__Sample = 'notes:0';
	var noise_0__Sample = 'noise:0';
	var noise2_7__Sample = 'noise2:7';
	var noise2_6__Sample = 'noise2:6';
	var noise2_5__Sample = 'noise2:5';
	var noise2_4__Sample = 'noise2:4';
	var noise2_3__Sample = 'noise2:3';
	var noise2_2__Sample = 'noise2:2';
	var noise2_1__Sample = 'noise2:1';
	var noise2_0__Sample = 'noise2:0';
	var newnotes_9__Sample = 'newnotes:9';
	var newnotes_8__Sample = 'newnotes:8';
	var newnotes_7__Sample = 'newnotes:7';
	var newnotes_6__Sample = 'newnotes:6';
	var newnotes_5__Sample = 'newnotes:5';
	var newnotes_4__Sample = 'newnotes:4';
	var newnotes_3__Sample = 'newnotes:3';
	var newnotes_2__Sample = 'newnotes:2';
	var newnotes_1__Sample = 'newnotes:1';
	var newnotes_14__Sample = 'newnotes:14';
	var newnotes_13__Sample = 'newnotes:13';
	var newnotes_12__Sample = 'newnotes:12';
	var newnotes_11__Sample = 'newnotes:11';
	var newnotes_10__Sample = 'newnotes:10';
	var newnotes_0__Sample = 'newnotes:0';
	var mute_9__Sample = 'mute:9';
	var mute_8__Sample = 'mute:8';
	var mute_7__Sample = 'mute:7';
	var mute_6__Sample = 'mute:6';
	var mute_5__Sample = 'mute:5';
	var mute_4__Sample = 'mute:4';
	var mute_3__Sample = 'mute:3';
	var mute_2__Sample = 'mute:2';
	var mute_27__Sample = 'mute:27';
	var mute_26__Sample = 'mute:26';
	var mute_25__Sample = 'mute:25';
	var mute_24__Sample = 'mute:24';
	var mute_23__Sample = 'mute:23';
	var mute_22__Sample = 'mute:22';
	var mute_21__Sample = 'mute:21';
	var mute_20__Sample = 'mute:20';
	var mute_1__Sample = 'mute:1';
	var mute_19__Sample = 'mute:19';
	var mute_18__Sample = 'mute:18';
	var mute_17__Sample = 'mute:17';
	var mute_16__Sample = 'mute:16';
	var mute_15__Sample = 'mute:15';
	var mute_14__Sample = 'mute:14';
	var mute_13__Sample = 'mute:13';
	var mute_12__Sample = 'mute:12';
	var mute_11__Sample = 'mute:11';
	var mute_10__Sample = 'mute:10';
	var mute_0__Sample = 'mute:0';
	var mt_9__Sample = 'mt:9';
	var mt_8__Sample = 'mt:8';
	var mt_7__Sample = 'mt:7';
	var mt_6__Sample = 'mt:6';
	var mt_5__Sample = 'mt:5';
	var mt_4__Sample = 'mt:4';
	var mt_3__Sample = 'mt:3';
	var mt_2__Sample = 'mt:2';
	var mt_1__Sample = 'mt:1';
	var mt_15__Sample = 'mt:15';
	var mt_14__Sample = 'mt:14';
	var mt_13__Sample = 'mt:13';
	var mt_12__Sample = 'mt:12';
	var mt_11__Sample = 'mt:11';
	var mt_10__Sample = 'mt:10';
	var mt_0__Sample = 'mt:0';
	var msg_8__Sample = 'msg:8';
	var msg_7__Sample = 'msg:7';
	var msg_6__Sample = 'msg:6';
	var msg_5__Sample = 'msg:5';
	var msg_4__Sample = 'msg:4';
	var msg_3__Sample = 'msg:3';
	var msg_2__Sample = 'msg:2';
	var msg_1__Sample = 'msg:1';
	var msg_0__Sample = 'msg:0';
	var mp3_3__Sample = 'mp3:3';
	var mp3_2__Sample = 'mp3:2';
	var mp3_1__Sample = 'mp3:1';
	var mp3_0__Sample = 'mp3:0';
	var mouth_9__Sample = 'mouth:9';
	var mouth_8__Sample = 'mouth:8';
	var mouth_7__Sample = 'mouth:7';
	var mouth_6__Sample = 'mouth:6';
	var mouth_5__Sample = 'mouth:5';
	var mouth_4__Sample = 'mouth:4';
	var mouth_3__Sample = 'mouth:3';
	var mouth_2__Sample = 'mouth:2';
	var mouth_1__Sample = 'mouth:1';
	var mouth_14__Sample = 'mouth:14';
	var mouth_13__Sample = 'mouth:13';
	var mouth_12__Sample = 'mouth:12';
	var mouth_11__Sample = 'mouth:11';
	var mouth_10__Sample = 'mouth:10';
	var mouth_0__Sample = 'mouth:0';
	var moog_6__Sample = 'moog:6';
	var moog_5__Sample = 'moog:5';
	var moog_4__Sample = 'moog:4';
	var moog_3__Sample = 'moog:3';
	var moog_2__Sample = 'moog:2';
	var moog_1__Sample = 'moog:1';
	var moog_0__Sample = 'moog:0';
	var monsterb_5__Sample = 'monsterb:5';
	var monsterb_4__Sample = 'monsterb:4';
	var monsterb_3__Sample = 'monsterb:3';
	var monsterb_2__Sample = 'monsterb:2';
	var monsterb_1__Sample = 'monsterb:1';
	var monsterb_0__Sample = 'monsterb:0';
	var miniyeah_3__Sample = 'miniyeah:3';
	var miniyeah_2__Sample = 'miniyeah:2';
	var miniyeah_1__Sample = 'miniyeah:1';
	var miniyeah_0__Sample = 'miniyeah:0';
	var metal_9__Sample = 'metal:9';
	var metal_8__Sample = 'metal:8';
	var metal_7__Sample = 'metal:7';
	var metal_6__Sample = 'metal:6';
	var metal_5__Sample = 'metal:5';
	var metal_4__Sample = 'metal:4';
	var metal_3__Sample = 'metal:3';
	var metal_2__Sample = 'metal:2';
	var metal_1__Sample = 'metal:1';
	var metal_0__Sample = 'metal:0';
	var mash_1__Sample = 'mash:1';
	var mash_0__Sample = 'mash:0';
	var mash2_3__Sample = 'mash2:3';
	var mash2_2__Sample = 'mash2:2';
	var mash2_1__Sample = 'mash2:1';
	var mash2_0__Sample = 'mash2:0';
	var made_6__Sample = 'made:6';
	var made_5__Sample = 'made:5';
	var made_4__Sample = 'made:4';
	var made_3__Sample = 'made:3';
	var made_2__Sample = 'made:2';
	var made_1__Sample = 'made:1';
	var made_0__Sample = 'made:0';
	var made2_0__Sample = 'made2:0';
	var lt_9__Sample = 'lt:9';
	var lt_8__Sample = 'lt:8';
	var lt_7__Sample = 'lt:7';
	var lt_6__Sample = 'lt:6';
	var lt_5__Sample = 'lt:5';
	var lt_4__Sample = 'lt:4';
	var lt_3__Sample = 'lt:3';
	var lt_2__Sample = 'lt:2';
	var lt_1__Sample = 'lt:1';
	var lt_15__Sample = 'lt:15';
	var lt_14__Sample = 'lt:14';
	var lt_13__Sample = 'lt:13';
	var lt_12__Sample = 'lt:12';
	var lt_11__Sample = 'lt:11';
	var lt_10__Sample = 'lt:10';
	var lt_0__Sample = 'lt:0';
	var lowdark_0__Sample = 'lowdark:0';
	var linnhats_5__Sample = 'linnhats:5';
	var linnhats_4__Sample = 'linnhats:4';
	var linnhats_3__Sample = 'linnhats:3';
	var linnhats_2__Sample = 'linnhats:2';
	var linnhats_1__Sample = 'linnhats:1';
	var linnhats_0__Sample = 'linnhats:0';
	var lighter_9__Sample = 'lighter:9';
	var lighter_8__Sample = 'lighter:8';
	var lighter_7__Sample = 'lighter:7';
	var lighter_6__Sample = 'lighter:6';
	var lighter_5__Sample = 'lighter:5';
	var lighter_4__Sample = 'lighter:4';
	var lighter_3__Sample = 'lighter:3';
	var lighter_32__Sample = 'lighter:32';
	var lighter_31__Sample = 'lighter:31';
	var lighter_30__Sample = 'lighter:30';
	var lighter_2__Sample = 'lighter:2';
	var lighter_29__Sample = 'lighter:29';
	var lighter_28__Sample = 'lighter:28';
	var lighter_27__Sample = 'lighter:27';
	var lighter_26__Sample = 'lighter:26';
	var lighter_25__Sample = 'lighter:25';
	var lighter_24__Sample = 'lighter:24';
	var lighter_23__Sample = 'lighter:23';
	var lighter_22__Sample = 'lighter:22';
	var lighter_21__Sample = 'lighter:21';
	var lighter_20__Sample = 'lighter:20';
	var lighter_1__Sample = 'lighter:1';
	var lighter_19__Sample = 'lighter:19';
	var lighter_18__Sample = 'lighter:18';
	var lighter_17__Sample = 'lighter:17';
	var lighter_16__Sample = 'lighter:16';
	var lighter_15__Sample = 'lighter:15';
	var lighter_14__Sample = 'lighter:14';
	var lighter_13__Sample = 'lighter:13';
	var lighter_12__Sample = 'lighter:12';
	var lighter_11__Sample = 'lighter:11';
	var lighter_10__Sample = 'lighter:10';
	var lighter_0__Sample = 'lighter:0';
	var less_3__Sample = 'less:3';
	var less_2__Sample = 'less:2';
	var less_1__Sample = 'less:1';
	var less_0__Sample = 'less:0';
	var led_0__Sample = 'led:0';
	var latibro_7__Sample = 'latibro:7';
	var latibro_6__Sample = 'latibro:6';
	var latibro_5__Sample = 'latibro:5';
	var latibro_4__Sample = 'latibro:4';
	var latibro_3__Sample = 'latibro:3';
	var latibro_2__Sample = 'latibro:2';
	var latibro_1__Sample = 'latibro:1';
	var latibro_0__Sample = 'latibro:0';
	var kurt_6__Sample = 'kurt:6';
	var kurt_5__Sample = 'kurt:5';
	var kurt_4__Sample = 'kurt:4';
	var kurt_3__Sample = 'kurt:3';
	var kurt_2__Sample = 'kurt:2';
	var kurt_1__Sample = 'kurt:1';
	var kurt_0__Sample = 'kurt:0';
	var koy_1__Sample = 'koy:1';
	var koy_0__Sample = 'koy:0';
	var kicklinn_0__Sample = 'kicklinn:0';
	var jvbass_9__Sample = 'jvbass:9';
	var jvbass_8__Sample = 'jvbass:8';
	var jvbass_7__Sample = 'jvbass:7';
	var jvbass_6__Sample = 'jvbass:6';
	var jvbass_5__Sample = 'jvbass:5';
	var jvbass_4__Sample = 'jvbass:4';
	var jvbass_3__Sample = 'jvbass:3';
	var jvbass_2__Sample = 'jvbass:2';
	var jvbass_1__Sample = 'jvbass:1';
	var jvbass_12__Sample = 'jvbass:12';
	var jvbass_11__Sample = 'jvbass:11';
	var jvbass_10__Sample = 'jvbass:10';
	var jvbass_0__Sample = 'jvbass:0';
	var juno_9__Sample = 'juno:9';
	var juno_8__Sample = 'juno:8';
	var juno_7__Sample = 'juno:7';
	var juno_6__Sample = 'juno:6';
	var juno_5__Sample = 'juno:5';
	var juno_4__Sample = 'juno:4';
	var juno_3__Sample = 'juno:3';
	var juno_2__Sample = 'juno:2';
	var juno_1__Sample = 'juno:1';
	var juno_11__Sample = 'juno:11';
	var juno_10__Sample = 'juno:10';
	var juno_0__Sample = 'juno:0';
	var jungle_9__Sample = 'jungle:9';
	var jungle_8__Sample = 'jungle:8';
	var jungle_7__Sample = 'jungle:7';
	var jungle_6__Sample = 'jungle:6';
	var jungle_5__Sample = 'jungle:5';
	var jungle_4__Sample = 'jungle:4';
	var jungle_3__Sample = 'jungle:3';
	var jungle_2__Sample = 'jungle:2';
	var jungle_1__Sample = 'jungle:1';
	var jungle_12__Sample = 'jungle:12';
	var jungle_11__Sample = 'jungle:11';
	var jungle_10__Sample = 'jungle:10';
	var jungle_0__Sample = 'jungle:0';
	var jungbass_9__Sample = 'jungbass:9';
	var jungbass_8__Sample = 'jungbass:8';
	var jungbass_7__Sample = 'jungbass:7';
	var jungbass_6__Sample = 'jungbass:6';
	var jungbass_5__Sample = 'jungbass:5';
	var jungbass_4__Sample = 'jungbass:4';
	var jungbass_3__Sample = 'jungbass:3';
	var jungbass_2__Sample = 'jungbass:2';
	var jungbass_1__Sample = 'jungbass:1';
	var jungbass_19__Sample = 'jungbass:19';
	var jungbass_18__Sample = 'jungbass:18';
	var jungbass_17__Sample = 'jungbass:17';
	var jungbass_16__Sample = 'jungbass:16';
	var jungbass_15__Sample = 'jungbass:15';
	var jungbass_14__Sample = 'jungbass:14';
	var jungbass_13__Sample = 'jungbass:13';
	var jungbass_12__Sample = 'jungbass:12';
	var jungbass_11__Sample = 'jungbass:11';
	var jungbass_10__Sample = 'jungbass:10';
	var jungbass_0__Sample = 'jungbass:0';
	var jazz_7__Sample = 'jazz:7';
	var jazz_6__Sample = 'jazz:6';
	var jazz_5__Sample = 'jazz:5';
	var jazz_4__Sample = 'jazz:4';
	var jazz_3__Sample = 'jazz:3';
	var jazz_2__Sample = 'jazz:2';
	var jazz_1__Sample = 'jazz:1';
	var jazz_0__Sample = 'jazz:0';
	var invaders_9__Sample = 'invaders:9';
	var invaders_8__Sample = 'invaders:8';
	var invaders_7__Sample = 'invaders:7';
	var invaders_6__Sample = 'invaders:6';
	var invaders_5__Sample = 'invaders:5';
	var invaders_4__Sample = 'invaders:4';
	var invaders_3__Sample = 'invaders:3';
	var invaders_2__Sample = 'invaders:2';
	var invaders_1__Sample = 'invaders:1';
	var invaders_17__Sample = 'invaders:17';
	var invaders_16__Sample = 'invaders:16';
	var invaders_15__Sample = 'invaders:15';
	var invaders_14__Sample = 'invaders:14';
	var invaders_13__Sample = 'invaders:13';
	var invaders_12__Sample = 'invaders:12';
	var invaders_11__Sample = 'invaders:11';
	var invaders_10__Sample = 'invaders:10';
	var invaders_0__Sample = 'invaders:0';
	var intentionalSilenceForInternalUseOnly__Sample =
		'intentionalSilenceForInternalUseOnly';
	var insect_2__Sample = 'insect:2';
	var insect_1__Sample = 'insect:1';
	var insect_0__Sample = 'insect:0';
	var industrial_9__Sample = 'industrial:9';
	var industrial_8__Sample = 'industrial:8';
	var industrial_7__Sample = 'industrial:7';
	var industrial_6__Sample = 'industrial:6';
	var industrial_5__Sample = 'industrial:5';
	var industrial_4__Sample = 'industrial:4';
	var industrial_3__Sample = 'industrial:3';
	var industrial_31__Sample = 'industrial:31';
	var industrial_30__Sample = 'industrial:30';
	var industrial_2__Sample = 'industrial:2';
	var industrial_29__Sample = 'industrial:29';
	var industrial_28__Sample = 'industrial:28';
	var industrial_27__Sample = 'industrial:27';
	var industrial_26__Sample = 'industrial:26';
	var industrial_25__Sample = 'industrial:25';
	var industrial_24__Sample = 'industrial:24';
	var industrial_23__Sample = 'industrial:23';
	var industrial_22__Sample = 'industrial:22';
	var industrial_21__Sample = 'industrial:21';
	var industrial_20__Sample = 'industrial:20';
	var industrial_1__Sample = 'industrial:1';
	var industrial_19__Sample = 'industrial:19';
	var industrial_18__Sample = 'industrial:18';
	var industrial_17__Sample = 'industrial:17';
	var industrial_16__Sample = 'industrial:16';
	var industrial_15__Sample = 'industrial:15';
	var industrial_14__Sample = 'industrial:14';
	var industrial_13__Sample = 'industrial:13';
	var industrial_12__Sample = 'industrial:12';
	var industrial_11__Sample = 'industrial:11';
	var industrial_10__Sample = 'industrial:10';
	var industrial_0__Sample = 'industrial:0';
	var incoming_7__Sample = 'incoming:7';
	var incoming_6__Sample = 'incoming:6';
	var incoming_5__Sample = 'incoming:5';
	var incoming_4__Sample = 'incoming:4';
	var incoming_3__Sample = 'incoming:3';
	var incoming_2__Sample = 'incoming:2';
	var incoming_1__Sample = 'incoming:1';
	var incoming_0__Sample = 'incoming:0';
	var ifdrums_2__Sample = 'ifdrums:2';
	var ifdrums_1__Sample = 'ifdrums:1';
	var ifdrums_0__Sample = 'ifdrums:0';
	var if_4__Sample = 'if:4';
	var if_3__Sample = 'if:3';
	var if_2__Sample = 'if:2';
	var if_1__Sample = 'if:1';
	var if_0__Sample = 'if:0';
	var ht_9__Sample = 'ht:9';
	var ht_8__Sample = 'ht:8';
	var ht_7__Sample = 'ht:7';
	var ht_6__Sample = 'ht:6';
	var ht_5__Sample = 'ht:5';
	var ht_4__Sample = 'ht:4';
	var ht_3__Sample = 'ht:3';
	var ht_2__Sample = 'ht:2';
	var ht_1__Sample = 'ht:1';
	var ht_15__Sample = 'ht:15';
	var ht_14__Sample = 'ht:14';
	var ht_13__Sample = 'ht:13';
	var ht_12__Sample = 'ht:12';
	var ht_11__Sample = 'ht:11';
	var ht_10__Sample = 'ht:10';
	var ht_0__Sample = 'ht:0';
	var house_7__Sample = 'house:7';
	var house_6__Sample = 'house:6';
	var house_5__Sample = 'house:5';
	var house_4__Sample = 'house:4';
	var house_3__Sample = 'house:3';
	var house_2__Sample = 'house:2';
	var house_1__Sample = 'house:1';
	var house_0__Sample = 'house:0';
	var hoover_5__Sample = 'hoover:5';
	var hoover_4__Sample = 'hoover:4';
	var hoover_3__Sample = 'hoover:3';
	var hoover_2__Sample = 'hoover:2';
	var hoover_1__Sample = 'hoover:1';
	var hoover_0__Sample = 'hoover:0';
	var hollowair_0__Sample = 'hollowair:0';
	var ho_5__Sample = 'ho:5';
	var ho_4__Sample = 'ho:4';
	var ho_3__Sample = 'ho:3';
	var ho_2__Sample = 'ho:2';
	var ho_1__Sample = 'ho:1';
	var ho_0__Sample = 'ho:0';
	var hmm_0__Sample = 'hmm:0';
	var hit_5__Sample = 'hit:5';
	var hit_4__Sample = 'hit:4';
	var hit_3__Sample = 'hit:3';
	var hit_2__Sample = 'hit:2';
	var hit_1__Sample = 'hit:1';
	var hit_0__Sample = 'hit:0';
	var hh_9__Sample = 'hh:9';
	var hh_8__Sample = 'hh:8';
	var hh_7__Sample = 'hh:7';
	var hh_6__Sample = 'hh:6';
	var hh_5__Sample = 'hh:5';
	var hh_4__Sample = 'hh:4';
	var hh_3__Sample = 'hh:3';
	var hh_2__Sample = 'hh:2';
	var hh_1__Sample = 'hh:1';
	var hh_12__Sample = 'hh:12';
	var hh_11__Sample = 'hh:11';
	var hh_10__Sample = 'hh:10';
	var hh_0__Sample = 'hh:0';
	var hh27_9__Sample = 'hh27:9';
	var hh27_8__Sample = 'hh27:8';
	var hh27_7__Sample = 'hh27:7';
	var hh27_6__Sample = 'hh27:6';
	var hh27_5__Sample = 'hh27:5';
	var hh27_4__Sample = 'hh27:4';
	var hh27_3__Sample = 'hh27:3';
	var hh27_2__Sample = 'hh27:2';
	var hh27_1__Sample = 'hh27:1';
	var hh27_12__Sample = 'hh27:12';
	var hh27_11__Sample = 'hh27:11';
	var hh27_10__Sample = 'hh27:10';
	var hh27_0__Sample = 'hh27:0';
	var hc_5__Sample = 'hc:5';
	var hc_4__Sample = 'hc:4';
	var hc_3__Sample = 'hc:3';
	var hc_2__Sample = 'hc:2';
	var hc_1__Sample = 'hc:1';
	var hc_0__Sample = 'hc:0';
	var haw_5__Sample = 'haw:5';
	var haw_4__Sample = 'haw:4';
	var haw_3__Sample = 'haw:3';
	var haw_2__Sample = 'haw:2';
	var haw_1__Sample = 'haw:1';
	var haw_0__Sample = 'haw:0';
	var harmonium_0__Sample = 'harmonium:0';
	var hardkick_5__Sample = 'hardkick:5';
	var hardkick_4__Sample = 'hardkick:4';
	var hardkick_3__Sample = 'hardkick:3';
	var hardkick_2__Sample = 'hardkick:2';
	var hardkick_1__Sample = 'hardkick:1';
	var hardkick_0__Sample = 'hardkick:0';
	var hardcore_9__Sample = 'hardcore:9';
	var hardcore_8__Sample = 'hardcore:8';
	var hardcore_7__Sample = 'hardcore:7';
	var hardcore_6__Sample = 'hardcore:6';
	var hardcore_5__Sample = 'hardcore:5';
	var hardcore_4__Sample = 'hardcore:4';
	var hardcore_3__Sample = 'hardcore:3';
	var hardcore_2__Sample = 'hardcore:2';
	var hardcore_1__Sample = 'hardcore:1';
	var hardcore_11__Sample = 'hardcore:11';
	var hardcore_10__Sample = 'hardcore:10';
	var hardcore_0__Sample = 'hardcore:0';
	var hand_9__Sample = 'hand:9';
	var hand_8__Sample = 'hand:8';
	var hand_7__Sample = 'hand:7';
	var hand_6__Sample = 'hand:6';
	var hand_5__Sample = 'hand:5';
	var hand_4__Sample = 'hand:4';
	var hand_3__Sample = 'hand:3';
	var hand_2__Sample = 'hand:2';
	var hand_1__Sample = 'hand:1';
	var hand_16__Sample = 'hand:16';
	var hand_15__Sample = 'hand:15';
	var hand_14__Sample = 'hand:14';
	var hand_13__Sample = 'hand:13';
	var hand_12__Sample = 'hand:12';
	var hand_11__Sample = 'hand:11';
	var hand_10__Sample = 'hand:10';
	var hand_0__Sample = 'hand:0';
	var h_6__Sample = 'h:6';
	var h_5__Sample = 'h:5';
	var h_4__Sample = 'h:4';
	var h_3__Sample = 'h:3';
	var h_2__Sample = 'h:2';
	var h_1__Sample = 'h:1';
	var h_0__Sample = 'h:0';
	var gtr_2__Sample = 'gtr:2';
	var gtr_1__Sample = 'gtr:1';
	var gtr_0__Sample = 'gtr:0';
	var gretsch_9__Sample = 'gretsch:9';
	var gretsch_8__Sample = 'gretsch:8';
	var gretsch_7__Sample = 'gretsch:7';
	var gretsch_6__Sample = 'gretsch:6';
	var gretsch_5__Sample = 'gretsch:5';
	var gretsch_4__Sample = 'gretsch:4';
	var gretsch_3__Sample = 'gretsch:3';
	var gretsch_2__Sample = 'gretsch:2';
	var gretsch_23__Sample = 'gretsch:23';
	var gretsch_22__Sample = 'gretsch:22';
	var gretsch_21__Sample = 'gretsch:21';
	var gretsch_20__Sample = 'gretsch:20';
	var gretsch_1__Sample = 'gretsch:1';
	var gretsch_19__Sample = 'gretsch:19';
	var gretsch_18__Sample = 'gretsch:18';
	var gretsch_17__Sample = 'gretsch:17';
	var gretsch_16__Sample = 'gretsch:16';
	var gretsch_15__Sample = 'gretsch:15';
	var gretsch_14__Sample = 'gretsch:14';
	var gretsch_13__Sample = 'gretsch:13';
	var gretsch_12__Sample = 'gretsch:12';
	var gretsch_11__Sample = 'gretsch:11';
	var gretsch_10__Sample = 'gretsch:10';
	var gretsch_0__Sample = 'gretsch:0';
	var glitch_7__Sample = 'glitch:7';
	var glitch_6__Sample = 'glitch:6';
	var glitch_5__Sample = 'glitch:5';
	var glitch_4__Sample = 'glitch:4';
	var glitch_3__Sample = 'glitch:3';
	var glitch_2__Sample = 'glitch:2';
	var glitch_1__Sample = 'glitch:1';
	var glitch_0__Sample = 'glitch:0';
	var glitch2_7__Sample = 'glitch2:7';
	var glitch2_6__Sample = 'glitch2:6';
	var glitch2_5__Sample = 'glitch2:5';
	var glitch2_4__Sample = 'glitch2:4';
	var glitch2_3__Sample = 'glitch2:3';
	var glitch2_2__Sample = 'glitch2:2';
	var glitch2_1__Sample = 'glitch2:1';
	var glitch2_0__Sample = 'glitch2:0';
	var glasstap_2__Sample = 'glasstap:2';
	var glasstap_1__Sample = 'glasstap:1';
	var glasstap_0__Sample = 'glasstap:0';
	var gabbalouder_3__Sample = 'gabbalouder:3';
	var gabbalouder_2__Sample = 'gabbalouder:2';
	var gabbalouder_1__Sample = 'gabbalouder:1';
	var gabbalouder_0__Sample = 'gabbalouder:0';
	var gabbaloud_3__Sample = 'gabbaloud:3';
	var gabbaloud_2__Sample = 'gabbaloud:2';
	var gabbaloud_1__Sample = 'gabbaloud:1';
	var gabbaloud_0__Sample = 'gabbaloud:0';
	var gabba_3__Sample = 'gabba:3';
	var gabba_2__Sample = 'gabba:2';
	var gabba_1__Sample = 'gabba:1';
	var gabba_0__Sample = 'gabba:0';
	var gab_9__Sample = 'gab:9';
	var gab_8__Sample = 'gab:8';
	var gab_7__Sample = 'gab:7';
	var gab_6__Sample = 'gab:6';
	var gab_5__Sample = 'gab:5';
	var gab_4__Sample = 'gab:4';
	var gab_3__Sample = 'gab:3';
	var gab_2__Sample = 'gab:2';
	var gab_1__Sample = 'gab:1';
	var gab_0__Sample = 'gab:0';
	var future_9__Sample = 'future:9';
	var future_8__Sample = 'future:8';
	var future_7__Sample = 'future:7';
	var future_6__Sample = 'future:6';
	var future_5__Sample = 'future:5';
	var future_4__Sample = 'future:4';
	var future_3__Sample = 'future:3';
	var future_2__Sample = 'future:2';
	var future_1__Sample = 'future:1';
	var future_16__Sample = 'future:16';
	var future_15__Sample = 'future:15';
	var future_14__Sample = 'future:14';
	var future_13__Sample = 'future:13';
	var future_12__Sample = 'future:12';
	var future_11__Sample = 'future:11';
	var future_10__Sample = 'future:10';
	var future_0__Sample = 'future:0';
	var foo_9__Sample = 'foo:9';
	var foo_8__Sample = 'foo:8';
	var foo_7__Sample = 'foo:7';
	var foo_6__Sample = 'foo:6';
	var foo_5__Sample = 'foo:5';
	var foo_4__Sample = 'foo:4';
	var foo_3__Sample = 'foo:3';
	var foo_2__Sample = 'foo:2';
	var foo_26__Sample = 'foo:26';
	var foo_25__Sample = 'foo:25';
	var foo_24__Sample = 'foo:24';
	var foo_23__Sample = 'foo:23';
	var foo_22__Sample = 'foo:22';
	var foo_21__Sample = 'foo:21';
	var foo_20__Sample = 'foo:20';
	var foo_1__Sample = 'foo:1';
	var foo_19__Sample = 'foo:19';
	var foo_18__Sample = 'foo:18';
	var foo_17__Sample = 'foo:17';
	var foo_16__Sample = 'foo:16';
	var foo_15__Sample = 'foo:15';
	var foo_14__Sample = 'foo:14';
	var foo_13__Sample = 'foo:13';
	var foo_12__Sample = 'foo:12';
	var foo_11__Sample = 'foo:11';
	var foo_10__Sample = 'foo:10';
	var foo_0__Sample = 'foo:0';
	var fm_9__Sample = 'fm:9';
	var fm_8__Sample = 'fm:8';
	var fm_7__Sample = 'fm:7';
	var fm_6__Sample = 'fm:6';
	var fm_5__Sample = 'fm:5';
	var fm_4__Sample = 'fm:4';
	var fm_3__Sample = 'fm:3';
	var fm_2__Sample = 'fm:2';
	var fm_1__Sample = 'fm:1';
	var fm_16__Sample = 'fm:16';
	var fm_15__Sample = 'fm:15';
	var fm_14__Sample = 'fm:14';
	var fm_13__Sample = 'fm:13';
	var fm_12__Sample = 'fm:12';
	var fm_11__Sample = 'fm:11';
	var fm_10__Sample = 'fm:10';
	var fm_0__Sample = 'fm:0';
	var flick_9__Sample = 'flick:9';
	var flick_8__Sample = 'flick:8';
	var flick_7__Sample = 'flick:7';
	var flick_6__Sample = 'flick:6';
	var flick_5__Sample = 'flick:5';
	var flick_4__Sample = 'flick:4';
	var flick_3__Sample = 'flick:3';
	var flick_2__Sample = 'flick:2';
	var flick_1__Sample = 'flick:1';
	var flick_16__Sample = 'flick:16';
	var flick_15__Sample = 'flick:15';
	var flick_14__Sample = 'flick:14';
	var flick_13__Sample = 'flick:13';
	var flick_12__Sample = 'flick:12';
	var flick_11__Sample = 'flick:11';
	var flick_10__Sample = 'flick:10';
	var flick_0__Sample = 'flick:0';
	var fire_0__Sample = 'fire:0';
	var fest_0__Sample = 'fest:0';
	var feelfx_7__Sample = 'feelfx:7';
	var feelfx_6__Sample = 'feelfx:6';
	var feelfx_5__Sample = 'feelfx:5';
	var feelfx_4__Sample = 'feelfx:4';
	var feelfx_3__Sample = 'feelfx:3';
	var feelfx_2__Sample = 'feelfx:2';
	var feelfx_1__Sample = 'feelfx:1';
	var feelfx_0__Sample = 'feelfx:0';
	var feel_6__Sample = 'feel:6';
	var feel_5__Sample = 'feel:5';
	var feel_4__Sample = 'feel:4';
	var feel_3__Sample = 'feel:3';
	var feel_2__Sample = 'feel:2';
	var feel_1__Sample = 'feel:1';
	var feel_0__Sample = 'feel:0';
	var f_0__Sample = 'f:0';
	var erk_0__Sample = 'erk:0';
	var em2_5__Sample = 'em2:5';
	var em2_4__Sample = 'em2:4';
	var em2_3__Sample = 'em2:3';
	var em2_2__Sample = 'em2:2';
	var em2_1__Sample = 'em2:1';
	var em2_0__Sample = 'em2:0';
	var electro1_9__Sample = 'electro1:9';
	var electro1_8__Sample = 'electro1:8';
	var electro1_7__Sample = 'electro1:7';
	var electro1_6__Sample = 'electro1:6';
	var electro1_5__Sample = 'electro1:5';
	var electro1_4__Sample = 'electro1:4';
	var electro1_3__Sample = 'electro1:3';
	var electro1_2__Sample = 'electro1:2';
	var electro1_1__Sample = 'electro1:1';
	var electro1_12__Sample = 'electro1:12';
	var electro1_11__Sample = 'electro1:11';
	var electro1_10__Sample = 'electro1:10';
	var electro1_0__Sample = 'electro1:0';
	var east_8__Sample = 'east:8';
	var east_7__Sample = 'east:7';
	var east_6__Sample = 'east:6';
	var east_5__Sample = 'east:5';
	var east_4__Sample = 'east:4';
	var east_3__Sample = 'east:3';
	var east_2__Sample = 'east:2';
	var east_1__Sample = 'east:1';
	var east_0__Sample = 'east:0';
	var e_7__Sample = 'e:7';
	var e_6__Sample = 'e:6';
	var e_5__Sample = 'e:5';
	var e_4__Sample = 'e:4';
	var e_3__Sample = 'e:3';
	var e_2__Sample = 'e:2';
	var e_1__Sample = 'e:1';
	var e_0__Sample = 'e:0';
	var drumtraks_9__Sample = 'drumtraks:9';
	var drumtraks_8__Sample = 'drumtraks:8';
	var drumtraks_7__Sample = 'drumtraks:7';
	var drumtraks_6__Sample = 'drumtraks:6';
	var drumtraks_5__Sample = 'drumtraks:5';
	var drumtraks_4__Sample = 'drumtraks:4';
	var drumtraks_3__Sample = 'drumtraks:3';
	var drumtraks_2__Sample = 'drumtraks:2';
	var drumtraks_1__Sample = 'drumtraks:1';
	var drumtraks_12__Sample = 'drumtraks:12';
	var drumtraks_11__Sample = 'drumtraks:11';
	var drumtraks_10__Sample = 'drumtraks:10';
	var drumtraks_0__Sample = 'drumtraks:0';
	var drum_5__Sample = 'drum:5';
	var drum_4__Sample = 'drum:4';
	var drum_3__Sample = 'drum:3';
	var drum_2__Sample = 'drum:2';
	var drum_1__Sample = 'drum:1';
	var drum_0__Sample = 'drum:0';
	var dr_few_7__Sample = 'dr_few:7';
	var dr_few_6__Sample = 'dr_few:6';
	var dr_few_5__Sample = 'dr_few:5';
	var dr_few_4__Sample = 'dr_few:4';
	var dr_few_3__Sample = 'dr_few:3';
	var dr_few_2__Sample = 'dr_few:2';
	var dr_few_1__Sample = 'dr_few:1';
	var dr_few_0__Sample = 'dr_few:0';
	var dr_9__Sample = 'dr:9';
	var dr_8__Sample = 'dr:8';
	var dr_7__Sample = 'dr:7';
	var dr_6__Sample = 'dr:6';
	var dr_5__Sample = 'dr:5';
	var dr_4__Sample = 'dr:4';
	var dr_41__Sample = 'dr:41';
	var dr_40__Sample = 'dr:40';
	var dr_3__Sample = 'dr:3';
	var dr_39__Sample = 'dr:39';
	var dr_38__Sample = 'dr:38';
	var dr_37__Sample = 'dr:37';
	var dr_36__Sample = 'dr:36';
	var dr_35__Sample = 'dr:35';
	var dr_34__Sample = 'dr:34';
	var dr_33__Sample = 'dr:33';
	var dr_32__Sample = 'dr:32';
	var dr_31__Sample = 'dr:31';
	var dr_30__Sample = 'dr:30';
	var dr_2__Sample = 'dr:2';
	var dr_29__Sample = 'dr:29';
	var dr_28__Sample = 'dr:28';
	var dr_27__Sample = 'dr:27';
	var dr_26__Sample = 'dr:26';
	var dr_25__Sample = 'dr:25';
	var dr_24__Sample = 'dr:24';
	var dr_23__Sample = 'dr:23';
	var dr_22__Sample = 'dr:22';
	var dr_21__Sample = 'dr:21';
	var dr_20__Sample = 'dr:20';
	var dr_1__Sample = 'dr:1';
	var dr_19__Sample = 'dr:19';
	var dr_18__Sample = 'dr:18';
	var dr_17__Sample = 'dr:17';
	var dr_16__Sample = 'dr:16';
	var dr_15__Sample = 'dr:15';
	var dr_14__Sample = 'dr:14';
	var dr_13__Sample = 'dr:13';
	var dr_12__Sample = 'dr:12';
	var dr_11__Sample = 'dr:11';
	var dr_10__Sample = 'dr:10';
	var dr_0__Sample = 'dr:0';
	var dr55_3__Sample = 'dr55:3';
	var dr55_2__Sample = 'dr55:2';
	var dr55_1__Sample = 'dr55:1';
	var dr55_0__Sample = 'dr55:0';
	var dr2_5__Sample = 'dr2:5';
	var dr2_4__Sample = 'dr2:4';
	var dr2_3__Sample = 'dr2:3';
	var dr2_2__Sample = 'dr2:2';
	var dr2_1__Sample = 'dr2:1';
	var dr2_0__Sample = 'dr2:0';
	var dorkbot_1__Sample = 'dorkbot:1';
	var dorkbot_0__Sample = 'dorkbot:0';
	var dork2_3__Sample = 'dork2:3';
	var dork2_2__Sample = 'dork2:2';
	var dork2_1__Sample = 'dork2:1';
	var dork2_0__Sample = 'dork2:0';
	var dist_9__Sample = 'dist:9';
	var dist_8__Sample = 'dist:8';
	var dist_7__Sample = 'dist:7';
	var dist_6__Sample = 'dist:6';
	var dist_5__Sample = 'dist:5';
	var dist_4__Sample = 'dist:4';
	var dist_3__Sample = 'dist:3';
	var dist_2__Sample = 'dist:2';
	var dist_1__Sample = 'dist:1';
	var dist_15__Sample = 'dist:15';
	var dist_14__Sample = 'dist:14';
	var dist_13__Sample = 'dist:13';
	var dist_12__Sample = 'dist:12';
	var dist_11__Sample = 'dist:11';
	var dist_10__Sample = 'dist:10';
	var dist_0__Sample = 'dist:0';
	var diphone_9__Sample = 'diphone:9';
	var diphone_8__Sample = 'diphone:8';
	var diphone_7__Sample = 'diphone:7';
	var diphone_6__Sample = 'diphone:6';
	var diphone_5__Sample = 'diphone:5';
	var diphone_4__Sample = 'diphone:4';
	var diphone_3__Sample = 'diphone:3';
	var diphone_37__Sample = 'diphone:37';
	var diphone_36__Sample = 'diphone:36';
	var diphone_35__Sample = 'diphone:35';
	var diphone_34__Sample = 'diphone:34';
	var diphone_33__Sample = 'diphone:33';
	var diphone_32__Sample = 'diphone:32';
	var diphone_31__Sample = 'diphone:31';
	var diphone_30__Sample = 'diphone:30';
	var diphone_2__Sample = 'diphone:2';
	var diphone_29__Sample = 'diphone:29';
	var diphone_28__Sample = 'diphone:28';
	var diphone_27__Sample = 'diphone:27';
	var diphone_26__Sample = 'diphone:26';
	var diphone_25__Sample = 'diphone:25';
	var diphone_24__Sample = 'diphone:24';
	var diphone_23__Sample = 'diphone:23';
	var diphone_22__Sample = 'diphone:22';
	var diphone_21__Sample = 'diphone:21';
	var diphone_20__Sample = 'diphone:20';
	var diphone_1__Sample = 'diphone:1';
	var diphone_19__Sample = 'diphone:19';
	var diphone_18__Sample = 'diphone:18';
	var diphone_17__Sample = 'diphone:17';
	var diphone_16__Sample = 'diphone:16';
	var diphone_15__Sample = 'diphone:15';
	var diphone_14__Sample = 'diphone:14';
	var diphone_13__Sample = 'diphone:13';
	var diphone_12__Sample = 'diphone:12';
	var diphone_11__Sample = 'diphone:11';
	var diphone_10__Sample = 'diphone:10';
	var diphone_0__Sample = 'diphone:0';
	var diphone2_9__Sample = 'diphone2:9';
	var diphone2_8__Sample = 'diphone2:8';
	var diphone2_7__Sample = 'diphone2:7';
	var diphone2_6__Sample = 'diphone2:6';
	var diphone2_5__Sample = 'diphone2:5';
	var diphone2_4__Sample = 'diphone2:4';
	var diphone2_3__Sample = 'diphone2:3';
	var diphone2_2__Sample = 'diphone2:2';
	var diphone2_1__Sample = 'diphone2:1';
	var diphone2_11__Sample = 'diphone2:11';
	var diphone2_10__Sample = 'diphone2:10';
	var diphone2_0__Sample = 'diphone2:0';
	var digeridoo_0__Sample = 'digeridoo:0';
	var db_9__Sample = 'db:9';
	var db_8__Sample = 'db:8';
	var db_7__Sample = 'db:7';
	var db_6__Sample = 'db:6';
	var db_5__Sample = 'db:5';
	var db_4__Sample = 'db:4';
	var db_3__Sample = 'db:3';
	var db_2__Sample = 'db:2';
	var db_1__Sample = 'db:1';
	var db_12__Sample = 'db:12';
	var db_11__Sample = 'db:11';
	var db_10__Sample = 'db:10';
	var db_0__Sample = 'db:0';
	var d_3__Sample = 'd:3';
	var d_2__Sample = 'd:2';
	var d_1__Sample = 'd:1';
	var d_0__Sample = 'd:0';
	var crow_3__Sample = 'crow:3';
	var crow_2__Sample = 'crow:2';
	var crow_1__Sample = 'crow:1';
	var crow_0__Sample = 'crow:0';
	var cr_5__Sample = 'cr:5';
	var cr_4__Sample = 'cr:4';
	var cr_3__Sample = 'cr:3';
	var cr_2__Sample = 'cr:2';
	var cr_1__Sample = 'cr:1';
	var cr_0__Sample = 'cr:0';
	var cp_1__Sample = 'cp:1';
	var cp_0__Sample = 'cp:0';
	var cosmicg_9__Sample = 'cosmicg:9';
	var cosmicg_8__Sample = 'cosmicg:8';
	var cosmicg_7__Sample = 'cosmicg:7';
	var cosmicg_6__Sample = 'cosmicg:6';
	var cosmicg_5__Sample = 'cosmicg:5';
	var cosmicg_4__Sample = 'cosmicg:4';
	var cosmicg_3__Sample = 'cosmicg:3';
	var cosmicg_2__Sample = 'cosmicg:2';
	var cosmicg_1__Sample = 'cosmicg:1';
	var cosmicg_14__Sample = 'cosmicg:14';
	var cosmicg_13__Sample = 'cosmicg:13';
	var cosmicg_12__Sample = 'cosmicg:12';
	var cosmicg_11__Sample = 'cosmicg:11';
	var cosmicg_10__Sample = 'cosmicg:10';
	var cosmicg_0__Sample = 'cosmicg:0';
	var control_1__Sample = 'control:1';
	var control_0__Sample = 'control:0';
	var coins_0__Sample = 'coins:0';
	var co_3__Sample = 'co:3';
	var co_2__Sample = 'co:2';
	var co_1__Sample = 'co:1';
	var co_0__Sample = 'co:0';
	var clubkick_4__Sample = 'clubkick:4';
	var clubkick_3__Sample = 'clubkick:3';
	var clubkick_2__Sample = 'clubkick:2';
	var clubkick_1__Sample = 'clubkick:1';
	var clubkick_0__Sample = 'clubkick:0';
	var click_3__Sample = 'click:3';
	var click_2__Sample = 'click:2';
	var click_1__Sample = 'click:1';
	var click_0__Sample = 'click:0';
	var clak_1__Sample = 'clak:1';
	var clak_0__Sample = 'clak:0';
	var circus_2__Sample = 'circus:2';
	var circus_1__Sample = 'circus:1';
	var circus_0__Sample = 'circus:0';
	var chin_3__Sample = 'chin:3';
	var chin_2__Sample = 'chin:2';
	var chin_1__Sample = 'chin:1';
	var chin_0__Sample = 'chin:0';
	var cc_5__Sample = 'cc:5';
	var cc_4__Sample = 'cc:4';
	var cc_3__Sample = 'cc:3';
	var cc_2__Sample = 'cc:2';
	var cc_1__Sample = 'cc:1';
	var cc_0__Sample = 'cc:0';
	var cb_0__Sample = 'cb:0';
	var casio_2__Sample = 'casio:2';
	var casio_1__Sample = 'casio:1';
	var casio_0__Sample = 'casio:0';
	var can_9__Sample = 'can:9';
	var can_8__Sample = 'can:8';
	var can_7__Sample = 'can:7';
	var can_6__Sample = 'can:6';
	var can_5__Sample = 'can:5';
	var can_4__Sample = 'can:4';
	var can_3__Sample = 'can:3';
	var can_2__Sample = 'can:2';
	var can_1__Sample = 'can:1';
	var can_13__Sample = 'can:13';
	var can_12__Sample = 'can:12';
	var can_11__Sample = 'can:11';
	var can_10__Sample = 'can:10';
	var can_0__Sample = 'can:0';
	var bubble_7__Sample = 'bubble:7';
	var bubble_6__Sample = 'bubble:6';
	var bubble_5__Sample = 'bubble:5';
	var bubble_4__Sample = 'bubble:4';
	var bubble_3__Sample = 'bubble:3';
	var bubble_2__Sample = 'bubble:2';
	var bubble_1__Sample = 'bubble:1';
	var bubble_0__Sample = 'bubble:0';
	var breath_0__Sample = 'breath:0';
	var breaks165_0__Sample = 'breaks165:0';
	var breaks157_0__Sample = 'breaks157:0';
	var breaks152_0__Sample = 'breaks152:0';
	var breaks125_1__Sample = 'breaks125:1';
	var breaks125_0__Sample = 'breaks125:0';
	var bottle_9__Sample = 'bottle:9';
	var bottle_8__Sample = 'bottle:8';
	var bottle_7__Sample = 'bottle:7';
	var bottle_6__Sample = 'bottle:6';
	var bottle_5__Sample = 'bottle:5';
	var bottle_4__Sample = 'bottle:4';
	var bottle_3__Sample = 'bottle:3';
	var bottle_2__Sample = 'bottle:2';
	var bottle_1__Sample = 'bottle:1';
	var bottle_12__Sample = 'bottle:12';
	var bottle_11__Sample = 'bottle:11';
	var bottle_10__Sample = 'bottle:10';
	var bottle_0__Sample = 'bottle:0';
	var blue_1__Sample = 'blue:1';
	var blue_0__Sample = 'blue:0';
	var blip_1__Sample = 'blip:1';
	var blip_0__Sample = 'blip:0';
	var bleep_9__Sample = 'bleep:9';
	var bleep_8__Sample = 'bleep:8';
	var bleep_7__Sample = 'bleep:7';
	var bleep_6__Sample = 'bleep:6';
	var bleep_5__Sample = 'bleep:5';
	var bleep_4__Sample = 'bleep:4';
	var bleep_3__Sample = 'bleep:3';
	var bleep_2__Sample = 'bleep:2';
	var bleep_1__Sample = 'bleep:1';
	var bleep_12__Sample = 'bleep:12';
	var bleep_11__Sample = 'bleep:11';
	var bleep_10__Sample = 'bleep:10';
	var bleep_0__Sample = 'bleep:0';
	var birds_9__Sample = 'birds:9';
	var birds_8__Sample = 'birds:8';
	var birds_7__Sample = 'birds:7';
	var birds_6__Sample = 'birds:6';
	var birds_5__Sample = 'birds:5';
	var birds_4__Sample = 'birds:4';
	var birds_3__Sample = 'birds:3';
	var birds_2__Sample = 'birds:2';
	var birds_1__Sample = 'birds:1';
	var birds_0__Sample = 'birds:0';
	var birds3_9__Sample = 'birds3:9';
	var birds3_8__Sample = 'birds3:8';
	var birds3_7__Sample = 'birds3:7';
	var birds3_6__Sample = 'birds3:6';
	var birds3_5__Sample = 'birds3:5';
	var birds3_4__Sample = 'birds3:4';
	var birds3_3__Sample = 'birds3:3';
	var birds3_2__Sample = 'birds3:2';
	var birds3_1__Sample = 'birds3:1';
	var birds3_18__Sample = 'birds3:18';
	var birds3_17__Sample = 'birds3:17';
	var birds3_16__Sample = 'birds3:16';
	var birds3_15__Sample = 'birds3:15';
	var birds3_14__Sample = 'birds3:14';
	var birds3_13__Sample = 'birds3:13';
	var birds3_12__Sample = 'birds3:12';
	var birds3_11__Sample = 'birds3:11';
	var birds3_10__Sample = 'birds3:10';
	var birds3_0__Sample = 'birds3:0';
	var bin_1__Sample = 'bin:1';
	var bin_0__Sample = 'bin:0';
	var bev_1__Sample = 'bev:1';
	var bev_0__Sample = 'bev:0';
	var bend_3__Sample = 'bend:3';
	var bend_2__Sample = 'bend:2';
	var bend_1__Sample = 'bend:1';
	var bend_0__Sample = 'bend:0';
	var bd_9__Sample = 'bd:9';
	var bd_8__Sample = 'bd:8';
	var bd_7__Sample = 'bd:7';
	var bd_6__Sample = 'bd:6';
	var bd_5__Sample = 'bd:5';
	var bd_4__Sample = 'bd:4';
	var bd_3__Sample = 'bd:3';
	var bd_2__Sample = 'bd:2';
	var bd_23__Sample = 'bd:23';
	var bd_22__Sample = 'bd:22';
	var bd_21__Sample = 'bd:21';
	var bd_20__Sample = 'bd:20';
	var bd_1__Sample = 'bd:1';
	var bd_19__Sample = 'bd:19';
	var bd_18__Sample = 'bd:18';
	var bd_17__Sample = 'bd:17';
	var bd_16__Sample = 'bd:16';
	var bd_15__Sample = 'bd:15';
	var bd_14__Sample = 'bd:14';
	var bd_13__Sample = 'bd:13';
	var bd_12__Sample = 'bd:12';
	var bd_11__Sample = 'bd:11';
	var bd_10__Sample = 'bd:10';
	var bd_0__Sample = 'bd:0';
	var battles_1__Sample = 'battles:1';
	var battles_0__Sample = 'battles:0';
	var bassfoo_2__Sample = 'bassfoo:2';
	var bassfoo_1__Sample = 'bassfoo:1';
	var bassfoo_0__Sample = 'bassfoo:0';
	var bassdm_9__Sample = 'bassdm:9';
	var bassdm_8__Sample = 'bassdm:8';
	var bassdm_7__Sample = 'bassdm:7';
	var bassdm_6__Sample = 'bassdm:6';
	var bassdm_5__Sample = 'bassdm:5';
	var bassdm_4__Sample = 'bassdm:4';
	var bassdm_3__Sample = 'bassdm:3';
	var bassdm_2__Sample = 'bassdm:2';
	var bassdm_23__Sample = 'bassdm:23';
	var bassdm_22__Sample = 'bassdm:22';
	var bassdm_21__Sample = 'bassdm:21';
	var bassdm_20__Sample = 'bassdm:20';
	var bassdm_1__Sample = 'bassdm:1';
	var bassdm_19__Sample = 'bassdm:19';
	var bassdm_18__Sample = 'bassdm:18';
	var bassdm_17__Sample = 'bassdm:17';
	var bassdm_16__Sample = 'bassdm:16';
	var bassdm_15__Sample = 'bassdm:15';
	var bassdm_14__Sample = 'bassdm:14';
	var bassdm_13__Sample = 'bassdm:13';
	var bassdm_12__Sample = 'bassdm:12';
	var bassdm_11__Sample = 'bassdm:11';
	var bassdm_10__Sample = 'bassdm:10';
	var bassdm_0__Sample = 'bassdm:0';
	var bass_3__Sample = 'bass:3';
	var bass_2__Sample = 'bass:2';
	var bass_1__Sample = 'bass:1';
	var bass_0__Sample = 'bass:0';
	var bass3_9__Sample = 'bass3:9';
	var bass3_8__Sample = 'bass3:8';
	var bass3_7__Sample = 'bass3:7';
	var bass3_6__Sample = 'bass3:6';
	var bass3_5__Sample = 'bass3:5';
	var bass3_4__Sample = 'bass3:4';
	var bass3_3__Sample = 'bass3:3';
	var bass3_2__Sample = 'bass3:2';
	var bass3_1__Sample = 'bass3:1';
	var bass3_10__Sample = 'bass3:10';
	var bass3_0__Sample = 'bass3:0';
	var bass2_4__Sample = 'bass2:4';
	var bass2_3__Sample = 'bass2:3';
	var bass2_2__Sample = 'bass2:2';
	var bass2_1__Sample = 'bass2:1';
	var bass2_0__Sample = 'bass2:0';
	var bass1_9__Sample = 'bass1:9';
	var bass1_8__Sample = 'bass1:8';
	var bass1_7__Sample = 'bass1:7';
	var bass1_6__Sample = 'bass1:6';
	var bass1_5__Sample = 'bass1:5';
	var bass1_4__Sample = 'bass1:4';
	var bass1_3__Sample = 'bass1:3';
	var bass1_2__Sample = 'bass1:2';
	var bass1_29__Sample = 'bass1:29';
	var bass1_28__Sample = 'bass1:28';
	var bass1_27__Sample = 'bass1:27';
	var bass1_26__Sample = 'bass1:26';
	var bass1_25__Sample = 'bass1:25';
	var bass1_24__Sample = 'bass1:24';
	var bass1_23__Sample = 'bass1:23';
	var bass1_22__Sample = 'bass1:22';
	var bass1_21__Sample = 'bass1:21';
	var bass1_20__Sample = 'bass1:20';
	var bass1_1__Sample = 'bass1:1';
	var bass1_19__Sample = 'bass1:19';
	var bass1_18__Sample = 'bass1:18';
	var bass1_17__Sample = 'bass1:17';
	var bass1_16__Sample = 'bass1:16';
	var bass1_15__Sample = 'bass1:15';
	var bass1_14__Sample = 'bass1:14';
	var bass1_13__Sample = 'bass1:13';
	var bass1_12__Sample = 'bass1:12';
	var bass1_11__Sample = 'bass1:11';
	var bass1_10__Sample = 'bass1:10';
	var bass1_0__Sample = 'bass1:0';
	var bass0_2__Sample = 'bass0:2';
	var bass0_1__Sample = 'bass0:1';
	var bass0_0__Sample = 'bass0:0';
	var baa_6__Sample = 'baa:6';
	var baa_5__Sample = 'baa:5';
	var baa_4__Sample = 'baa:4';
	var baa_3__Sample = 'baa:3';
	var baa_2__Sample = 'baa:2';
	var baa_1__Sample = 'baa:1';
	var baa_0__Sample = 'baa:0';
	var baa2_6__Sample = 'baa2:6';
	var baa2_5__Sample = 'baa2:5';
	var baa2_4__Sample = 'baa2:4';
	var baa2_3__Sample = 'baa2:3';
	var baa2_2__Sample = 'baa2:2';
	var baa2_1__Sample = 'baa2:1';
	var baa2_0__Sample = 'baa2:0';
	var auto_9__Sample = 'auto:9';
	var auto_8__Sample = 'auto:8';
	var auto_7__Sample = 'auto:7';
	var auto_6__Sample = 'auto:6';
	var auto_5__Sample = 'auto:5';
	var auto_4__Sample = 'auto:4';
	var auto_3__Sample = 'auto:3';
	var auto_2__Sample = 'auto:2';
	var auto_1__Sample = 'auto:1';
	var auto_10__Sample = 'auto:10';
	var auto_0__Sample = 'auto:0';
	var arpy_9__Sample = 'arpy:9';
	var arpy_8__Sample = 'arpy:8';
	var arpy_7__Sample = 'arpy:7';
	var arpy_6__Sample = 'arpy:6';
	var arpy_5__Sample = 'arpy:5';
	var arpy_4__Sample = 'arpy:4';
	var arpy_3__Sample = 'arpy:3';
	var arpy_2__Sample = 'arpy:2';
	var arpy_1__Sample = 'arpy:1';
	var arpy_10__Sample = 'arpy:10';
	var arpy_0__Sample = 'arpy:0';
	var arp_1__Sample = 'arp:1';
	var arp_0__Sample = 'arp:0';
	var armora_6__Sample = 'armora:6';
	var armora_5__Sample = 'armora:5';
	var armora_4__Sample = 'armora:4';
	var armora_3__Sample = 'armora:3';
	var armora_2__Sample = 'armora:2';
	var armora_1__Sample = 'armora:1';
	var armora_0__Sample = 'armora:0';
	var amencutup_9__Sample = 'amencutup:9';
	var amencutup_8__Sample = 'amencutup:8';
	var amencutup_7__Sample = 'amencutup:7';
	var amencutup_6__Sample = 'amencutup:6';
	var amencutup_5__Sample = 'amencutup:5';
	var amencutup_4__Sample = 'amencutup:4';
	var amencutup_3__Sample = 'amencutup:3';
	var amencutup_31__Sample = 'amencutup:31';
	var amencutup_30__Sample = 'amencutup:30';
	var amencutup_2__Sample = 'amencutup:2';
	var amencutup_29__Sample = 'amencutup:29';
	var amencutup_28__Sample = 'amencutup:28';
	var amencutup_27__Sample = 'amencutup:27';
	var amencutup_26__Sample = 'amencutup:26';
	var amencutup_25__Sample = 'amencutup:25';
	var amencutup_24__Sample = 'amencutup:24';
	var amencutup_23__Sample = 'amencutup:23';
	var amencutup_22__Sample = 'amencutup:22';
	var amencutup_21__Sample = 'amencutup:21';
	var amencutup_20__Sample = 'amencutup:20';
	var amencutup_1__Sample = 'amencutup:1';
	var amencutup_19__Sample = 'amencutup:19';
	var amencutup_18__Sample = 'amencutup:18';
	var amencutup_17__Sample = 'amencutup:17';
	var amencutup_16__Sample = 'amencutup:16';
	var amencutup_15__Sample = 'amencutup:15';
	var amencutup_14__Sample = 'amencutup:14';
	var amencutup_13__Sample = 'amencutup:13';
	var amencutup_12__Sample = 'amencutup:12';
	var amencutup_11__Sample = 'amencutup:11';
	var amencutup_10__Sample = 'amencutup:10';
	var amencutup_0__Sample = 'amencutup:0';
	var ambienta_0__Sample = 'ambienta:0';
	var dronesToSample = [
		new Data_Tuple.Tuple('spacewind', spacewind_0__Sample),
		new Data_Tuple.Tuple('spacewind:0', spacewind_0__Sample),
		new Data_Tuple.Tuple('ambienta', ambienta_0__Sample),
		new Data_Tuple.Tuple('ambienta:0', ambienta_0__Sample),
		new Data_Tuple.Tuple('lowdark', lowdark_0__Sample),
		new Data_Tuple.Tuple('lowdark:0', lowdark_0__Sample),
		new Data_Tuple.Tuple('harmonium', harmonium_0__Sample),
		new Data_Tuple.Tuple('harmonium:0', harmonium_0__Sample),
		new Data_Tuple.Tuple('hollowair', hollowair_0__Sample),
		new Data_Tuple.Tuple('hollowair:0', hollowair_0__Sample),
		new Data_Tuple.Tuple('digeridoo', digeridoo_0__Sample),
		new Data_Tuple.Tuple('digeridoo:0', digeridoo_0__Sample),
	];
	var alphabet_9__Sample = 'alphabet:9';
	var alphabet_8__Sample = 'alphabet:8';
	var alphabet_7__Sample = 'alphabet:7';
	var alphabet_6__Sample = 'alphabet:6';
	var alphabet_5__Sample = 'alphabet:5';
	var alphabet_4__Sample = 'alphabet:4';
	var alphabet_3__Sample = 'alphabet:3';
	var alphabet_2__Sample = 'alphabet:2';
	var alphabet_25__Sample = 'alphabet:25';
	var alphabet_24__Sample = 'alphabet:24';
	var alphabet_23__Sample = 'alphabet:23';
	var alphabet_22__Sample = 'alphabet:22';
	var alphabet_21__Sample = 'alphabet:21';
	var alphabet_20__Sample = 'alphabet:20';
	var alphabet_1__Sample = 'alphabet:1';
	var alphabet_19__Sample = 'alphabet:19';
	var alphabet_18__Sample = 'alphabet:18';
	var alphabet_17__Sample = 'alphabet:17';
	var alphabet_16__Sample = 'alphabet:16';
	var alphabet_15__Sample = 'alphabet:15';
	var alphabet_14__Sample = 'alphabet:14';
	var alphabet_13__Sample = 'alphabet:13';
	var alphabet_12__Sample = 'alphabet:12';
	var alphabet_11__Sample = 'alphabet:11';
	var alphabet_10__Sample = 'alphabet:10';
	var alphabet_0__Sample = 'alphabet:0';
	var alex_1__Sample = 'alex:1';
	var alex_0__Sample = 'alex:0';
	var ades4_5__Sample = 'ades4:5';
	var ades4_4__Sample = 'ades4:4';
	var ades4_3__Sample = 'ades4:3';
	var ades4_2__Sample = 'ades4:2';
	var ades4_1__Sample = 'ades4:1';
	var ades4_0__Sample = 'ades4:0';
	var ades3_6__Sample = 'ades3:6';
	var ades3_5__Sample = 'ades3:5';
	var ades3_4__Sample = 'ades3:4';
	var ades3_3__Sample = 'ades3:3';
	var ades3_2__Sample = 'ades3:2';
	var ades3_1__Sample = 'ades3:1';
	var ades3_0__Sample = 'ades3:0';
	var ades2_8__Sample = 'ades2:8';
	var ades2_7__Sample = 'ades2:7';
	var ades2_6__Sample = 'ades2:6';
	var ades2_5__Sample = 'ades2:5';
	var ades2_4__Sample = 'ades2:4';
	var ades2_3__Sample = 'ades2:3';
	var ades2_2__Sample = 'ades2:2';
	var ades2_1__Sample = 'ades2:1';
	var ades2_0__Sample = 'ades2:0';
	var ade_9__Sample = 'ade:9';
	var ade_8__Sample = 'ade:8';
	var ade_7__Sample = 'ade:7';
	var ade_6__Sample = 'ade:6';
	var ade_5__Sample = 'ade:5';
	var ade_4__Sample = 'ade:4';
	var ade_3__Sample = 'ade:3';
	var ade_2__Sample = 'ade:2';
	var ade_1__Sample = 'ade:1';
	var ade_0__Sample = 'ade:0';
	var ab_9__Sample = 'ab:9';
	var ab_8__Sample = 'ab:8';
	var ab_7__Sample = 'ab:7';
	var ab_6__Sample = 'ab:6';
	var ab_5__Sample = 'ab:5';
	var ab_4__Sample = 'ab:4';
	var ab_3__Sample = 'ab:3';
	var ab_2__Sample = 'ab:2';
	var ab_1__Sample = 'ab:1';
	var ab_11__Sample = 'ab:11';
	var ab_10__Sample = 'ab:10';
	var ab_0__Sample = 'ab:0';
	var nameToSample = Data_Semigroup.append(Data_Semigroup.semigroupArray)([
		new Data_Tuple.Tuple(
			'intentionalSilenceForInternalUseOnly',
			intentionalSilenceForInternalUseOnly__Sample
		),
		new Data_Tuple.Tuple('kicklinn', kicklinn_0__Sample),
		new Data_Tuple.Tuple('kicklinn:0', kicklinn_0__Sample),
		new Data_Tuple.Tuple('msg', msg_0__Sample),
		new Data_Tuple.Tuple('msg:0', msg_0__Sample),
		new Data_Tuple.Tuple('msg:1', msg_1__Sample),
		new Data_Tuple.Tuple('msg:2', msg_2__Sample),
		new Data_Tuple.Tuple('msg:3', msg_3__Sample),
		new Data_Tuple.Tuple('msg:4', msg_4__Sample),
		new Data_Tuple.Tuple('msg:5', msg_5__Sample),
		new Data_Tuple.Tuple('msg:6', msg_6__Sample),
		new Data_Tuple.Tuple('msg:7', msg_7__Sample),
		new Data_Tuple.Tuple('msg:8', msg_8__Sample),
		new Data_Tuple.Tuple('gabbalouder', gabbalouder_0__Sample),
		new Data_Tuple.Tuple('gabbalouder:0', gabbalouder_0__Sample),
		new Data_Tuple.Tuple('gabbalouder:1', gabbalouder_1__Sample),
		new Data_Tuple.Tuple('gabbalouder:2', gabbalouder_2__Sample),
		new Data_Tuple.Tuple('gabbalouder:3', gabbalouder_3__Sample),
		new Data_Tuple.Tuple('kurt', kurt_0__Sample),
		new Data_Tuple.Tuple('kurt:0', kurt_0__Sample),
		new Data_Tuple.Tuple('kurt:1', kurt_1__Sample),
		new Data_Tuple.Tuple('kurt:2', kurt_2__Sample),
		new Data_Tuple.Tuple('kurt:3', kurt_3__Sample),
		new Data_Tuple.Tuple('kurt:4', kurt_4__Sample),
		new Data_Tuple.Tuple('kurt:5', kurt_5__Sample),
		new Data_Tuple.Tuple('kurt:6', kurt_6__Sample),
		new Data_Tuple.Tuple('bassdm', bassdm_0__Sample),
		new Data_Tuple.Tuple('bassdm:0', bassdm_0__Sample),
		new Data_Tuple.Tuple('bassdm:1', bassdm_1__Sample),
		new Data_Tuple.Tuple('bassdm:2', bassdm_2__Sample),
		new Data_Tuple.Tuple('bassdm:3', bassdm_3__Sample),
		new Data_Tuple.Tuple('bassdm:4', bassdm_4__Sample),
		new Data_Tuple.Tuple('bassdm:5', bassdm_5__Sample),
		new Data_Tuple.Tuple('bassdm:6', bassdm_6__Sample),
		new Data_Tuple.Tuple('bassdm:7', bassdm_7__Sample),
		new Data_Tuple.Tuple('bassdm:8', bassdm_8__Sample),
		new Data_Tuple.Tuple('bassdm:9', bassdm_9__Sample),
		new Data_Tuple.Tuple('bassdm:10', bassdm_10__Sample),
		new Data_Tuple.Tuple('bassdm:11', bassdm_11__Sample),
		new Data_Tuple.Tuple('bassdm:12', bassdm_12__Sample),
		new Data_Tuple.Tuple('bassdm:13', bassdm_13__Sample),
		new Data_Tuple.Tuple('bassdm:14', bassdm_14__Sample),
		new Data_Tuple.Tuple('bassdm:15', bassdm_15__Sample),
		new Data_Tuple.Tuple('bassdm:16', bassdm_16__Sample),
		new Data_Tuple.Tuple('bassdm:17', bassdm_17__Sample),
		new Data_Tuple.Tuple('bassdm:18', bassdm_18__Sample),
		new Data_Tuple.Tuple('bassdm:19', bassdm_19__Sample),
		new Data_Tuple.Tuple('bassdm:20', bassdm_20__Sample),
		new Data_Tuple.Tuple('bassdm:21', bassdm_21__Sample),
		new Data_Tuple.Tuple('bassdm:22', bassdm_22__Sample),
		new Data_Tuple.Tuple('bassdm:23', bassdm_23__Sample),
		new Data_Tuple.Tuple('tabla2', tabla2_0__Sample),
		new Data_Tuple.Tuple('tabla2:0', tabla2_0__Sample),
		new Data_Tuple.Tuple('tabla2:1', tabla2_1__Sample),
		new Data_Tuple.Tuple('tabla2:2', tabla2_2__Sample),
		new Data_Tuple.Tuple('tabla2:3', tabla2_3__Sample),
		new Data_Tuple.Tuple('tabla2:4', tabla2_4__Sample),
		new Data_Tuple.Tuple('tabla2:5', tabla2_5__Sample),
		new Data_Tuple.Tuple('tabla2:6', tabla2_6__Sample),
		new Data_Tuple.Tuple('tabla2:7', tabla2_7__Sample),
		new Data_Tuple.Tuple('tabla2:8', tabla2_8__Sample),
		new Data_Tuple.Tuple('tabla2:9', tabla2_9__Sample),
		new Data_Tuple.Tuple('tabla2:10', tabla2_10__Sample),
		new Data_Tuple.Tuple('tabla2:11', tabla2_11__Sample),
		new Data_Tuple.Tuple('tabla2:12', tabla2_12__Sample),
		new Data_Tuple.Tuple('tabla2:13', tabla2_13__Sample),
		new Data_Tuple.Tuple('tabla2:14', tabla2_14__Sample),
		new Data_Tuple.Tuple('tabla2:15', tabla2_15__Sample),
		new Data_Tuple.Tuple('tabla2:16', tabla2_16__Sample),
		new Data_Tuple.Tuple('tabla2:17', tabla2_17__Sample),
		new Data_Tuple.Tuple('tabla2:18', tabla2_18__Sample),
		new Data_Tuple.Tuple('tabla2:19', tabla2_19__Sample),
		new Data_Tuple.Tuple('tabla2:20', tabla2_20__Sample),
		new Data_Tuple.Tuple('tabla2:21', tabla2_21__Sample),
		new Data_Tuple.Tuple('tabla2:22', tabla2_22__Sample),
		new Data_Tuple.Tuple('tabla2:23', tabla2_23__Sample),
		new Data_Tuple.Tuple('tabla2:24', tabla2_24__Sample),
		new Data_Tuple.Tuple('tabla2:25', tabla2_25__Sample),
		new Data_Tuple.Tuple('tabla2:26', tabla2_26__Sample),
		new Data_Tuple.Tuple('tabla2:27', tabla2_27__Sample),
		new Data_Tuple.Tuple('tabla2:28', tabla2_28__Sample),
		new Data_Tuple.Tuple('tabla2:29', tabla2_29__Sample),
		new Data_Tuple.Tuple('tabla2:30', tabla2_30__Sample),
		new Data_Tuple.Tuple('tabla2:31', tabla2_31__Sample),
		new Data_Tuple.Tuple('tabla2:32', tabla2_32__Sample),
		new Data_Tuple.Tuple('tabla2:33', tabla2_33__Sample),
		new Data_Tuple.Tuple('tabla2:34', tabla2_34__Sample),
		new Data_Tuple.Tuple('tabla2:35', tabla2_35__Sample),
		new Data_Tuple.Tuple('tabla2:36', tabla2_36__Sample),
		new Data_Tuple.Tuple('tabla2:37', tabla2_37__Sample),
		new Data_Tuple.Tuple('tabla2:38', tabla2_38__Sample),
		new Data_Tuple.Tuple('tabla2:39', tabla2_39__Sample),
		new Data_Tuple.Tuple('tabla2:40', tabla2_40__Sample),
		new Data_Tuple.Tuple('tabla2:41', tabla2_41__Sample),
		new Data_Tuple.Tuple('tabla2:42', tabla2_42__Sample),
		new Data_Tuple.Tuple('tabla2:43', tabla2_43__Sample),
		new Data_Tuple.Tuple('tabla2:44', tabla2_44__Sample),
		new Data_Tuple.Tuple('tabla2:45', tabla2_45__Sample),
		new Data_Tuple.Tuple('chin', chin_0__Sample),
		new Data_Tuple.Tuple('chin:0', chin_0__Sample),
		new Data_Tuple.Tuple('chin:1', chin_1__Sample),
		new Data_Tuple.Tuple('chin:2', chin_2__Sample),
		new Data_Tuple.Tuple('chin:3', chin_3__Sample),
		new Data_Tuple.Tuple('mp3', mp3_0__Sample),
		new Data_Tuple.Tuple('mp3:0', mp3_0__Sample),
		new Data_Tuple.Tuple('mp3:1', mp3_1__Sample),
		new Data_Tuple.Tuple('mp3:2', mp3_2__Sample),
		new Data_Tuple.Tuple('mp3:3', mp3_3__Sample),
		new Data_Tuple.Tuple('tablex', tablex_0__Sample),
		new Data_Tuple.Tuple('tablex:0', tablex_0__Sample),
		new Data_Tuple.Tuple('tablex:1', tablex_1__Sample),
		new Data_Tuple.Tuple('tablex:2', tablex_2__Sample),
		new Data_Tuple.Tuple('sf', sf_0__Sample),
		new Data_Tuple.Tuple('sf:0', sf_0__Sample),
		new Data_Tuple.Tuple('sf:1', sf_1__Sample),
		new Data_Tuple.Tuple('sf:2', sf_2__Sample),
		new Data_Tuple.Tuple('sf:3', sf_3__Sample),
		new Data_Tuple.Tuple('sf:4', sf_4__Sample),
		new Data_Tuple.Tuple('sf:5', sf_5__Sample),
		new Data_Tuple.Tuple('sf:6', sf_6__Sample),
		new Data_Tuple.Tuple('sf:7', sf_7__Sample),
		new Data_Tuple.Tuple('sf:8', sf_8__Sample),
		new Data_Tuple.Tuple('sf:9', sf_9__Sample),
		new Data_Tuple.Tuple('sf:10', sf_10__Sample),
		new Data_Tuple.Tuple('sf:11', sf_11__Sample),
		new Data_Tuple.Tuple('sf:12', sf_12__Sample),
		new Data_Tuple.Tuple('sf:13', sf_13__Sample),
		new Data_Tuple.Tuple('sf:14', sf_14__Sample),
		new Data_Tuple.Tuple('sf:15', sf_15__Sample),
		new Data_Tuple.Tuple('sf:16', sf_16__Sample),
		new Data_Tuple.Tuple('sf:17', sf_17__Sample),
		new Data_Tuple.Tuple('speakspell', speakspell_0__Sample),
		new Data_Tuple.Tuple('speakspell:0', speakspell_0__Sample),
		new Data_Tuple.Tuple('speakspell:1', speakspell_1__Sample),
		new Data_Tuple.Tuple('speakspell:2', speakspell_2__Sample),
		new Data_Tuple.Tuple('speakspell:3', speakspell_3__Sample),
		new Data_Tuple.Tuple('speakspell:4', speakspell_4__Sample),
		new Data_Tuple.Tuple('speakspell:5', speakspell_5__Sample),
		new Data_Tuple.Tuple('speakspell:6', speakspell_6__Sample),
		new Data_Tuple.Tuple('speakspell:7', speakspell_7__Sample),
		new Data_Tuple.Tuple('speakspell:8', speakspell_8__Sample),
		new Data_Tuple.Tuple('speakspell:9', speakspell_9__Sample),
		new Data_Tuple.Tuple('speakspell:10', speakspell_10__Sample),
		new Data_Tuple.Tuple('speakspell:11', speakspell_11__Sample),
		new Data_Tuple.Tuple('cc', cc_0__Sample),
		new Data_Tuple.Tuple('cc:0', cc_0__Sample),
		new Data_Tuple.Tuple('cc:1', cc_1__Sample),
		new Data_Tuple.Tuple('cc:2', cc_2__Sample),
		new Data_Tuple.Tuple('cc:3', cc_3__Sample),
		new Data_Tuple.Tuple('cc:4', cc_4__Sample),
		new Data_Tuple.Tuple('cc:5', cc_5__Sample),
		new Data_Tuple.Tuple('gabbaloud', gabbaloud_0__Sample),
		new Data_Tuple.Tuple('gabbaloud:0', gabbaloud_0__Sample),
		new Data_Tuple.Tuple('gabbaloud:1', gabbaloud_1__Sample),
		new Data_Tuple.Tuple('gabbaloud:2', gabbaloud_2__Sample),
		new Data_Tuple.Tuple('gabbaloud:3', gabbaloud_3__Sample),
		new Data_Tuple.Tuple('ades2', ades2_0__Sample),
		new Data_Tuple.Tuple('ades2:0', ades2_0__Sample),
		new Data_Tuple.Tuple('ades2:1', ades2_1__Sample),
		new Data_Tuple.Tuple('ades2:2', ades2_2__Sample),
		new Data_Tuple.Tuple('ades2:3', ades2_3__Sample),
		new Data_Tuple.Tuple('ades2:4', ades2_4__Sample),
		new Data_Tuple.Tuple('ades2:5', ades2_5__Sample),
		new Data_Tuple.Tuple('ades2:6', ades2_6__Sample),
		new Data_Tuple.Tuple('ades2:7', ades2_7__Sample),
		new Data_Tuple.Tuple('ades2:8', ades2_8__Sample),
		new Data_Tuple.Tuple('space', space_0__Sample),
		new Data_Tuple.Tuple('space:0', space_0__Sample),
		new Data_Tuple.Tuple('space:1', space_1__Sample),
		new Data_Tuple.Tuple('space:2', space_2__Sample),
		new Data_Tuple.Tuple('space:3', space_3__Sample),
		new Data_Tuple.Tuple('space:4', space_4__Sample),
		new Data_Tuple.Tuple('space:5', space_5__Sample),
		new Data_Tuple.Tuple('space:6', space_6__Sample),
		new Data_Tuple.Tuple('space:7', space_7__Sample),
		new Data_Tuple.Tuple('space:8', space_8__Sample),
		new Data_Tuple.Tuple('space:9', space_9__Sample),
		new Data_Tuple.Tuple('space:10', space_10__Sample),
		new Data_Tuple.Tuple('space:11', space_11__Sample),
		new Data_Tuple.Tuple('space:12', space_12__Sample),
		new Data_Tuple.Tuple('space:13', space_13__Sample),
		new Data_Tuple.Tuple('space:14', space_14__Sample),
		new Data_Tuple.Tuple('space:15', space_15__Sample),
		new Data_Tuple.Tuple('space:16', space_16__Sample),
		new Data_Tuple.Tuple('space:17', space_17__Sample),
		new Data_Tuple.Tuple('battles', battles_0__Sample),
		new Data_Tuple.Tuple('battles:0', battles_0__Sample),
		new Data_Tuple.Tuple('battles:1', battles_1__Sample),
		new Data_Tuple.Tuple('voodoo', voodoo_0__Sample),
		new Data_Tuple.Tuple('voodoo:0', voodoo_0__Sample),
		new Data_Tuple.Tuple('voodoo:1', voodoo_1__Sample),
		new Data_Tuple.Tuple('voodoo:2', voodoo_2__Sample),
		new Data_Tuple.Tuple('voodoo:3', voodoo_3__Sample),
		new Data_Tuple.Tuple('voodoo:4', voodoo_4__Sample),
		new Data_Tuple.Tuple('ravemono', ravemono_0__Sample),
		new Data_Tuple.Tuple('ravemono:0', ravemono_0__Sample),
		new Data_Tuple.Tuple('ravemono:1', ravemono_1__Sample),
		new Data_Tuple.Tuple('psr', psr_0__Sample),
		new Data_Tuple.Tuple('psr:0', psr_0__Sample),
		new Data_Tuple.Tuple('psr:1', psr_1__Sample),
		new Data_Tuple.Tuple('psr:2', psr_2__Sample),
		new Data_Tuple.Tuple('psr:3', psr_3__Sample),
		new Data_Tuple.Tuple('psr:4', psr_4__Sample),
		new Data_Tuple.Tuple('psr:5', psr_5__Sample),
		new Data_Tuple.Tuple('psr:6', psr_6__Sample),
		new Data_Tuple.Tuple('psr:7', psr_7__Sample),
		new Data_Tuple.Tuple('psr:8', psr_8__Sample),
		new Data_Tuple.Tuple('psr:9', psr_9__Sample),
		new Data_Tuple.Tuple('psr:10', psr_10__Sample),
		new Data_Tuple.Tuple('psr:11', psr_11__Sample),
		new Data_Tuple.Tuple('psr:12', psr_12__Sample),
		new Data_Tuple.Tuple('psr:13', psr_13__Sample),
		new Data_Tuple.Tuple('psr:14', psr_14__Sample),
		new Data_Tuple.Tuple('psr:15', psr_15__Sample),
		new Data_Tuple.Tuple('psr:16', psr_16__Sample),
		new Data_Tuple.Tuple('psr:17', psr_17__Sample),
		new Data_Tuple.Tuple('psr:18', psr_18__Sample),
		new Data_Tuple.Tuple('psr:19', psr_19__Sample),
		new Data_Tuple.Tuple('psr:20', psr_20__Sample),
		new Data_Tuple.Tuple('psr:21', psr_21__Sample),
		new Data_Tuple.Tuple('psr:22', psr_22__Sample),
		new Data_Tuple.Tuple('psr:23', psr_23__Sample),
		new Data_Tuple.Tuple('psr:24', psr_24__Sample),
		new Data_Tuple.Tuple('psr:25', psr_25__Sample),
		new Data_Tuple.Tuple('psr:26', psr_26__Sample),
		new Data_Tuple.Tuple('psr:27', psr_27__Sample),
		new Data_Tuple.Tuple('psr:28', psr_28__Sample),
		new Data_Tuple.Tuple('psr:29', psr_29__Sample),
		new Data_Tuple.Tuple('metal', metal_0__Sample),
		new Data_Tuple.Tuple('metal:0', metal_0__Sample),
		new Data_Tuple.Tuple('metal:1', metal_1__Sample),
		new Data_Tuple.Tuple('metal:2', metal_2__Sample),
		new Data_Tuple.Tuple('metal:3', metal_3__Sample),
		new Data_Tuple.Tuple('metal:4', metal_4__Sample),
		new Data_Tuple.Tuple('metal:5', metal_5__Sample),
		new Data_Tuple.Tuple('metal:6', metal_6__Sample),
		new Data_Tuple.Tuple('metal:7', metal_7__Sample),
		new Data_Tuple.Tuple('metal:8', metal_8__Sample),
		new Data_Tuple.Tuple('metal:9', metal_9__Sample),
		new Data_Tuple.Tuple('hardcore', hardcore_0__Sample),
		new Data_Tuple.Tuple('hardcore:0', hardcore_0__Sample),
		new Data_Tuple.Tuple('hardcore:1', hardcore_1__Sample),
		new Data_Tuple.Tuple('hardcore:2', hardcore_2__Sample),
		new Data_Tuple.Tuple('hardcore:3', hardcore_3__Sample),
		new Data_Tuple.Tuple('hardcore:4', hardcore_4__Sample),
		new Data_Tuple.Tuple('hardcore:5', hardcore_5__Sample),
		new Data_Tuple.Tuple('hardcore:6', hardcore_6__Sample),
		new Data_Tuple.Tuple('hardcore:7', hardcore_7__Sample),
		new Data_Tuple.Tuple('hardcore:8', hardcore_8__Sample),
		new Data_Tuple.Tuple('hardcore:9', hardcore_9__Sample),
		new Data_Tuple.Tuple('hardcore:10', hardcore_10__Sample),
		new Data_Tuple.Tuple('hardcore:11', hardcore_11__Sample),
		new Data_Tuple.Tuple('mouth', mouth_0__Sample),
		new Data_Tuple.Tuple('mouth:0', mouth_0__Sample),
		new Data_Tuple.Tuple('mouth:1', mouth_1__Sample),
		new Data_Tuple.Tuple('mouth:2', mouth_2__Sample),
		new Data_Tuple.Tuple('mouth:3', mouth_3__Sample),
		new Data_Tuple.Tuple('mouth:4', mouth_4__Sample),
		new Data_Tuple.Tuple('mouth:5', mouth_5__Sample),
		new Data_Tuple.Tuple('mouth:6', mouth_6__Sample),
		new Data_Tuple.Tuple('mouth:7', mouth_7__Sample),
		new Data_Tuple.Tuple('mouth:8', mouth_8__Sample),
		new Data_Tuple.Tuple('mouth:9', mouth_9__Sample),
		new Data_Tuple.Tuple('mouth:10', mouth_10__Sample),
		new Data_Tuple.Tuple('mouth:11', mouth_11__Sample),
		new Data_Tuple.Tuple('mouth:12', mouth_12__Sample),
		new Data_Tuple.Tuple('mouth:13', mouth_13__Sample),
		new Data_Tuple.Tuple('mouth:14', mouth_14__Sample),
		new Data_Tuple.Tuple('sugar', sugar_0__Sample),
		new Data_Tuple.Tuple('sugar:0', sugar_0__Sample),
		new Data_Tuple.Tuple('sugar:1', sugar_1__Sample),
		new Data_Tuple.Tuple('odx', odx_0__Sample),
		new Data_Tuple.Tuple('odx:0', odx_0__Sample),
		new Data_Tuple.Tuple('odx:1', odx_1__Sample),
		new Data_Tuple.Tuple('odx:2', odx_2__Sample),
		new Data_Tuple.Tuple('odx:3', odx_3__Sample),
		new Data_Tuple.Tuple('odx:4', odx_4__Sample),
		new Data_Tuple.Tuple('odx:5', odx_5__Sample),
		new Data_Tuple.Tuple('odx:6', odx_6__Sample),
		new Data_Tuple.Tuple('odx:7', odx_7__Sample),
		new Data_Tuple.Tuple('odx:8', odx_8__Sample),
		new Data_Tuple.Tuple('odx:9', odx_9__Sample),
		new Data_Tuple.Tuple('odx:10', odx_10__Sample),
		new Data_Tuple.Tuple('odx:11', odx_11__Sample),
		new Data_Tuple.Tuple('odx:12', odx_12__Sample),
		new Data_Tuple.Tuple('odx:13', odx_13__Sample),
		new Data_Tuple.Tuple('odx:14', odx_14__Sample),
		new Data_Tuple.Tuple('x_808lc', x_808lc_0__Sample),
		new Data_Tuple.Tuple('x_808lc:0', x_808lc_0__Sample),
		new Data_Tuple.Tuple('x_808lc:1', x_808lc_1__Sample),
		new Data_Tuple.Tuple('x_808lc:2', x_808lc_2__Sample),
		new Data_Tuple.Tuple('x_808lc:3', x_808lc_3__Sample),
		new Data_Tuple.Tuple('x_808lc:4', x_808lc_4__Sample),
		new Data_Tuple.Tuple('mt', mt_0__Sample),
		new Data_Tuple.Tuple('mt:0', mt_0__Sample),
		new Data_Tuple.Tuple('mt:1', mt_1__Sample),
		new Data_Tuple.Tuple('mt:2', mt_2__Sample),
		new Data_Tuple.Tuple('mt:3', mt_3__Sample),
		new Data_Tuple.Tuple('mt:4', mt_4__Sample),
		new Data_Tuple.Tuple('mt:5', mt_5__Sample),
		new Data_Tuple.Tuple('mt:6', mt_6__Sample),
		new Data_Tuple.Tuple('mt:7', mt_7__Sample),
		new Data_Tuple.Tuple('mt:8', mt_8__Sample),
		new Data_Tuple.Tuple('mt:9', mt_9__Sample),
		new Data_Tuple.Tuple('mt:10', mt_10__Sample),
		new Data_Tuple.Tuple('mt:11', mt_11__Sample),
		new Data_Tuple.Tuple('mt:12', mt_12__Sample),
		new Data_Tuple.Tuple('mt:13', mt_13__Sample),
		new Data_Tuple.Tuple('mt:14', mt_14__Sample),
		new Data_Tuple.Tuple('mt:15', mt_15__Sample),
		new Data_Tuple.Tuple('drumtraks', drumtraks_0__Sample),
		new Data_Tuple.Tuple('drumtraks:0', drumtraks_0__Sample),
		new Data_Tuple.Tuple('drumtraks:1', drumtraks_1__Sample),
		new Data_Tuple.Tuple('drumtraks:2', drumtraks_2__Sample),
		new Data_Tuple.Tuple('drumtraks:3', drumtraks_3__Sample),
		new Data_Tuple.Tuple('drumtraks:4', drumtraks_4__Sample),
		new Data_Tuple.Tuple('drumtraks:5', drumtraks_5__Sample),
		new Data_Tuple.Tuple('drumtraks:6', drumtraks_6__Sample),
		new Data_Tuple.Tuple('drumtraks:7', drumtraks_7__Sample),
		new Data_Tuple.Tuple('drumtraks:8', drumtraks_8__Sample),
		new Data_Tuple.Tuple('drumtraks:9', drumtraks_9__Sample),
		new Data_Tuple.Tuple('drumtraks:10', drumtraks_10__Sample),
		new Data_Tuple.Tuple('drumtraks:11', drumtraks_11__Sample),
		new Data_Tuple.Tuple('drumtraks:12', drumtraks_12__Sample),
		new Data_Tuple.Tuple('print', print_0__Sample),
		new Data_Tuple.Tuple('print:0', print_0__Sample),
		new Data_Tuple.Tuple('print:1', print_1__Sample),
		new Data_Tuple.Tuple('print:2', print_2__Sample),
		new Data_Tuple.Tuple('print:3', print_3__Sample),
		new Data_Tuple.Tuple('print:4', print_4__Sample),
		new Data_Tuple.Tuple('print:5', print_5__Sample),
		new Data_Tuple.Tuple('print:6', print_6__Sample),
		new Data_Tuple.Tuple('print:7', print_7__Sample),
		new Data_Tuple.Tuple('print:8', print_8__Sample),
		new Data_Tuple.Tuple('print:9', print_9__Sample),
		new Data_Tuple.Tuple('print:10', print_10__Sample),
		new Data_Tuple.Tuple('blip', blip_0__Sample),
		new Data_Tuple.Tuple('blip:0', blip_0__Sample),
		new Data_Tuple.Tuple('blip:1', blip_1__Sample),
		new Data_Tuple.Tuple('wobble', wobble_0__Sample),
		new Data_Tuple.Tuple('wobble:0', wobble_0__Sample),
		new Data_Tuple.Tuple('made', made_0__Sample),
		new Data_Tuple.Tuple('made:0', made_0__Sample),
		new Data_Tuple.Tuple('made:1', made_1__Sample),
		new Data_Tuple.Tuple('made:2', made_2__Sample),
		new Data_Tuple.Tuple('made:3', made_3__Sample),
		new Data_Tuple.Tuple('made:4', made_4__Sample),
		new Data_Tuple.Tuple('made:5', made_5__Sample),
		new Data_Tuple.Tuple('made:6', made_6__Sample),
		new Data_Tuple.Tuple('bass3', bass3_0__Sample),
		new Data_Tuple.Tuple('bass3:0', bass3_0__Sample),
		new Data_Tuple.Tuple('bass3:1', bass3_1__Sample),
		new Data_Tuple.Tuple('bass3:2', bass3_2__Sample),
		new Data_Tuple.Tuple('bass3:3', bass3_3__Sample),
		new Data_Tuple.Tuple('bass3:4', bass3_4__Sample),
		new Data_Tuple.Tuple('bass3:5', bass3_5__Sample),
		new Data_Tuple.Tuple('bass3:6', bass3_6__Sample),
		new Data_Tuple.Tuple('bass3:7', bass3_7__Sample),
		new Data_Tuple.Tuple('bass3:8', bass3_8__Sample),
		new Data_Tuple.Tuple('bass3:9', bass3_9__Sample),
		new Data_Tuple.Tuple('bass3:10', bass3_10__Sample),
		new Data_Tuple.Tuple('speechless', speechless_0__Sample),
		new Data_Tuple.Tuple('speechless:0', speechless_0__Sample),
		new Data_Tuple.Tuple('speechless:1', speechless_1__Sample),
		new Data_Tuple.Tuple('speechless:2', speechless_2__Sample),
		new Data_Tuple.Tuple('speechless:3', speechless_3__Sample),
		new Data_Tuple.Tuple('speechless:4', speechless_4__Sample),
		new Data_Tuple.Tuple('speechless:5', speechless_5__Sample),
		new Data_Tuple.Tuple('speechless:6', speechless_6__Sample),
		new Data_Tuple.Tuple('speechless:7', speechless_7__Sample),
		new Data_Tuple.Tuple('speechless:8', speechless_8__Sample),
		new Data_Tuple.Tuple('speechless:9', speechless_9__Sample),
		new Data_Tuple.Tuple('sine', sine_0__Sample),
		new Data_Tuple.Tuple('sine:0', sine_0__Sample),
		new Data_Tuple.Tuple('sine:1', sine_1__Sample),
		new Data_Tuple.Tuple('sine:2', sine_2__Sample),
		new Data_Tuple.Tuple('sine:3', sine_3__Sample),
		new Data_Tuple.Tuple('sine:4', sine_4__Sample),
		new Data_Tuple.Tuple('sine:5', sine_5__Sample),
		new Data_Tuple.Tuple('noise', noise_0__Sample),
		new Data_Tuple.Tuple('noise:0', noise_0__Sample),
		new Data_Tuple.Tuple('x_808lt', x_808lt_0__Sample),
		new Data_Tuple.Tuple('x_808lt:0', x_808lt_0__Sample),
		new Data_Tuple.Tuple('x_808lt:1', x_808lt_1__Sample),
		new Data_Tuple.Tuple('x_808lt:2', x_808lt_2__Sample),
		new Data_Tuple.Tuple('x_808lt:3', x_808lt_3__Sample),
		new Data_Tuple.Tuple('x_808lt:4', x_808lt_4__Sample),
		new Data_Tuple.Tuple('sd', sd_0__Sample),
		new Data_Tuple.Tuple('sd:0', sd_0__Sample),
		new Data_Tuple.Tuple('sd:1', sd_1__Sample),
		new Data_Tuple.Tuple('alphabet', alphabet_0__Sample),
		new Data_Tuple.Tuple('alphabet:0', alphabet_0__Sample),
		new Data_Tuple.Tuple('alphabet:1', alphabet_1__Sample),
		new Data_Tuple.Tuple('alphabet:2', alphabet_2__Sample),
		new Data_Tuple.Tuple('alphabet:3', alphabet_3__Sample),
		new Data_Tuple.Tuple('alphabet:4', alphabet_4__Sample),
		new Data_Tuple.Tuple('alphabet:5', alphabet_5__Sample),
		new Data_Tuple.Tuple('alphabet:6', alphabet_6__Sample),
		new Data_Tuple.Tuple('alphabet:7', alphabet_7__Sample),
		new Data_Tuple.Tuple('alphabet:8', alphabet_8__Sample),
		new Data_Tuple.Tuple('alphabet:9', alphabet_9__Sample),
		new Data_Tuple.Tuple('alphabet:10', alphabet_10__Sample),
		new Data_Tuple.Tuple('alphabet:11', alphabet_11__Sample),
		new Data_Tuple.Tuple('alphabet:12', alphabet_12__Sample),
		new Data_Tuple.Tuple('alphabet:13', alphabet_13__Sample),
		new Data_Tuple.Tuple('alphabet:14', alphabet_14__Sample),
		new Data_Tuple.Tuple('alphabet:15', alphabet_15__Sample),
		new Data_Tuple.Tuple('alphabet:16', alphabet_16__Sample),
		new Data_Tuple.Tuple('alphabet:17', alphabet_17__Sample),
		new Data_Tuple.Tuple('alphabet:18', alphabet_18__Sample),
		new Data_Tuple.Tuple('alphabet:19', alphabet_19__Sample),
		new Data_Tuple.Tuple('alphabet:20', alphabet_20__Sample),
		new Data_Tuple.Tuple('alphabet:21', alphabet_21__Sample),
		new Data_Tuple.Tuple('alphabet:22', alphabet_22__Sample),
		new Data_Tuple.Tuple('alphabet:23', alphabet_23__Sample),
		new Data_Tuple.Tuple('alphabet:24', alphabet_24__Sample),
		new Data_Tuple.Tuple('alphabet:25', alphabet_25__Sample),
		new Data_Tuple.Tuple('baa2', baa2_0__Sample),
		new Data_Tuple.Tuple('baa2:0', baa2_0__Sample),
		new Data_Tuple.Tuple('baa2:1', baa2_1__Sample),
		new Data_Tuple.Tuple('baa2:2', baa2_2__Sample),
		new Data_Tuple.Tuple('baa2:3', baa2_3__Sample),
		new Data_Tuple.Tuple('baa2:4', baa2_4__Sample),
		new Data_Tuple.Tuple('baa2:5', baa2_5__Sample),
		new Data_Tuple.Tuple('baa2:6', baa2_6__Sample),
		new Data_Tuple.Tuple('tok', tok_0__Sample),
		new Data_Tuple.Tuple('tok:0', tok_0__Sample),
		new Data_Tuple.Tuple('tok:1', tok_1__Sample),
		new Data_Tuple.Tuple('tok:2', tok_2__Sample),
		new Data_Tuple.Tuple('tok:3', tok_3__Sample),
		new Data_Tuple.Tuple('ades3', ades3_0__Sample),
		new Data_Tuple.Tuple('ades3:0', ades3_0__Sample),
		new Data_Tuple.Tuple('ades3:1', ades3_1__Sample),
		new Data_Tuple.Tuple('ades3:2', ades3_2__Sample),
		new Data_Tuple.Tuple('ades3:3', ades3_3__Sample),
		new Data_Tuple.Tuple('ades3:4', ades3_4__Sample),
		new Data_Tuple.Tuple('ades3:5', ades3_5__Sample),
		new Data_Tuple.Tuple('ades3:6', ades3_6__Sample),
		new Data_Tuple.Tuple('x_909', x_909_0__Sample),
		new Data_Tuple.Tuple('x_909:0', x_909_0__Sample),
		new Data_Tuple.Tuple('sid', sid_0__Sample),
		new Data_Tuple.Tuple('sid:0', sid_0__Sample),
		new Data_Tuple.Tuple('sid:1', sid_1__Sample),
		new Data_Tuple.Tuple('sid:2', sid_2__Sample),
		new Data_Tuple.Tuple('sid:3', sid_3__Sample),
		new Data_Tuple.Tuple('sid:4', sid_4__Sample),
		new Data_Tuple.Tuple('sid:5', sid_5__Sample),
		new Data_Tuple.Tuple('sid:6', sid_6__Sample),
		new Data_Tuple.Tuple('sid:7', sid_7__Sample),
		new Data_Tuple.Tuple('sid:8', sid_8__Sample),
		new Data_Tuple.Tuple('sid:9', sid_9__Sample),
		new Data_Tuple.Tuple('sid:10', sid_10__Sample),
		new Data_Tuple.Tuple('sid:11', sid_11__Sample),
		new Data_Tuple.Tuple('jungbass', jungbass_0__Sample),
		new Data_Tuple.Tuple('jungbass:0', jungbass_0__Sample),
		new Data_Tuple.Tuple('jungbass:1', jungbass_1__Sample),
		new Data_Tuple.Tuple('jungbass:2', jungbass_2__Sample),
		new Data_Tuple.Tuple('jungbass:3', jungbass_3__Sample),
		new Data_Tuple.Tuple('jungbass:4', jungbass_4__Sample),
		new Data_Tuple.Tuple('jungbass:5', jungbass_5__Sample),
		new Data_Tuple.Tuple('jungbass:6', jungbass_6__Sample),
		new Data_Tuple.Tuple('jungbass:7', jungbass_7__Sample),
		new Data_Tuple.Tuple('jungbass:8', jungbass_8__Sample),
		new Data_Tuple.Tuple('jungbass:9', jungbass_9__Sample),
		new Data_Tuple.Tuple('jungbass:10', jungbass_10__Sample),
		new Data_Tuple.Tuple('jungbass:11', jungbass_11__Sample),
		new Data_Tuple.Tuple('jungbass:12', jungbass_12__Sample),
		new Data_Tuple.Tuple('jungbass:13', jungbass_13__Sample),
		new Data_Tuple.Tuple('jungbass:14', jungbass_14__Sample),
		new Data_Tuple.Tuple('jungbass:15', jungbass_15__Sample),
		new Data_Tuple.Tuple('jungbass:16', jungbass_16__Sample),
		new Data_Tuple.Tuple('jungbass:17', jungbass_17__Sample),
		new Data_Tuple.Tuple('jungbass:18', jungbass_18__Sample),
		new Data_Tuple.Tuple('jungbass:19', jungbass_19__Sample),
		new Data_Tuple.Tuple('gabba', gabba_0__Sample),
		new Data_Tuple.Tuple('gabba:0', gabba_0__Sample),
		new Data_Tuple.Tuple('gabba:1', gabba_1__Sample),
		new Data_Tuple.Tuple('gabba:2', gabba_2__Sample),
		new Data_Tuple.Tuple('gabba:3', gabba_3__Sample),
		new Data_Tuple.Tuple('crow', crow_0__Sample),
		new Data_Tuple.Tuple('crow:0', crow_0__Sample),
		new Data_Tuple.Tuple('crow:1', crow_1__Sample),
		new Data_Tuple.Tuple('crow:2', crow_2__Sample),
		new Data_Tuple.Tuple('crow:3', crow_3__Sample),
		new Data_Tuple.Tuple('birds3', birds3_0__Sample),
		new Data_Tuple.Tuple('birds3:0', birds3_0__Sample),
		new Data_Tuple.Tuple('birds3:1', birds3_1__Sample),
		new Data_Tuple.Tuple('birds3:2', birds3_2__Sample),
		new Data_Tuple.Tuple('birds3:3', birds3_3__Sample),
		new Data_Tuple.Tuple('birds3:4', birds3_4__Sample),
		new Data_Tuple.Tuple('birds3:5', birds3_5__Sample),
		new Data_Tuple.Tuple('birds3:6', birds3_6__Sample),
		new Data_Tuple.Tuple('birds3:7', birds3_7__Sample),
		new Data_Tuple.Tuple('birds3:8', birds3_8__Sample),
		new Data_Tuple.Tuple('birds3:9', birds3_9__Sample),
		new Data_Tuple.Tuple('birds3:10', birds3_10__Sample),
		new Data_Tuple.Tuple('birds3:11', birds3_11__Sample),
		new Data_Tuple.Tuple('birds3:12', birds3_12__Sample),
		new Data_Tuple.Tuple('birds3:13', birds3_13__Sample),
		new Data_Tuple.Tuple('birds3:14', birds3_14__Sample),
		new Data_Tuple.Tuple('birds3:15', birds3_15__Sample),
		new Data_Tuple.Tuple('birds3:16', birds3_16__Sample),
		new Data_Tuple.Tuple('birds3:17', birds3_17__Sample),
		new Data_Tuple.Tuple('birds3:18', birds3_18__Sample),
		new Data_Tuple.Tuple('auto', auto_0__Sample),
		new Data_Tuple.Tuple('auto:0', auto_0__Sample),
		new Data_Tuple.Tuple('auto:1', auto_1__Sample),
		new Data_Tuple.Tuple('auto:2', auto_2__Sample),
		new Data_Tuple.Tuple('auto:3', auto_3__Sample),
		new Data_Tuple.Tuple('auto:4', auto_4__Sample),
		new Data_Tuple.Tuple('auto:5', auto_5__Sample),
		new Data_Tuple.Tuple('auto:6', auto_6__Sample),
		new Data_Tuple.Tuple('auto:7', auto_7__Sample),
		new Data_Tuple.Tuple('auto:8', auto_8__Sample),
		new Data_Tuple.Tuple('auto:9', auto_9__Sample),
		new Data_Tuple.Tuple('auto:10', auto_10__Sample),
		new Data_Tuple.Tuple('mute', mute_0__Sample),
		new Data_Tuple.Tuple('mute:0', mute_0__Sample),
		new Data_Tuple.Tuple('mute:1', mute_1__Sample),
		new Data_Tuple.Tuple('mute:2', mute_2__Sample),
		new Data_Tuple.Tuple('mute:3', mute_3__Sample),
		new Data_Tuple.Tuple('mute:4', mute_4__Sample),
		new Data_Tuple.Tuple('mute:5', mute_5__Sample),
		new Data_Tuple.Tuple('mute:6', mute_6__Sample),
		new Data_Tuple.Tuple('mute:7', mute_7__Sample),
		new Data_Tuple.Tuple('mute:8', mute_8__Sample),
		new Data_Tuple.Tuple('mute:9', mute_9__Sample),
		new Data_Tuple.Tuple('mute:10', mute_10__Sample),
		new Data_Tuple.Tuple('mute:11', mute_11__Sample),
		new Data_Tuple.Tuple('mute:12', mute_12__Sample),
		new Data_Tuple.Tuple('mute:13', mute_13__Sample),
		new Data_Tuple.Tuple('mute:14', mute_14__Sample),
		new Data_Tuple.Tuple('mute:15', mute_15__Sample),
		new Data_Tuple.Tuple('mute:16', mute_16__Sample),
		new Data_Tuple.Tuple('mute:17', mute_17__Sample),
		new Data_Tuple.Tuple('mute:18', mute_18__Sample),
		new Data_Tuple.Tuple('mute:19', mute_19__Sample),
		new Data_Tuple.Tuple('mute:20', mute_20__Sample),
		new Data_Tuple.Tuple('mute:21', mute_21__Sample),
		new Data_Tuple.Tuple('mute:22', mute_22__Sample),
		new Data_Tuple.Tuple('mute:23', mute_23__Sample),
		new Data_Tuple.Tuple('mute:24', mute_24__Sample),
		new Data_Tuple.Tuple('mute:25', mute_25__Sample),
		new Data_Tuple.Tuple('mute:26', mute_26__Sample),
		new Data_Tuple.Tuple('mute:27', mute_27__Sample),
		new Data_Tuple.Tuple('sheffield', sheffield_0__Sample),
		new Data_Tuple.Tuple('sheffield:0', sheffield_0__Sample),
		new Data_Tuple.Tuple('casio', casio_0__Sample),
		new Data_Tuple.Tuple('casio:0', casio_0__Sample),
		new Data_Tuple.Tuple('casio:1', casio_1__Sample),
		new Data_Tuple.Tuple('casio:2', casio_2__Sample),
		new Data_Tuple.Tuple('sax', sax_0__Sample),
		new Data_Tuple.Tuple('sax:0', sax_0__Sample),
		new Data_Tuple.Tuple('sax:1', sax_1__Sample),
		new Data_Tuple.Tuple('sax:2', sax_2__Sample),
		new Data_Tuple.Tuple('sax:3', sax_3__Sample),
		new Data_Tuple.Tuple('sax:4', sax_4__Sample),
		new Data_Tuple.Tuple('sax:5', sax_5__Sample),
		new Data_Tuple.Tuple('sax:6', sax_6__Sample),
		new Data_Tuple.Tuple('sax:7', sax_7__Sample),
		new Data_Tuple.Tuple('sax:8', sax_8__Sample),
		new Data_Tuple.Tuple('sax:9', sax_9__Sample),
		new Data_Tuple.Tuple('sax:10', sax_10__Sample),
		new Data_Tuple.Tuple('sax:11', sax_11__Sample),
		new Data_Tuple.Tuple('sax:12', sax_12__Sample),
		new Data_Tuple.Tuple('sax:13', sax_13__Sample),
		new Data_Tuple.Tuple('sax:14', sax_14__Sample),
		new Data_Tuple.Tuple('sax:15', sax_15__Sample),
		new Data_Tuple.Tuple('sax:16', sax_16__Sample),
		new Data_Tuple.Tuple('sax:17', sax_17__Sample),
		new Data_Tuple.Tuple('sax:18', sax_18__Sample),
		new Data_Tuple.Tuple('sax:19', sax_19__Sample),
		new Data_Tuple.Tuple('sax:20', sax_20__Sample),
		new Data_Tuple.Tuple('sax:21', sax_21__Sample),
		new Data_Tuple.Tuple('circus', circus_0__Sample),
		new Data_Tuple.Tuple('circus:0', circus_0__Sample),
		new Data_Tuple.Tuple('circus:1', circus_1__Sample),
		new Data_Tuple.Tuple('circus:2', circus_2__Sample),
		new Data_Tuple.Tuple('yeah', yeah_0__Sample),
		new Data_Tuple.Tuple('yeah:0', yeah_0__Sample),
		new Data_Tuple.Tuple('yeah:1', yeah_1__Sample),
		new Data_Tuple.Tuple('yeah:2', yeah_2__Sample),
		new Data_Tuple.Tuple('yeah:3', yeah_3__Sample),
		new Data_Tuple.Tuple('yeah:4', yeah_4__Sample),
		new Data_Tuple.Tuple('yeah:5', yeah_5__Sample),
		new Data_Tuple.Tuple('yeah:6', yeah_6__Sample),
		new Data_Tuple.Tuple('yeah:7', yeah_7__Sample),
		new Data_Tuple.Tuple('yeah:8', yeah_8__Sample),
		new Data_Tuple.Tuple('yeah:9', yeah_9__Sample),
		new Data_Tuple.Tuple('yeah:10', yeah_10__Sample),
		new Data_Tuple.Tuple('yeah:11', yeah_11__Sample),
		new Data_Tuple.Tuple('yeah:12', yeah_12__Sample),
		new Data_Tuple.Tuple('yeah:13', yeah_13__Sample),
		new Data_Tuple.Tuple('yeah:14', yeah_14__Sample),
		new Data_Tuple.Tuple('yeah:15', yeah_15__Sample),
		new Data_Tuple.Tuple('yeah:16', yeah_16__Sample),
		new Data_Tuple.Tuple('yeah:17', yeah_17__Sample),
		new Data_Tuple.Tuple('yeah:18', yeah_18__Sample),
		new Data_Tuple.Tuple('yeah:19', yeah_19__Sample),
		new Data_Tuple.Tuple('yeah:20', yeah_20__Sample),
		new Data_Tuple.Tuple('yeah:21', yeah_21__Sample),
		new Data_Tuple.Tuple('yeah:22', yeah_22__Sample),
		new Data_Tuple.Tuple('yeah:23', yeah_23__Sample),
		new Data_Tuple.Tuple('yeah:24', yeah_24__Sample),
		new Data_Tuple.Tuple('yeah:25', yeah_25__Sample),
		new Data_Tuple.Tuple('yeah:26', yeah_26__Sample),
		new Data_Tuple.Tuple('yeah:27', yeah_27__Sample),
		new Data_Tuple.Tuple('yeah:28', yeah_28__Sample),
		new Data_Tuple.Tuple('yeah:29', yeah_29__Sample),
		new Data_Tuple.Tuple('yeah:30', yeah_30__Sample),
		new Data_Tuple.Tuple('oc', oc_0__Sample),
		new Data_Tuple.Tuple('oc:0', oc_0__Sample),
		new Data_Tuple.Tuple('oc:1', oc_1__Sample),
		new Data_Tuple.Tuple('oc:2', oc_2__Sample),
		new Data_Tuple.Tuple('oc:3', oc_3__Sample),
		new Data_Tuple.Tuple('alex', alex_0__Sample),
		new Data_Tuple.Tuple('alex:0', alex_0__Sample),
		new Data_Tuple.Tuple('alex:1', alex_1__Sample),
		new Data_Tuple.Tuple('can', can_0__Sample),
		new Data_Tuple.Tuple('can:0', can_0__Sample),
		new Data_Tuple.Tuple('can:1', can_1__Sample),
		new Data_Tuple.Tuple('can:2', can_2__Sample),
		new Data_Tuple.Tuple('can:3', can_3__Sample),
		new Data_Tuple.Tuple('can:4', can_4__Sample),
		new Data_Tuple.Tuple('can:5', can_5__Sample),
		new Data_Tuple.Tuple('can:6', can_6__Sample),
		new Data_Tuple.Tuple('can:7', can_7__Sample),
		new Data_Tuple.Tuple('can:8', can_8__Sample),
		new Data_Tuple.Tuple('can:9', can_9__Sample),
		new Data_Tuple.Tuple('can:10', can_10__Sample),
		new Data_Tuple.Tuple('can:11', can_11__Sample),
		new Data_Tuple.Tuple('can:12', can_12__Sample),
		new Data_Tuple.Tuple('can:13', can_13__Sample),
		new Data_Tuple.Tuple('jungle', jungle_0__Sample),
		new Data_Tuple.Tuple('jungle:0', jungle_0__Sample),
		new Data_Tuple.Tuple('jungle:1', jungle_1__Sample),
		new Data_Tuple.Tuple('jungle:2', jungle_2__Sample),
		new Data_Tuple.Tuple('jungle:3', jungle_3__Sample),
		new Data_Tuple.Tuple('jungle:4', jungle_4__Sample),
		new Data_Tuple.Tuple('jungle:5', jungle_5__Sample),
		new Data_Tuple.Tuple('jungle:6', jungle_6__Sample),
		new Data_Tuple.Tuple('jungle:7', jungle_7__Sample),
		new Data_Tuple.Tuple('jungle:8', jungle_8__Sample),
		new Data_Tuple.Tuple('jungle:9', jungle_9__Sample),
		new Data_Tuple.Tuple('jungle:10', jungle_10__Sample),
		new Data_Tuple.Tuple('jungle:11', jungle_11__Sample),
		new Data_Tuple.Tuple('jungle:12', jungle_12__Sample),
		new Data_Tuple.Tuple('moog', moog_0__Sample),
		new Data_Tuple.Tuple('moog:0', moog_0__Sample),
		new Data_Tuple.Tuple('moog:1', moog_1__Sample),
		new Data_Tuple.Tuple('moog:2', moog_2__Sample),
		new Data_Tuple.Tuple('moog:3', moog_3__Sample),
		new Data_Tuple.Tuple('moog:4', moog_4__Sample),
		new Data_Tuple.Tuple('moog:5', moog_5__Sample),
		new Data_Tuple.Tuple('moog:6', moog_6__Sample),
		new Data_Tuple.Tuple('h', h_0__Sample),
		new Data_Tuple.Tuple('h:0', h_0__Sample),
		new Data_Tuple.Tuple('h:1', h_1__Sample),
		new Data_Tuple.Tuple('h:2', h_2__Sample),
		new Data_Tuple.Tuple('h:3', h_3__Sample),
		new Data_Tuple.Tuple('h:4', h_4__Sample),
		new Data_Tuple.Tuple('h:5', h_5__Sample),
		new Data_Tuple.Tuple('h:6', h_6__Sample),
		new Data_Tuple.Tuple('wind', wind_0__Sample),
		new Data_Tuple.Tuple('wind:0', wind_0__Sample),
		new Data_Tuple.Tuple('wind:1', wind_1__Sample),
		new Data_Tuple.Tuple('wind:2', wind_2__Sample),
		new Data_Tuple.Tuple('wind:3', wind_3__Sample),
		new Data_Tuple.Tuple('wind:4', wind_4__Sample),
		new Data_Tuple.Tuple('wind:5', wind_5__Sample),
		new Data_Tuple.Tuple('wind:6', wind_6__Sample),
		new Data_Tuple.Tuple('wind:7', wind_7__Sample),
		new Data_Tuple.Tuple('wind:8', wind_8__Sample),
		new Data_Tuple.Tuple('wind:9', wind_9__Sample),
		new Data_Tuple.Tuple('rs', rs_0__Sample),
		new Data_Tuple.Tuple('rs:0', rs_0__Sample),
		new Data_Tuple.Tuple('em2', em2_0__Sample),
		new Data_Tuple.Tuple('em2:0', em2_0__Sample),
		new Data_Tuple.Tuple('em2:1', em2_1__Sample),
		new Data_Tuple.Tuple('em2:2', em2_2__Sample),
		new Data_Tuple.Tuple('em2:3', em2_3__Sample),
		new Data_Tuple.Tuple('em2:4', em2_4__Sample),
		new Data_Tuple.Tuple('em2:5', em2_5__Sample),
		new Data_Tuple.Tuple('noise2', noise2_0__Sample),
		new Data_Tuple.Tuple('noise2:0', noise2_0__Sample),
		new Data_Tuple.Tuple('noise2:1', noise2_1__Sample),
		new Data_Tuple.Tuple('noise2:2', noise2_2__Sample),
		new Data_Tuple.Tuple('noise2:3', noise2_3__Sample),
		new Data_Tuple.Tuple('noise2:4', noise2_4__Sample),
		new Data_Tuple.Tuple('noise2:5', noise2_5__Sample),
		new Data_Tuple.Tuple('noise2:6', noise2_6__Sample),
		new Data_Tuple.Tuple('noise2:7', noise2_7__Sample),
		new Data_Tuple.Tuple('foo', foo_0__Sample),
		new Data_Tuple.Tuple('foo:0', foo_0__Sample),
		new Data_Tuple.Tuple('foo:1', foo_1__Sample),
		new Data_Tuple.Tuple('foo:2', foo_2__Sample),
		new Data_Tuple.Tuple('foo:3', foo_3__Sample),
		new Data_Tuple.Tuple('foo:4', foo_4__Sample),
		new Data_Tuple.Tuple('foo:5', foo_5__Sample),
		new Data_Tuple.Tuple('foo:6', foo_6__Sample),
		new Data_Tuple.Tuple('foo:7', foo_7__Sample),
		new Data_Tuple.Tuple('foo:8', foo_8__Sample),
		new Data_Tuple.Tuple('foo:9', foo_9__Sample),
		new Data_Tuple.Tuple('foo:10', foo_10__Sample),
		new Data_Tuple.Tuple('foo:11', foo_11__Sample),
		new Data_Tuple.Tuple('foo:12', foo_12__Sample),
		new Data_Tuple.Tuple('foo:13', foo_13__Sample),
		new Data_Tuple.Tuple('foo:14', foo_14__Sample),
		new Data_Tuple.Tuple('foo:15', foo_15__Sample),
		new Data_Tuple.Tuple('foo:16', foo_16__Sample),
		new Data_Tuple.Tuple('foo:17', foo_17__Sample),
		new Data_Tuple.Tuple('foo:18', foo_18__Sample),
		new Data_Tuple.Tuple('foo:19', foo_19__Sample),
		new Data_Tuple.Tuple('foo:20', foo_20__Sample),
		new Data_Tuple.Tuple('foo:21', foo_21__Sample),
		new Data_Tuple.Tuple('foo:22', foo_22__Sample),
		new Data_Tuple.Tuple('foo:23', foo_23__Sample),
		new Data_Tuple.Tuple('foo:24', foo_24__Sample),
		new Data_Tuple.Tuple('foo:25', foo_25__Sample),
		new Data_Tuple.Tuple('foo:26', foo_26__Sample),
		new Data_Tuple.Tuple('armora', armora_0__Sample),
		new Data_Tuple.Tuple('armora:0', armora_0__Sample),
		new Data_Tuple.Tuple('armora:1', armora_1__Sample),
		new Data_Tuple.Tuple('armora:2', armora_2__Sample),
		new Data_Tuple.Tuple('armora:3', armora_3__Sample),
		new Data_Tuple.Tuple('armora:4', armora_4__Sample),
		new Data_Tuple.Tuple('armora:5', armora_5__Sample),
		new Data_Tuple.Tuple('armora:6', armora_6__Sample),
		new Data_Tuple.Tuple('bend', bend_0__Sample),
		new Data_Tuple.Tuple('bend:0', bend_0__Sample),
		new Data_Tuple.Tuple('bend:1', bend_1__Sample),
		new Data_Tuple.Tuple('bend:2', bend_2__Sample),
		new Data_Tuple.Tuple('bend:3', bend_3__Sample),
		new Data_Tuple.Tuple('newnotes', newnotes_0__Sample),
		new Data_Tuple.Tuple('newnotes:0', newnotes_0__Sample),
		new Data_Tuple.Tuple('newnotes:1', newnotes_1__Sample),
		new Data_Tuple.Tuple('newnotes:2', newnotes_2__Sample),
		new Data_Tuple.Tuple('newnotes:3', newnotes_3__Sample),
		new Data_Tuple.Tuple('newnotes:4', newnotes_4__Sample),
		new Data_Tuple.Tuple('newnotes:5', newnotes_5__Sample),
		new Data_Tuple.Tuple('newnotes:6', newnotes_6__Sample),
		new Data_Tuple.Tuple('newnotes:7', newnotes_7__Sample),
		new Data_Tuple.Tuple('newnotes:8', newnotes_8__Sample),
		new Data_Tuple.Tuple('newnotes:9', newnotes_9__Sample),
		new Data_Tuple.Tuple('newnotes:10', newnotes_10__Sample),
		new Data_Tuple.Tuple('newnotes:11', newnotes_11__Sample),
		new Data_Tuple.Tuple('newnotes:12', newnotes_12__Sample),
		new Data_Tuple.Tuple('newnotes:13', newnotes_13__Sample),
		new Data_Tuple.Tuple('newnotes:14', newnotes_14__Sample),
		new Data_Tuple.Tuple('pebbles', pebbles_0__Sample),
		new Data_Tuple.Tuple('pebbles:0', pebbles_0__Sample),
		new Data_Tuple.Tuple('mash2', mash2_0__Sample),
		new Data_Tuple.Tuple('mash2:0', mash2_0__Sample),
		new Data_Tuple.Tuple('mash2:1', mash2_1__Sample),
		new Data_Tuple.Tuple('mash2:2', mash2_2__Sample),
		new Data_Tuple.Tuple('mash2:3', mash2_3__Sample),
		new Data_Tuple.Tuple('diphone2', diphone2_0__Sample),
		new Data_Tuple.Tuple('diphone2:0', diphone2_0__Sample),
		new Data_Tuple.Tuple('diphone2:1', diphone2_1__Sample),
		new Data_Tuple.Tuple('diphone2:2', diphone2_2__Sample),
		new Data_Tuple.Tuple('diphone2:3', diphone2_3__Sample),
		new Data_Tuple.Tuple('diphone2:4', diphone2_4__Sample),
		new Data_Tuple.Tuple('diphone2:5', diphone2_5__Sample),
		new Data_Tuple.Tuple('diphone2:6', diphone2_6__Sample),
		new Data_Tuple.Tuple('diphone2:7', diphone2_7__Sample),
		new Data_Tuple.Tuple('diphone2:8', diphone2_8__Sample),
		new Data_Tuple.Tuple('diphone2:9', diphone2_9__Sample),
		new Data_Tuple.Tuple('diphone2:10', diphone2_10__Sample),
		new Data_Tuple.Tuple('diphone2:11', diphone2_11__Sample),
		new Data_Tuple.Tuple('e', e_0__Sample),
		new Data_Tuple.Tuple('e:0', e_0__Sample),
		new Data_Tuple.Tuple('e:1', e_1__Sample),
		new Data_Tuple.Tuple('e:2', e_2__Sample),
		new Data_Tuple.Tuple('e:3', e_3__Sample),
		new Data_Tuple.Tuple('e:4', e_4__Sample),
		new Data_Tuple.Tuple('e:5', e_5__Sample),
		new Data_Tuple.Tuple('e:6', e_6__Sample),
		new Data_Tuple.Tuple('e:7', e_7__Sample),
		new Data_Tuple.Tuple('bubble', bubble_0__Sample),
		new Data_Tuple.Tuple('bubble:0', bubble_0__Sample),
		new Data_Tuple.Tuple('bubble:1', bubble_1__Sample),
		new Data_Tuple.Tuple('bubble:2', bubble_2__Sample),
		new Data_Tuple.Tuple('bubble:3', bubble_3__Sample),
		new Data_Tuple.Tuple('bubble:4', bubble_4__Sample),
		new Data_Tuple.Tuple('bubble:5', bubble_5__Sample),
		new Data_Tuple.Tuple('bubble:6', bubble_6__Sample),
		new Data_Tuple.Tuple('bubble:7', bubble_7__Sample),
		new Data_Tuple.Tuple('insect', insect_0__Sample),
		new Data_Tuple.Tuple('insect:0', insect_0__Sample),
		new Data_Tuple.Tuple('insect:1', insect_1__Sample),
		new Data_Tuple.Tuple('insect:2', insect_2__Sample),
		new Data_Tuple.Tuple('ade', ade_0__Sample),
		new Data_Tuple.Tuple('ade:0', ade_0__Sample),
		new Data_Tuple.Tuple('ade:1', ade_1__Sample),
		new Data_Tuple.Tuple('ade:2', ade_2__Sample),
		new Data_Tuple.Tuple('ade:3', ade_3__Sample),
		new Data_Tuple.Tuple('ade:4', ade_4__Sample),
		new Data_Tuple.Tuple('ade:5', ade_5__Sample),
		new Data_Tuple.Tuple('ade:6', ade_6__Sample),
		new Data_Tuple.Tuple('ade:7', ade_7__Sample),
		new Data_Tuple.Tuple('ade:8', ade_8__Sample),
		new Data_Tuple.Tuple('ade:9', ade_9__Sample),
		new Data_Tuple.Tuple('glitch', glitch_0__Sample),
		new Data_Tuple.Tuple('glitch:0', glitch_0__Sample),
		new Data_Tuple.Tuple('glitch:1', glitch_1__Sample),
		new Data_Tuple.Tuple('glitch:2', glitch_2__Sample),
		new Data_Tuple.Tuple('glitch:3', glitch_3__Sample),
		new Data_Tuple.Tuple('glitch:4', glitch_4__Sample),
		new Data_Tuple.Tuple('glitch:5', glitch_5__Sample),
		new Data_Tuple.Tuple('glitch:6', glitch_6__Sample),
		new Data_Tuple.Tuple('glitch:7', glitch_7__Sample),
		new Data_Tuple.Tuple('haw', haw_0__Sample),
		new Data_Tuple.Tuple('haw:0', haw_0__Sample),
		new Data_Tuple.Tuple('haw:1', haw_1__Sample),
		new Data_Tuple.Tuple('haw:2', haw_2__Sample),
		new Data_Tuple.Tuple('haw:3', haw_3__Sample),
		new Data_Tuple.Tuple('haw:4', haw_4__Sample),
		new Data_Tuple.Tuple('haw:5', haw_5__Sample),
		new Data_Tuple.Tuple('popkick', popkick_0__Sample),
		new Data_Tuple.Tuple('popkick:0', popkick_0__Sample),
		new Data_Tuple.Tuple('popkick:1', popkick_1__Sample),
		new Data_Tuple.Tuple('popkick:2', popkick_2__Sample),
		new Data_Tuple.Tuple('popkick:3', popkick_3__Sample),
		new Data_Tuple.Tuple('popkick:4', popkick_4__Sample),
		new Data_Tuple.Tuple('popkick:5', popkick_5__Sample),
		new Data_Tuple.Tuple('popkick:6', popkick_6__Sample),
		new Data_Tuple.Tuple('popkick:7', popkick_7__Sample),
		new Data_Tuple.Tuple('popkick:8', popkick_8__Sample),
		new Data_Tuple.Tuple('popkick:9', popkick_9__Sample),
		new Data_Tuple.Tuple('breaks157', breaks157_0__Sample),
		new Data_Tuple.Tuple('breaks157:0', breaks157_0__Sample),
		new Data_Tuple.Tuple('gtr', gtr_0__Sample),
		new Data_Tuple.Tuple('gtr:0', gtr_0__Sample),
		new Data_Tuple.Tuple('gtr:1', gtr_1__Sample),
		new Data_Tuple.Tuple('gtr:2', gtr_2__Sample),
		new Data_Tuple.Tuple('clubkick', clubkick_0__Sample),
		new Data_Tuple.Tuple('clubkick:0', clubkick_0__Sample),
		new Data_Tuple.Tuple('clubkick:1', clubkick_1__Sample),
		new Data_Tuple.Tuple('clubkick:2', clubkick_2__Sample),
		new Data_Tuple.Tuple('clubkick:3', clubkick_3__Sample),
		new Data_Tuple.Tuple('clubkick:4', clubkick_4__Sample),
		new Data_Tuple.Tuple('breaks152', breaks152_0__Sample),
		new Data_Tuple.Tuple('breaks152:0', breaks152_0__Sample),
		new Data_Tuple.Tuple('x_808bd', x_808bd_0__Sample),
		new Data_Tuple.Tuple('x_808bd:0', x_808bd_0__Sample),
		new Data_Tuple.Tuple('x_808bd:1', x_808bd_1__Sample),
		new Data_Tuple.Tuple('x_808bd:2', x_808bd_2__Sample),
		new Data_Tuple.Tuple('x_808bd:3', x_808bd_3__Sample),
		new Data_Tuple.Tuple('x_808bd:4', x_808bd_4__Sample),
		new Data_Tuple.Tuple('x_808bd:5', x_808bd_5__Sample),
		new Data_Tuple.Tuple('x_808bd:6', x_808bd_6__Sample),
		new Data_Tuple.Tuple('x_808bd:7', x_808bd_7__Sample),
		new Data_Tuple.Tuple('x_808bd:8', x_808bd_8__Sample),
		new Data_Tuple.Tuple('x_808bd:9', x_808bd_9__Sample),
		new Data_Tuple.Tuple('x_808bd:10', x_808bd_10__Sample),
		new Data_Tuple.Tuple('x_808bd:11', x_808bd_11__Sample),
		new Data_Tuple.Tuple('x_808bd:12', x_808bd_12__Sample),
		new Data_Tuple.Tuple('x_808bd:13', x_808bd_13__Sample),
		new Data_Tuple.Tuple('x_808bd:14', x_808bd_14__Sample),
		new Data_Tuple.Tuple('x_808bd:15', x_808bd_15__Sample),
		new Data_Tuple.Tuple('x_808bd:16', x_808bd_16__Sample),
		new Data_Tuple.Tuple('x_808bd:17', x_808bd_17__Sample),
		new Data_Tuple.Tuple('x_808bd:18', x_808bd_18__Sample),
		new Data_Tuple.Tuple('x_808bd:19', x_808bd_19__Sample),
		new Data_Tuple.Tuple('x_808bd:20', x_808bd_20__Sample),
		new Data_Tuple.Tuple('x_808bd:21', x_808bd_21__Sample),
		new Data_Tuple.Tuple('x_808bd:22', x_808bd_22__Sample),
		new Data_Tuple.Tuple('x_808bd:23', x_808bd_23__Sample),
		new Data_Tuple.Tuple('x_808bd:24', x_808bd_24__Sample),
		new Data_Tuple.Tuple('miniyeah', miniyeah_0__Sample),
		new Data_Tuple.Tuple('miniyeah:0', miniyeah_0__Sample),
		new Data_Tuple.Tuple('miniyeah:1', miniyeah_1__Sample),
		new Data_Tuple.Tuple('miniyeah:2', miniyeah_2__Sample),
		new Data_Tuple.Tuple('miniyeah:3', miniyeah_3__Sample),
		new Data_Tuple.Tuple('if', if_0__Sample),
		new Data_Tuple.Tuple('if:0', if_0__Sample),
		new Data_Tuple.Tuple('if:1', if_1__Sample),
		new Data_Tuple.Tuple('if:2', if_2__Sample),
		new Data_Tuple.Tuple('if:3', if_3__Sample),
		new Data_Tuple.Tuple('if:4', if_4__Sample),
		new Data_Tuple.Tuple('x_808oh', x_808oh_0__Sample),
		new Data_Tuple.Tuple('x_808oh:0', x_808oh_0__Sample),
		new Data_Tuple.Tuple('x_808oh:1', x_808oh_1__Sample),
		new Data_Tuple.Tuple('x_808oh:2', x_808oh_2__Sample),
		new Data_Tuple.Tuple('x_808oh:3', x_808oh_3__Sample),
		new Data_Tuple.Tuple('x_808oh:4', x_808oh_4__Sample),
		new Data_Tuple.Tuple('house', house_0__Sample),
		new Data_Tuple.Tuple('house:0', house_0__Sample),
		new Data_Tuple.Tuple('house:1', house_1__Sample),
		new Data_Tuple.Tuple('house:2', house_2__Sample),
		new Data_Tuple.Tuple('house:3', house_3__Sample),
		new Data_Tuple.Tuple('house:4', house_4__Sample),
		new Data_Tuple.Tuple('house:5', house_5__Sample),
		new Data_Tuple.Tuple('house:6', house_6__Sample),
		new Data_Tuple.Tuple('house:7', house_7__Sample),
		new Data_Tuple.Tuple('dr', dr_0__Sample),
		new Data_Tuple.Tuple('dr:0', dr_0__Sample),
		new Data_Tuple.Tuple('dr:1', dr_1__Sample),
		new Data_Tuple.Tuple('dr:2', dr_2__Sample),
		new Data_Tuple.Tuple('dr:3', dr_3__Sample),
		new Data_Tuple.Tuple('dr:4', dr_4__Sample),
		new Data_Tuple.Tuple('dr:5', dr_5__Sample),
		new Data_Tuple.Tuple('dr:6', dr_6__Sample),
		new Data_Tuple.Tuple('dr:7', dr_7__Sample),
		new Data_Tuple.Tuple('dr:8', dr_8__Sample),
		new Data_Tuple.Tuple('dr:9', dr_9__Sample),
		new Data_Tuple.Tuple('dr:10', dr_10__Sample),
		new Data_Tuple.Tuple('dr:11', dr_11__Sample),
		new Data_Tuple.Tuple('dr:12', dr_12__Sample),
		new Data_Tuple.Tuple('dr:13', dr_13__Sample),
		new Data_Tuple.Tuple('dr:14', dr_14__Sample),
		new Data_Tuple.Tuple('dr:15', dr_15__Sample),
		new Data_Tuple.Tuple('dr:16', dr_16__Sample),
		new Data_Tuple.Tuple('dr:17', dr_17__Sample),
		new Data_Tuple.Tuple('dr:18', dr_18__Sample),
		new Data_Tuple.Tuple('dr:19', dr_19__Sample),
		new Data_Tuple.Tuple('dr:20', dr_20__Sample),
		new Data_Tuple.Tuple('dr:21', dr_21__Sample),
		new Data_Tuple.Tuple('dr:22', dr_22__Sample),
		new Data_Tuple.Tuple('dr:23', dr_23__Sample),
		new Data_Tuple.Tuple('dr:24', dr_24__Sample),
		new Data_Tuple.Tuple('dr:25', dr_25__Sample),
		new Data_Tuple.Tuple('dr:26', dr_26__Sample),
		new Data_Tuple.Tuple('dr:27', dr_27__Sample),
		new Data_Tuple.Tuple('dr:28', dr_28__Sample),
		new Data_Tuple.Tuple('dr:29', dr_29__Sample),
		new Data_Tuple.Tuple('dr:30', dr_30__Sample),
		new Data_Tuple.Tuple('dr:31', dr_31__Sample),
		new Data_Tuple.Tuple('dr:32', dr_32__Sample),
		new Data_Tuple.Tuple('dr:33', dr_33__Sample),
		new Data_Tuple.Tuple('dr:34', dr_34__Sample),
		new Data_Tuple.Tuple('dr:35', dr_35__Sample),
		new Data_Tuple.Tuple('dr:36', dr_36__Sample),
		new Data_Tuple.Tuple('dr:37', dr_37__Sample),
		new Data_Tuple.Tuple('dr:38', dr_38__Sample),
		new Data_Tuple.Tuple('dr:39', dr_39__Sample),
		new Data_Tuple.Tuple('dr:40', dr_40__Sample),
		new Data_Tuple.Tuple('dr:41', dr_41__Sample),
		new Data_Tuple.Tuple('dr55', dr55_0__Sample),
		new Data_Tuple.Tuple('dr55:0', dr55_0__Sample),
		new Data_Tuple.Tuple('dr55:1', dr55_1__Sample),
		new Data_Tuple.Tuple('dr55:2', dr55_2__Sample),
		new Data_Tuple.Tuple('dr55:3', dr55_3__Sample),
		new Data_Tuple.Tuple('bass', bass_0__Sample),
		new Data_Tuple.Tuple('bass:0', bass_0__Sample),
		new Data_Tuple.Tuple('bass:1', bass_1__Sample),
		new Data_Tuple.Tuple('bass:2', bass_2__Sample),
		new Data_Tuple.Tuple('bass:3', bass_3__Sample),
		new Data_Tuple.Tuple('ho', ho_0__Sample),
		new Data_Tuple.Tuple('ho:0', ho_0__Sample),
		new Data_Tuple.Tuple('ho:1', ho_1__Sample),
		new Data_Tuple.Tuple('ho:2', ho_2__Sample),
		new Data_Tuple.Tuple('ho:3', ho_3__Sample),
		new Data_Tuple.Tuple('ho:4', ho_4__Sample),
		new Data_Tuple.Tuple('ho:5', ho_5__Sample),
		new Data_Tuple.Tuple('hardkick', hardkick_0__Sample),
		new Data_Tuple.Tuple('hardkick:0', hardkick_0__Sample),
		new Data_Tuple.Tuple('hardkick:1', hardkick_1__Sample),
		new Data_Tuple.Tuple('hardkick:2', hardkick_2__Sample),
		new Data_Tuple.Tuple('hardkick:3', hardkick_3__Sample),
		new Data_Tuple.Tuple('hardkick:4', hardkick_4__Sample),
		new Data_Tuple.Tuple('hardkick:5', hardkick_5__Sample),
		new Data_Tuple.Tuple('x_808hc', x_808hc_0__Sample),
		new Data_Tuple.Tuple('x_808hc:0', x_808hc_0__Sample),
		new Data_Tuple.Tuple('x_808hc:1', x_808hc_1__Sample),
		new Data_Tuple.Tuple('x_808hc:2', x_808hc_2__Sample),
		new Data_Tuple.Tuple('x_808hc:3', x_808hc_3__Sample),
		new Data_Tuple.Tuple('x_808hc:4', x_808hc_4__Sample),
		new Data_Tuple.Tuple('hit', hit_0__Sample),
		new Data_Tuple.Tuple('hit:0', hit_0__Sample),
		new Data_Tuple.Tuple('hit:1', hit_1__Sample),
		new Data_Tuple.Tuple('hit:2', hit_2__Sample),
		new Data_Tuple.Tuple('hit:3', hit_3__Sample),
		new Data_Tuple.Tuple('hit:4', hit_4__Sample),
		new Data_Tuple.Tuple('hit:5', hit_5__Sample),
		new Data_Tuple.Tuple('breaks165', breaks165_0__Sample),
		new Data_Tuple.Tuple('breaks165:0', breaks165_0__Sample),
		new Data_Tuple.Tuple('dr2', dr2_0__Sample),
		new Data_Tuple.Tuple('dr2:0', dr2_0__Sample),
		new Data_Tuple.Tuple('dr2:1', dr2_1__Sample),
		new Data_Tuple.Tuple('dr2:2', dr2_2__Sample),
		new Data_Tuple.Tuple('dr2:3', dr2_3__Sample),
		new Data_Tuple.Tuple('dr2:4', dr2_4__Sample),
		new Data_Tuple.Tuple('dr2:5', dr2_5__Sample),
		new Data_Tuple.Tuple('tabla', tabla_0__Sample),
		new Data_Tuple.Tuple('tabla:0', tabla_0__Sample),
		new Data_Tuple.Tuple('tabla:1', tabla_1__Sample),
		new Data_Tuple.Tuple('tabla:2', tabla_2__Sample),
		new Data_Tuple.Tuple('tabla:3', tabla_3__Sample),
		new Data_Tuple.Tuple('tabla:4', tabla_4__Sample),
		new Data_Tuple.Tuple('tabla:5', tabla_5__Sample),
		new Data_Tuple.Tuple('tabla:6', tabla_6__Sample),
		new Data_Tuple.Tuple('tabla:7', tabla_7__Sample),
		new Data_Tuple.Tuple('tabla:8', tabla_8__Sample),
		new Data_Tuple.Tuple('tabla:9', tabla_9__Sample),
		new Data_Tuple.Tuple('tabla:10', tabla_10__Sample),
		new Data_Tuple.Tuple('tabla:11', tabla_11__Sample),
		new Data_Tuple.Tuple('tabla:12', tabla_12__Sample),
		new Data_Tuple.Tuple('tabla:13', tabla_13__Sample),
		new Data_Tuple.Tuple('tabla:14', tabla_14__Sample),
		new Data_Tuple.Tuple('tabla:15', tabla_15__Sample),
		new Data_Tuple.Tuple('tabla:16', tabla_16__Sample),
		new Data_Tuple.Tuple('tabla:17', tabla_17__Sample),
		new Data_Tuple.Tuple('tabla:18', tabla_18__Sample),
		new Data_Tuple.Tuple('tabla:19', tabla_19__Sample),
		new Data_Tuple.Tuple('tabla:20', tabla_20__Sample),
		new Data_Tuple.Tuple('tabla:21', tabla_21__Sample),
		new Data_Tuple.Tuple('tabla:22', tabla_22__Sample),
		new Data_Tuple.Tuple('tabla:23', tabla_23__Sample),
		new Data_Tuple.Tuple('tabla:24', tabla_24__Sample),
		new Data_Tuple.Tuple('tabla:25', tabla_25__Sample),
		new Data_Tuple.Tuple('dork2', dork2_0__Sample),
		new Data_Tuple.Tuple('dork2:0', dork2_0__Sample),
		new Data_Tuple.Tuple('dork2:1', dork2_1__Sample),
		new Data_Tuple.Tuple('dork2:2', dork2_2__Sample),
		new Data_Tuple.Tuple('dork2:3', dork2_3__Sample),
		new Data_Tuple.Tuple('hc', hc_0__Sample),
		new Data_Tuple.Tuple('hc:0', hc_0__Sample),
		new Data_Tuple.Tuple('hc:1', hc_1__Sample),
		new Data_Tuple.Tuple('hc:2', hc_2__Sample),
		new Data_Tuple.Tuple('hc:3', hc_3__Sample),
		new Data_Tuple.Tuple('hc:4', hc_4__Sample),
		new Data_Tuple.Tuple('hc:5', hc_5__Sample),
		new Data_Tuple.Tuple('bassfoo', bassfoo_0__Sample),
		new Data_Tuple.Tuple('bassfoo:0', bassfoo_0__Sample),
		new Data_Tuple.Tuple('bassfoo:1', bassfoo_1__Sample),
		new Data_Tuple.Tuple('bassfoo:2', bassfoo_2__Sample),
		new Data_Tuple.Tuple('seawolf', seawolf_0__Sample),
		new Data_Tuple.Tuple('seawolf:0', seawolf_0__Sample),
		new Data_Tuple.Tuple('seawolf:1', seawolf_1__Sample),
		new Data_Tuple.Tuple('seawolf:2', seawolf_2__Sample),
		new Data_Tuple.Tuple('cp', cp_0__Sample),
		new Data_Tuple.Tuple('cp:0', cp_0__Sample),
		new Data_Tuple.Tuple('cp:1', cp_1__Sample),
		new Data_Tuple.Tuple('jazz', jazz_0__Sample),
		new Data_Tuple.Tuple('jazz:0', jazz_0__Sample),
		new Data_Tuple.Tuple('jazz:1', jazz_1__Sample),
		new Data_Tuple.Tuple('jazz:2', jazz_2__Sample),
		new Data_Tuple.Tuple('jazz:3', jazz_3__Sample),
		new Data_Tuple.Tuple('jazz:4', jazz_4__Sample),
		new Data_Tuple.Tuple('jazz:5', jazz_5__Sample),
		new Data_Tuple.Tuple('jazz:6', jazz_6__Sample),
		new Data_Tuple.Tuple('jazz:7', jazz_7__Sample),
		new Data_Tuple.Tuple('juno', juno_0__Sample),
		new Data_Tuple.Tuple('juno:0', juno_0__Sample),
		new Data_Tuple.Tuple('juno:1', juno_1__Sample),
		new Data_Tuple.Tuple('juno:2', juno_2__Sample),
		new Data_Tuple.Tuple('juno:3', juno_3__Sample),
		new Data_Tuple.Tuple('juno:4', juno_4__Sample),
		new Data_Tuple.Tuple('juno:5', juno_5__Sample),
		new Data_Tuple.Tuple('juno:6', juno_6__Sample),
		new Data_Tuple.Tuple('juno:7', juno_7__Sample),
		new Data_Tuple.Tuple('juno:8', juno_8__Sample),
		new Data_Tuple.Tuple('juno:9', juno_9__Sample),
		new Data_Tuple.Tuple('juno:10', juno_10__Sample),
		new Data_Tuple.Tuple('juno:11', juno_11__Sample),
		new Data_Tuple.Tuple('birds', birds_0__Sample),
		new Data_Tuple.Tuple('birds:0', birds_0__Sample),
		new Data_Tuple.Tuple('birds:1', birds_1__Sample),
		new Data_Tuple.Tuple('birds:2', birds_2__Sample),
		new Data_Tuple.Tuple('birds:3', birds_3__Sample),
		new Data_Tuple.Tuple('birds:4', birds_4__Sample),
		new Data_Tuple.Tuple('birds:5', birds_5__Sample),
		new Data_Tuple.Tuple('birds:6', birds_6__Sample),
		new Data_Tuple.Tuple('birds:7', birds_7__Sample),
		new Data_Tuple.Tuple('birds:8', birds_8__Sample),
		new Data_Tuple.Tuple('birds:9', birds_9__Sample),
		new Data_Tuple.Tuple('glasstap', glasstap_0__Sample),
		new Data_Tuple.Tuple('glasstap:0', glasstap_0__Sample),
		new Data_Tuple.Tuple('glasstap:1', glasstap_1__Sample),
		new Data_Tuple.Tuple('glasstap:2', glasstap_2__Sample),
		new Data_Tuple.Tuple('bass1', bass1_0__Sample),
		new Data_Tuple.Tuple('bass1:0', bass1_0__Sample),
		new Data_Tuple.Tuple('bass1:1', bass1_1__Sample),
		new Data_Tuple.Tuple('bass1:2', bass1_2__Sample),
		new Data_Tuple.Tuple('bass1:3', bass1_3__Sample),
		new Data_Tuple.Tuple('bass1:4', bass1_4__Sample),
		new Data_Tuple.Tuple('bass1:5', bass1_5__Sample),
		new Data_Tuple.Tuple('bass1:6', bass1_6__Sample),
		new Data_Tuple.Tuple('bass1:7', bass1_7__Sample),
		new Data_Tuple.Tuple('bass1:8', bass1_8__Sample),
		new Data_Tuple.Tuple('bass1:9', bass1_9__Sample),
		new Data_Tuple.Tuple('bass1:10', bass1_10__Sample),
		new Data_Tuple.Tuple('bass1:11', bass1_11__Sample),
		new Data_Tuple.Tuple('bass1:12', bass1_12__Sample),
		new Data_Tuple.Tuple('bass1:13', bass1_13__Sample),
		new Data_Tuple.Tuple('bass1:14', bass1_14__Sample),
		new Data_Tuple.Tuple('bass1:15', bass1_15__Sample),
		new Data_Tuple.Tuple('bass1:16', bass1_16__Sample),
		new Data_Tuple.Tuple('bass1:17', bass1_17__Sample),
		new Data_Tuple.Tuple('bass1:18', bass1_18__Sample),
		new Data_Tuple.Tuple('bass1:19', bass1_19__Sample),
		new Data_Tuple.Tuple('bass1:20', bass1_20__Sample),
		new Data_Tuple.Tuple('bass1:21', bass1_21__Sample),
		new Data_Tuple.Tuple('bass1:22', bass1_22__Sample),
		new Data_Tuple.Tuple('bass1:23', bass1_23__Sample),
		new Data_Tuple.Tuple('bass1:24', bass1_24__Sample),
		new Data_Tuple.Tuple('bass1:25', bass1_25__Sample),
		new Data_Tuple.Tuple('bass1:26', bass1_26__Sample),
		new Data_Tuple.Tuple('bass1:27', bass1_27__Sample),
		new Data_Tuple.Tuple('bass1:28', bass1_28__Sample),
		new Data_Tuple.Tuple('bass1:29', bass1_29__Sample),
		new Data_Tuple.Tuple('hh27', hh27_0__Sample),
		new Data_Tuple.Tuple('hh27:0', hh27_0__Sample),
		new Data_Tuple.Tuple('hh27:1', hh27_1__Sample),
		new Data_Tuple.Tuple('hh27:2', hh27_2__Sample),
		new Data_Tuple.Tuple('hh27:3', hh27_3__Sample),
		new Data_Tuple.Tuple('hh27:4', hh27_4__Sample),
		new Data_Tuple.Tuple('hh27:5', hh27_5__Sample),
		new Data_Tuple.Tuple('hh27:6', hh27_6__Sample),
		new Data_Tuple.Tuple('hh27:7', hh27_7__Sample),
		new Data_Tuple.Tuple('hh27:8', hh27_8__Sample),
		new Data_Tuple.Tuple('hh27:9', hh27_9__Sample),
		new Data_Tuple.Tuple('hh27:10', hh27_10__Sample),
		new Data_Tuple.Tuple('hh27:11', hh27_11__Sample),
		new Data_Tuple.Tuple('hh27:12', hh27_12__Sample),
		new Data_Tuple.Tuple('x_808', x_808_0__Sample),
		new Data_Tuple.Tuple('x_808:0', x_808_0__Sample),
		new Data_Tuple.Tuple('x_808:1', x_808_1__Sample),
		new Data_Tuple.Tuple('x_808:2', x_808_2__Sample),
		new Data_Tuple.Tuple('x_808:3', x_808_3__Sample),
		new Data_Tuple.Tuple('x_808:4', x_808_4__Sample),
		new Data_Tuple.Tuple('x_808:5', x_808_5__Sample),
		new Data_Tuple.Tuple('notes', notes_0__Sample),
		new Data_Tuple.Tuple('notes:0', notes_0__Sample),
		new Data_Tuple.Tuple('notes:1', notes_1__Sample),
		new Data_Tuple.Tuple('notes:2', notes_2__Sample),
		new Data_Tuple.Tuple('notes:3', notes_3__Sample),
		new Data_Tuple.Tuple('notes:4', notes_4__Sample),
		new Data_Tuple.Tuple('notes:5', notes_5__Sample),
		new Data_Tuple.Tuple('notes:6', notes_6__Sample),
		new Data_Tuple.Tuple('notes:7', notes_7__Sample),
		new Data_Tuple.Tuple('notes:8', notes_8__Sample),
		new Data_Tuple.Tuple('notes:9', notes_9__Sample),
		new Data_Tuple.Tuple('notes:10', notes_10__Sample),
		new Data_Tuple.Tuple('notes:11', notes_11__Sample),
		new Data_Tuple.Tuple('notes:12', notes_12__Sample),
		new Data_Tuple.Tuple('notes:13', notes_13__Sample),
		new Data_Tuple.Tuple('notes:14', notes_14__Sample),
		new Data_Tuple.Tuple('xmas', xmas_0__Sample),
		new Data_Tuple.Tuple('xmas:0', xmas_0__Sample),
		new Data_Tuple.Tuple('erk', erk_0__Sample),
		new Data_Tuple.Tuple('erk:0', erk_0__Sample),
		new Data_Tuple.Tuple('x_808mt', x_808mt_0__Sample),
		new Data_Tuple.Tuple('x_808mt:0', x_808mt_0__Sample),
		new Data_Tuple.Tuple('x_808mt:1', x_808mt_1__Sample),
		new Data_Tuple.Tuple('x_808mt:2', x_808mt_2__Sample),
		new Data_Tuple.Tuple('x_808mt:3', x_808mt_3__Sample),
		new Data_Tuple.Tuple('x_808mt:4', x_808mt_4__Sample),
		new Data_Tuple.Tuple('lighter', lighter_0__Sample),
		new Data_Tuple.Tuple('lighter:0', lighter_0__Sample),
		new Data_Tuple.Tuple('lighter:1', lighter_1__Sample),
		new Data_Tuple.Tuple('lighter:2', lighter_2__Sample),
		new Data_Tuple.Tuple('lighter:3', lighter_3__Sample),
		new Data_Tuple.Tuple('lighter:4', lighter_4__Sample),
		new Data_Tuple.Tuple('lighter:5', lighter_5__Sample),
		new Data_Tuple.Tuple('lighter:6', lighter_6__Sample),
		new Data_Tuple.Tuple('lighter:7', lighter_7__Sample),
		new Data_Tuple.Tuple('lighter:8', lighter_8__Sample),
		new Data_Tuple.Tuple('lighter:9', lighter_9__Sample),
		new Data_Tuple.Tuple('lighter:10', lighter_10__Sample),
		new Data_Tuple.Tuple('lighter:11', lighter_11__Sample),
		new Data_Tuple.Tuple('lighter:12', lighter_12__Sample),
		new Data_Tuple.Tuple('lighter:13', lighter_13__Sample),
		new Data_Tuple.Tuple('lighter:14', lighter_14__Sample),
		new Data_Tuple.Tuple('lighter:15', lighter_15__Sample),
		new Data_Tuple.Tuple('lighter:16', lighter_16__Sample),
		new Data_Tuple.Tuple('lighter:17', lighter_17__Sample),
		new Data_Tuple.Tuple('lighter:18', lighter_18__Sample),
		new Data_Tuple.Tuple('lighter:19', lighter_19__Sample),
		new Data_Tuple.Tuple('lighter:20', lighter_20__Sample),
		new Data_Tuple.Tuple('lighter:21', lighter_21__Sample),
		new Data_Tuple.Tuple('lighter:22', lighter_22__Sample),
		new Data_Tuple.Tuple('lighter:23', lighter_23__Sample),
		new Data_Tuple.Tuple('lighter:24', lighter_24__Sample),
		new Data_Tuple.Tuple('lighter:25', lighter_25__Sample),
		new Data_Tuple.Tuple('lighter:26', lighter_26__Sample),
		new Data_Tuple.Tuple('lighter:27', lighter_27__Sample),
		new Data_Tuple.Tuple('lighter:28', lighter_28__Sample),
		new Data_Tuple.Tuple('lighter:29', lighter_29__Sample),
		new Data_Tuple.Tuple('lighter:30', lighter_30__Sample),
		new Data_Tuple.Tuple('lighter:31', lighter_31__Sample),
		new Data_Tuple.Tuple('lighter:32', lighter_32__Sample),
		new Data_Tuple.Tuple('cb', cb_0__Sample),
		new Data_Tuple.Tuple('cb:0', cb_0__Sample),
		new Data_Tuple.Tuple('subroc3d', subroc3d_0__Sample),
		new Data_Tuple.Tuple('subroc3d:0', subroc3d_0__Sample),
		new Data_Tuple.Tuple('subroc3d:1', subroc3d_1__Sample),
		new Data_Tuple.Tuple('subroc3d:2', subroc3d_2__Sample),
		new Data_Tuple.Tuple('subroc3d:3', subroc3d_3__Sample),
		new Data_Tuple.Tuple('subroc3d:4', subroc3d_4__Sample),
		new Data_Tuple.Tuple('subroc3d:5', subroc3d_5__Sample),
		new Data_Tuple.Tuple('subroc3d:6', subroc3d_6__Sample),
		new Data_Tuple.Tuple('subroc3d:7', subroc3d_7__Sample),
		new Data_Tuple.Tuple('subroc3d:8', subroc3d_8__Sample),
		new Data_Tuple.Tuple('subroc3d:9', subroc3d_9__Sample),
		new Data_Tuple.Tuple('subroc3d:10', subroc3d_10__Sample),
		new Data_Tuple.Tuple('ul', ul_0__Sample),
		new Data_Tuple.Tuple('ul:0', ul_0__Sample),
		new Data_Tuple.Tuple('ul:1', ul_1__Sample),
		new Data_Tuple.Tuple('ul:2', ul_2__Sample),
		new Data_Tuple.Tuple('ul:3', ul_3__Sample),
		new Data_Tuple.Tuple('ul:4', ul_4__Sample),
		new Data_Tuple.Tuple('ul:5', ul_5__Sample),
		new Data_Tuple.Tuple('ul:6', ul_6__Sample),
		new Data_Tuple.Tuple('ul:7', ul_7__Sample),
		new Data_Tuple.Tuple('ul:8', ul_8__Sample),
		new Data_Tuple.Tuple('ul:9', ul_9__Sample),
		new Data_Tuple.Tuple('gab', gab_0__Sample),
		new Data_Tuple.Tuple('gab:0', gab_0__Sample),
		new Data_Tuple.Tuple('gab:1', gab_1__Sample),
		new Data_Tuple.Tuple('gab:2', gab_2__Sample),
		new Data_Tuple.Tuple('gab:3', gab_3__Sample),
		new Data_Tuple.Tuple('gab:4', gab_4__Sample),
		new Data_Tuple.Tuple('gab:5', gab_5__Sample),
		new Data_Tuple.Tuple('gab:6', gab_6__Sample),
		new Data_Tuple.Tuple('gab:7', gab_7__Sample),
		new Data_Tuple.Tuple('gab:8', gab_8__Sample),
		new Data_Tuple.Tuple('gab:9', gab_9__Sample),
		new Data_Tuple.Tuple('monsterb', monsterb_0__Sample),
		new Data_Tuple.Tuple('monsterb:0', monsterb_0__Sample),
		new Data_Tuple.Tuple('monsterb:1', monsterb_1__Sample),
		new Data_Tuple.Tuple('monsterb:2', monsterb_2__Sample),
		new Data_Tuple.Tuple('monsterb:3', monsterb_3__Sample),
		new Data_Tuple.Tuple('monsterb:4', monsterb_4__Sample),
		new Data_Tuple.Tuple('monsterb:5', monsterb_5__Sample),
		new Data_Tuple.Tuple('diphone', diphone_0__Sample),
		new Data_Tuple.Tuple('diphone:0', diphone_0__Sample),
		new Data_Tuple.Tuple('diphone:1', diphone_1__Sample),
		new Data_Tuple.Tuple('diphone:2', diphone_2__Sample),
		new Data_Tuple.Tuple('diphone:3', diphone_3__Sample),
		new Data_Tuple.Tuple('diphone:4', diphone_4__Sample),
		new Data_Tuple.Tuple('diphone:5', diphone_5__Sample),
		new Data_Tuple.Tuple('diphone:6', diphone_6__Sample),
		new Data_Tuple.Tuple('diphone:7', diphone_7__Sample),
		new Data_Tuple.Tuple('diphone:8', diphone_8__Sample),
		new Data_Tuple.Tuple('diphone:9', diphone_9__Sample),
		new Data_Tuple.Tuple('diphone:10', diphone_10__Sample),
		new Data_Tuple.Tuple('diphone:11', diphone_11__Sample),
		new Data_Tuple.Tuple('diphone:12', diphone_12__Sample),
		new Data_Tuple.Tuple('diphone:13', diphone_13__Sample),
		new Data_Tuple.Tuple('diphone:14', diphone_14__Sample),
		new Data_Tuple.Tuple('diphone:15', diphone_15__Sample),
		new Data_Tuple.Tuple('diphone:16', diphone_16__Sample),
		new Data_Tuple.Tuple('diphone:17', diphone_17__Sample),
		new Data_Tuple.Tuple('diphone:18', diphone_18__Sample),
		new Data_Tuple.Tuple('diphone:19', diphone_19__Sample),
		new Data_Tuple.Tuple('diphone:20', diphone_20__Sample),
		new Data_Tuple.Tuple('diphone:21', diphone_21__Sample),
		new Data_Tuple.Tuple('diphone:22', diphone_22__Sample),
		new Data_Tuple.Tuple('diphone:23', diphone_23__Sample),
		new Data_Tuple.Tuple('diphone:24', diphone_24__Sample),
		new Data_Tuple.Tuple('diphone:25', diphone_25__Sample),
		new Data_Tuple.Tuple('diphone:26', diphone_26__Sample),
		new Data_Tuple.Tuple('diphone:27', diphone_27__Sample),
		new Data_Tuple.Tuple('diphone:28', diphone_28__Sample),
		new Data_Tuple.Tuple('diphone:29', diphone_29__Sample),
		new Data_Tuple.Tuple('diphone:30', diphone_30__Sample),
		new Data_Tuple.Tuple('diphone:31', diphone_31__Sample),
		new Data_Tuple.Tuple('diphone:32', diphone_32__Sample),
		new Data_Tuple.Tuple('diphone:33', diphone_33__Sample),
		new Data_Tuple.Tuple('diphone:34', diphone_34__Sample),
		new Data_Tuple.Tuple('diphone:35', diphone_35__Sample),
		new Data_Tuple.Tuple('diphone:36', diphone_36__Sample),
		new Data_Tuple.Tuple('diphone:37', diphone_37__Sample),
		new Data_Tuple.Tuple('clak', clak_0__Sample),
		new Data_Tuple.Tuple('clak:0', clak_0__Sample),
		new Data_Tuple.Tuple('clak:1', clak_1__Sample),
		new Data_Tuple.Tuple('sitar', sitar_0__Sample),
		new Data_Tuple.Tuple('sitar:0', sitar_0__Sample),
		new Data_Tuple.Tuple('sitar:1', sitar_1__Sample),
		new Data_Tuple.Tuple('sitar:2', sitar_2__Sample),
		new Data_Tuple.Tuple('sitar:3', sitar_3__Sample),
		new Data_Tuple.Tuple('sitar:4', sitar_4__Sample),
		new Data_Tuple.Tuple('sitar:5', sitar_5__Sample),
		new Data_Tuple.Tuple('sitar:6', sitar_6__Sample),
		new Data_Tuple.Tuple('sitar:7', sitar_7__Sample),
		new Data_Tuple.Tuple('ab', ab_0__Sample),
		new Data_Tuple.Tuple('ab:0', ab_0__Sample),
		new Data_Tuple.Tuple('ab:1', ab_1__Sample),
		new Data_Tuple.Tuple('ab:2', ab_2__Sample),
		new Data_Tuple.Tuple('ab:3', ab_3__Sample),
		new Data_Tuple.Tuple('ab:4', ab_4__Sample),
		new Data_Tuple.Tuple('ab:5', ab_5__Sample),
		new Data_Tuple.Tuple('ab:6', ab_6__Sample),
		new Data_Tuple.Tuple('ab:7', ab_7__Sample),
		new Data_Tuple.Tuple('ab:8', ab_8__Sample),
		new Data_Tuple.Tuple('ab:9', ab_9__Sample),
		new Data_Tuple.Tuple('ab:10', ab_10__Sample),
		new Data_Tuple.Tuple('ab:11', ab_11__Sample),
		new Data_Tuple.Tuple('cr', cr_0__Sample),
		new Data_Tuple.Tuple('cr:0', cr_0__Sample),
		new Data_Tuple.Tuple('cr:1', cr_1__Sample),
		new Data_Tuple.Tuple('cr:2', cr_2__Sample),
		new Data_Tuple.Tuple('cr:3', cr_3__Sample),
		new Data_Tuple.Tuple('cr:4', cr_4__Sample),
		new Data_Tuple.Tuple('cr:5', cr_5__Sample),
		new Data_Tuple.Tuple('tacscan', tacscan_0__Sample),
		new Data_Tuple.Tuple('tacscan:0', tacscan_0__Sample),
		new Data_Tuple.Tuple('tacscan:1', tacscan_1__Sample),
		new Data_Tuple.Tuple('tacscan:2', tacscan_2__Sample),
		new Data_Tuple.Tuple('tacscan:3', tacscan_3__Sample),
		new Data_Tuple.Tuple('tacscan:4', tacscan_4__Sample),
		new Data_Tuple.Tuple('tacscan:5', tacscan_5__Sample),
		new Data_Tuple.Tuple('tacscan:6', tacscan_6__Sample),
		new Data_Tuple.Tuple('tacscan:7', tacscan_7__Sample),
		new Data_Tuple.Tuple('tacscan:8', tacscan_8__Sample),
		new Data_Tuple.Tuple('tacscan:9', tacscan_9__Sample),
		new Data_Tuple.Tuple('tacscan:10', tacscan_10__Sample),
		new Data_Tuple.Tuple('tacscan:11', tacscan_11__Sample),
		new Data_Tuple.Tuple('tacscan:12', tacscan_12__Sample),
		new Data_Tuple.Tuple('tacscan:13', tacscan_13__Sample),
		new Data_Tuple.Tuple('tacscan:14', tacscan_14__Sample),
		new Data_Tuple.Tuple('tacscan:15', tacscan_15__Sample),
		new Data_Tuple.Tuple('tacscan:16', tacscan_16__Sample),
		new Data_Tuple.Tuple('tacscan:17', tacscan_17__Sample),
		new Data_Tuple.Tuple('tacscan:18', tacscan_18__Sample),
		new Data_Tuple.Tuple('tacscan:19', tacscan_19__Sample),
		new Data_Tuple.Tuple('tacscan:20', tacscan_20__Sample),
		new Data_Tuple.Tuple('tacscan:21', tacscan_21__Sample),
		new Data_Tuple.Tuple('v', v_0__Sample),
		new Data_Tuple.Tuple('v:0', v_0__Sample),
		new Data_Tuple.Tuple('v:1', v_1__Sample),
		new Data_Tuple.Tuple('v:2', v_2__Sample),
		new Data_Tuple.Tuple('v:3', v_3__Sample),
		new Data_Tuple.Tuple('v:4', v_4__Sample),
		new Data_Tuple.Tuple('v:5', v_5__Sample),
		new Data_Tuple.Tuple('bd', bd_0__Sample),
		new Data_Tuple.Tuple('bd:0', bd_0__Sample),
		new Data_Tuple.Tuple('bd:1', bd_1__Sample),
		new Data_Tuple.Tuple('bd:2', bd_2__Sample),
		new Data_Tuple.Tuple('bd:3', bd_3__Sample),
		new Data_Tuple.Tuple('bd:4', bd_4__Sample),
		new Data_Tuple.Tuple('bd:5', bd_5__Sample),
		new Data_Tuple.Tuple('bd:6', bd_6__Sample),
		new Data_Tuple.Tuple('bd:7', bd_7__Sample),
		new Data_Tuple.Tuple('bd:8', bd_8__Sample),
		new Data_Tuple.Tuple('bd:9', bd_9__Sample),
		new Data_Tuple.Tuple('bd:10', bd_10__Sample),
		new Data_Tuple.Tuple('bd:11', bd_11__Sample),
		new Data_Tuple.Tuple('bd:12', bd_12__Sample),
		new Data_Tuple.Tuple('bd:13', bd_13__Sample),
		new Data_Tuple.Tuple('bd:14', bd_14__Sample),
		new Data_Tuple.Tuple('bd:15', bd_15__Sample),
		new Data_Tuple.Tuple('bd:16', bd_16__Sample),
		new Data_Tuple.Tuple('bd:17', bd_17__Sample),
		new Data_Tuple.Tuple('bd:18', bd_18__Sample),
		new Data_Tuple.Tuple('bd:19', bd_19__Sample),
		new Data_Tuple.Tuple('bd:20', bd_20__Sample),
		new Data_Tuple.Tuple('bd:21', bd_21__Sample),
		new Data_Tuple.Tuple('bd:22', bd_22__Sample),
		new Data_Tuple.Tuple('bd:23', bd_23__Sample),
		new Data_Tuple.Tuple('rm', rm_0__Sample),
		new Data_Tuple.Tuple('rm:0', rm_0__Sample),
		new Data_Tuple.Tuple('rm:1', rm_1__Sample),
		new Data_Tuple.Tuple('blue', blue_0__Sample),
		new Data_Tuple.Tuple('blue:0', blue_0__Sample),
		new Data_Tuple.Tuple('blue:1', blue_1__Sample),
		new Data_Tuple.Tuple('latibro', latibro_0__Sample),
		new Data_Tuple.Tuple('latibro:0', latibro_0__Sample),
		new Data_Tuple.Tuple('latibro:1', latibro_1__Sample),
		new Data_Tuple.Tuple('latibro:2', latibro_2__Sample),
		new Data_Tuple.Tuple('latibro:3', latibro_3__Sample),
		new Data_Tuple.Tuple('latibro:4', latibro_4__Sample),
		new Data_Tuple.Tuple('latibro:5', latibro_5__Sample),
		new Data_Tuple.Tuple('latibro:6', latibro_6__Sample),
		new Data_Tuple.Tuple('latibro:7', latibro_7__Sample),
		new Data_Tuple.Tuple('dr_few', dr_few_0__Sample),
		new Data_Tuple.Tuple('dr_few:0', dr_few_0__Sample),
		new Data_Tuple.Tuple('dr_few:1', dr_few_1__Sample),
		new Data_Tuple.Tuple('dr_few:2', dr_few_2__Sample),
		new Data_Tuple.Tuple('dr_few:3', dr_few_3__Sample),
		new Data_Tuple.Tuple('dr_few:4', dr_few_4__Sample),
		new Data_Tuple.Tuple('dr_few:5', dr_few_5__Sample),
		new Data_Tuple.Tuple('dr_few:6', dr_few_6__Sample),
		new Data_Tuple.Tuple('dr_few:7', dr_few_7__Sample),
		new Data_Tuple.Tuple('rave2', rave2_0__Sample),
		new Data_Tuple.Tuple('rave2:0', rave2_0__Sample),
		new Data_Tuple.Tuple('rave2:1', rave2_1__Sample),
		new Data_Tuple.Tuple('rave2:2', rave2_2__Sample),
		new Data_Tuple.Tuple('rave2:3', rave2_3__Sample),
		new Data_Tuple.Tuple('rave2:4', rave2_4__Sample),
		new Data_Tuple.Tuple('rave2:5', rave2_5__Sample),
		new Data_Tuple.Tuple('koy', koy_0__Sample),
		new Data_Tuple.Tuple('koy:0', koy_0__Sample),
		new Data_Tuple.Tuple('koy:1', koy_1__Sample),
		new Data_Tuple.Tuple('glitch2', glitch2_0__Sample),
		new Data_Tuple.Tuple('glitch2:0', glitch2_0__Sample),
		new Data_Tuple.Tuple('glitch2:1', glitch2_1__Sample),
		new Data_Tuple.Tuple('glitch2:2', glitch2_2__Sample),
		new Data_Tuple.Tuple('glitch2:3', glitch2_3__Sample),
		new Data_Tuple.Tuple('glitch2:4', glitch2_4__Sample),
		new Data_Tuple.Tuple('glitch2:5', glitch2_5__Sample),
		new Data_Tuple.Tuple('glitch2:6', glitch2_6__Sample),
		new Data_Tuple.Tuple('glitch2:7', glitch2_7__Sample),
		new Data_Tuple.Tuple('hmm', hmm_0__Sample),
		new Data_Tuple.Tuple('hmm:0', hmm_0__Sample),
		new Data_Tuple.Tuple('arp', arp_0__Sample),
		new Data_Tuple.Tuple('arp:0', arp_0__Sample),
		new Data_Tuple.Tuple('arp:1', arp_1__Sample),
		new Data_Tuple.Tuple('made2', made2_0__Sample),
		new Data_Tuple.Tuple('made2:0', made2_0__Sample),
		new Data_Tuple.Tuple('uxay', uxay_0__Sample),
		new Data_Tuple.Tuple('uxay:0', uxay_0__Sample),
		new Data_Tuple.Tuple('uxay:1', uxay_1__Sample),
		new Data_Tuple.Tuple('uxay:2', uxay_2__Sample),
		new Data_Tuple.Tuple('stomp', stomp_0__Sample),
		new Data_Tuple.Tuple('stomp:0', stomp_0__Sample),
		new Data_Tuple.Tuple('stomp:1', stomp_1__Sample),
		new Data_Tuple.Tuple('stomp:2', stomp_2__Sample),
		new Data_Tuple.Tuple('stomp:3', stomp_3__Sample),
		new Data_Tuple.Tuple('stomp:4', stomp_4__Sample),
		new Data_Tuple.Tuple('stomp:5', stomp_5__Sample),
		new Data_Tuple.Tuple('stomp:6', stomp_6__Sample),
		new Data_Tuple.Tuple('stomp:7', stomp_7__Sample),
		new Data_Tuple.Tuple('stomp:8', stomp_8__Sample),
		new Data_Tuple.Tuple('stomp:9', stomp_9__Sample),
		new Data_Tuple.Tuple('tech', tech_0__Sample),
		new Data_Tuple.Tuple('tech:0', tech_0__Sample),
		new Data_Tuple.Tuple('tech:1', tech_1__Sample),
		new Data_Tuple.Tuple('tech:2', tech_2__Sample),
		new Data_Tuple.Tuple('tech:3', tech_3__Sample),
		new Data_Tuple.Tuple('tech:4', tech_4__Sample),
		new Data_Tuple.Tuple('tech:5', tech_5__Sample),
		new Data_Tuple.Tuple('tech:6', tech_6__Sample),
		new Data_Tuple.Tuple('tech:7', tech_7__Sample),
		new Data_Tuple.Tuple('tech:8', tech_8__Sample),
		new Data_Tuple.Tuple('tech:9', tech_9__Sample),
		new Data_Tuple.Tuple('tech:10', tech_10__Sample),
		new Data_Tuple.Tuple('tech:11', tech_11__Sample),
		new Data_Tuple.Tuple('tech:12', tech_12__Sample),
		new Data_Tuple.Tuple('sn', sn_0__Sample),
		new Data_Tuple.Tuple('sn:0', sn_0__Sample),
		new Data_Tuple.Tuple('sn:1', sn_1__Sample),
		new Data_Tuple.Tuple('sn:2', sn_2__Sample),
		new Data_Tuple.Tuple('sn:3', sn_3__Sample),
		new Data_Tuple.Tuple('sn:4', sn_4__Sample),
		new Data_Tuple.Tuple('sn:5', sn_5__Sample),
		new Data_Tuple.Tuple('sn:6', sn_6__Sample),
		new Data_Tuple.Tuple('sn:7', sn_7__Sample),
		new Data_Tuple.Tuple('sn:8', sn_8__Sample),
		new Data_Tuple.Tuple('sn:9', sn_9__Sample),
		new Data_Tuple.Tuple('sn:10', sn_10__Sample),
		new Data_Tuple.Tuple('sn:11', sn_11__Sample),
		new Data_Tuple.Tuple('sn:12', sn_12__Sample),
		new Data_Tuple.Tuple('sn:13', sn_13__Sample),
		new Data_Tuple.Tuple('sn:14', sn_14__Sample),
		new Data_Tuple.Tuple('sn:15', sn_15__Sample),
		new Data_Tuple.Tuple('sn:16', sn_16__Sample),
		new Data_Tuple.Tuple('sn:17', sn_17__Sample),
		new Data_Tuple.Tuple('sn:18', sn_18__Sample),
		new Data_Tuple.Tuple('sn:19', sn_19__Sample),
		new Data_Tuple.Tuple('sn:20', sn_20__Sample),
		new Data_Tuple.Tuple('sn:21', sn_21__Sample),
		new Data_Tuple.Tuple('sn:22', sn_22__Sample),
		new Data_Tuple.Tuple('sn:23', sn_23__Sample),
		new Data_Tuple.Tuple('sn:24', sn_24__Sample),
		new Data_Tuple.Tuple('sn:25', sn_25__Sample),
		new Data_Tuple.Tuple('sn:26', sn_26__Sample),
		new Data_Tuple.Tuple('sn:27', sn_27__Sample),
		new Data_Tuple.Tuple('sn:28', sn_28__Sample),
		new Data_Tuple.Tuple('sn:29', sn_29__Sample),
		new Data_Tuple.Tuple('sn:30', sn_30__Sample),
		new Data_Tuple.Tuple('sn:31', sn_31__Sample),
		new Data_Tuple.Tuple('sn:32', sn_32__Sample),
		new Data_Tuple.Tuple('sn:33', sn_33__Sample),
		new Data_Tuple.Tuple('sn:34', sn_34__Sample),
		new Data_Tuple.Tuple('sn:35', sn_35__Sample),
		new Data_Tuple.Tuple('sn:36', sn_36__Sample),
		new Data_Tuple.Tuple('sn:37', sn_37__Sample),
		new Data_Tuple.Tuple('sn:38', sn_38__Sample),
		new Data_Tuple.Tuple('sn:39', sn_39__Sample),
		new Data_Tuple.Tuple('sn:40', sn_40__Sample),
		new Data_Tuple.Tuple('sn:41', sn_41__Sample),
		new Data_Tuple.Tuple('sn:42', sn_42__Sample),
		new Data_Tuple.Tuple('sn:43', sn_43__Sample),
		new Data_Tuple.Tuple('sn:44', sn_44__Sample),
		new Data_Tuple.Tuple('sn:45', sn_45__Sample),
		new Data_Tuple.Tuple('sn:46', sn_46__Sample),
		new Data_Tuple.Tuple('sn:47', sn_47__Sample),
		new Data_Tuple.Tuple('sn:48', sn_48__Sample),
		new Data_Tuple.Tuple('sn:49', sn_49__Sample),
		new Data_Tuple.Tuple('sn:50', sn_50__Sample),
		new Data_Tuple.Tuple('sn:51', sn_51__Sample),
		new Data_Tuple.Tuple('less', less_0__Sample),
		new Data_Tuple.Tuple('less:0', less_0__Sample),
		new Data_Tuple.Tuple('less:1', less_1__Sample),
		new Data_Tuple.Tuple('less:2', less_2__Sample),
		new Data_Tuple.Tuple('less:3', less_3__Sample),
		new Data_Tuple.Tuple('off', off_0__Sample),
		new Data_Tuple.Tuple('off:0', off_0__Sample),
		new Data_Tuple.Tuple('x_808sd', x_808sd_0__Sample),
		new Data_Tuple.Tuple('x_808sd:0', x_808sd_0__Sample),
		new Data_Tuple.Tuple('x_808sd:1', x_808sd_1__Sample),
		new Data_Tuple.Tuple('x_808sd:2', x_808sd_2__Sample),
		new Data_Tuple.Tuple('x_808sd:3', x_808sd_3__Sample),
		new Data_Tuple.Tuple('x_808sd:4', x_808sd_4__Sample),
		new Data_Tuple.Tuple('x_808sd:5', x_808sd_5__Sample),
		new Data_Tuple.Tuple('x_808sd:6', x_808sd_6__Sample),
		new Data_Tuple.Tuple('x_808sd:7', x_808sd_7__Sample),
		new Data_Tuple.Tuple('x_808sd:8', x_808sd_8__Sample),
		new Data_Tuple.Tuple('x_808sd:9', x_808sd_9__Sample),
		new Data_Tuple.Tuple('x_808sd:10', x_808sd_10__Sample),
		new Data_Tuple.Tuple('x_808sd:11', x_808sd_11__Sample),
		new Data_Tuple.Tuple('x_808sd:12', x_808sd_12__Sample),
		new Data_Tuple.Tuple('x_808sd:13', x_808sd_13__Sample),
		new Data_Tuple.Tuple('x_808sd:14', x_808sd_14__Sample),
		new Data_Tuple.Tuple('x_808sd:15', x_808sd_15__Sample),
		new Data_Tuple.Tuple('x_808sd:16', x_808sd_16__Sample),
		new Data_Tuple.Tuple('x_808sd:17', x_808sd_17__Sample),
		new Data_Tuple.Tuple('x_808sd:18', x_808sd_18__Sample),
		new Data_Tuple.Tuple('x_808sd:19', x_808sd_19__Sample),
		new Data_Tuple.Tuple('x_808sd:20', x_808sd_20__Sample),
		new Data_Tuple.Tuple('x_808sd:21', x_808sd_21__Sample),
		new Data_Tuple.Tuple('x_808sd:22', x_808sd_22__Sample),
		new Data_Tuple.Tuple('x_808sd:23', x_808sd_23__Sample),
		new Data_Tuple.Tuple('x_808sd:24', x_808sd_24__Sample),
		new Data_Tuple.Tuple('trump', trump_0__Sample),
		new Data_Tuple.Tuple('trump:0', trump_0__Sample),
		new Data_Tuple.Tuple('trump:1', trump_1__Sample),
		new Data_Tuple.Tuple('trump:2', trump_2__Sample),
		new Data_Tuple.Tuple('trump:3', trump_3__Sample),
		new Data_Tuple.Tuple('trump:4', trump_4__Sample),
		new Data_Tuple.Tuple('trump:5', trump_5__Sample),
		new Data_Tuple.Tuple('trump:6', trump_6__Sample),
		new Data_Tuple.Tuple('trump:7', trump_7__Sample),
		new Data_Tuple.Tuple('trump:8', trump_8__Sample),
		new Data_Tuple.Tuple('trump:9', trump_9__Sample),
		new Data_Tuple.Tuple('trump:10', trump_10__Sample),
		new Data_Tuple.Tuple('bev', bev_0__Sample),
		new Data_Tuple.Tuple('bev:0', bev_0__Sample),
		new Data_Tuple.Tuple('bev:1', bev_1__Sample),
		new Data_Tuple.Tuple('pad', pad_0__Sample),
		new Data_Tuple.Tuple('pad:0', pad_0__Sample),
		new Data_Tuple.Tuple('pad:1', pad_1__Sample),
		new Data_Tuple.Tuple('pad:2', pad_2__Sample),
		new Data_Tuple.Tuple('led', led_0__Sample),
		new Data_Tuple.Tuple('led:0', led_0__Sample),
		new Data_Tuple.Tuple('perc', perc_0__Sample),
		new Data_Tuple.Tuple('perc:0', perc_0__Sample),
		new Data_Tuple.Tuple('perc:1', perc_1__Sample),
		new Data_Tuple.Tuple('perc:2', perc_2__Sample),
		new Data_Tuple.Tuple('perc:3', perc_3__Sample),
		new Data_Tuple.Tuple('perc:4', perc_4__Sample),
		new Data_Tuple.Tuple('perc:5', perc_5__Sample),
		new Data_Tuple.Tuple('pluck', pluck_0__Sample),
		new Data_Tuple.Tuple('pluck:0', pluck_0__Sample),
		new Data_Tuple.Tuple('pluck:1', pluck_1__Sample),
		new Data_Tuple.Tuple('pluck:2', pluck_2__Sample),
		new Data_Tuple.Tuple('pluck:3', pluck_3__Sample),
		new Data_Tuple.Tuple('pluck:4', pluck_4__Sample),
		new Data_Tuple.Tuple('pluck:5', pluck_5__Sample),
		new Data_Tuple.Tuple('pluck:6', pluck_6__Sample),
		new Data_Tuple.Tuple('pluck:7', pluck_7__Sample),
		new Data_Tuple.Tuple('pluck:8', pluck_8__Sample),
		new Data_Tuple.Tuple('pluck:9', pluck_9__Sample),
		new Data_Tuple.Tuple('pluck:10', pluck_10__Sample),
		new Data_Tuple.Tuple('pluck:11', pluck_11__Sample),
		new Data_Tuple.Tuple('pluck:12', pluck_12__Sample),
		new Data_Tuple.Tuple('pluck:13', pluck_13__Sample),
		new Data_Tuple.Tuple('pluck:14', pluck_14__Sample),
		new Data_Tuple.Tuple('pluck:15', pluck_15__Sample),
		new Data_Tuple.Tuple('pluck:16', pluck_16__Sample),
		new Data_Tuple.Tuple('bleep', bleep_0__Sample),
		new Data_Tuple.Tuple('bleep:0', bleep_0__Sample),
		new Data_Tuple.Tuple('bleep:1', bleep_1__Sample),
		new Data_Tuple.Tuple('bleep:2', bleep_2__Sample),
		new Data_Tuple.Tuple('bleep:3', bleep_3__Sample),
		new Data_Tuple.Tuple('bleep:4', bleep_4__Sample),
		new Data_Tuple.Tuple('bleep:5', bleep_5__Sample),
		new Data_Tuple.Tuple('bleep:6', bleep_6__Sample),
		new Data_Tuple.Tuple('bleep:7', bleep_7__Sample),
		new Data_Tuple.Tuple('bleep:8', bleep_8__Sample),
		new Data_Tuple.Tuple('bleep:9', bleep_9__Sample),
		new Data_Tuple.Tuple('bleep:10', bleep_10__Sample),
		new Data_Tuple.Tuple('bleep:11', bleep_11__Sample),
		new Data_Tuple.Tuple('bleep:12', bleep_12__Sample),
		new Data_Tuple.Tuple('ht', ht_0__Sample),
		new Data_Tuple.Tuple('ht:0', ht_0__Sample),
		new Data_Tuple.Tuple('ht:1', ht_1__Sample),
		new Data_Tuple.Tuple('ht:2', ht_2__Sample),
		new Data_Tuple.Tuple('ht:3', ht_3__Sample),
		new Data_Tuple.Tuple('ht:4', ht_4__Sample),
		new Data_Tuple.Tuple('ht:5', ht_5__Sample),
		new Data_Tuple.Tuple('ht:6', ht_6__Sample),
		new Data_Tuple.Tuple('ht:7', ht_7__Sample),
		new Data_Tuple.Tuple('ht:8', ht_8__Sample),
		new Data_Tuple.Tuple('ht:9', ht_9__Sample),
		new Data_Tuple.Tuple('ht:10', ht_10__Sample),
		new Data_Tuple.Tuple('ht:11', ht_11__Sample),
		new Data_Tuple.Tuple('ht:12', ht_12__Sample),
		new Data_Tuple.Tuple('ht:13', ht_13__Sample),
		new Data_Tuple.Tuple('ht:14', ht_14__Sample),
		new Data_Tuple.Tuple('ht:15', ht_15__Sample),
		new Data_Tuple.Tuple('ades4', ades4_0__Sample),
		new Data_Tuple.Tuple('ades4:0', ades4_0__Sample),
		new Data_Tuple.Tuple('ades4:1', ades4_1__Sample),
		new Data_Tuple.Tuple('ades4:2', ades4_2__Sample),
		new Data_Tuple.Tuple('ades4:3', ades4_3__Sample),
		new Data_Tuple.Tuple('ades4:4', ades4_4__Sample),
		new Data_Tuple.Tuple('ades4:5', ades4_5__Sample),
		new Data_Tuple.Tuple('proc', proc_0__Sample),
		new Data_Tuple.Tuple('proc:0', proc_0__Sample),
		new Data_Tuple.Tuple('proc:1', proc_1__Sample),
		new Data_Tuple.Tuple('gretsch', gretsch_0__Sample),
		new Data_Tuple.Tuple('gretsch:0', gretsch_0__Sample),
		new Data_Tuple.Tuple('gretsch:1', gretsch_1__Sample),
		new Data_Tuple.Tuple('gretsch:2', gretsch_2__Sample),
		new Data_Tuple.Tuple('gretsch:3', gretsch_3__Sample),
		new Data_Tuple.Tuple('gretsch:4', gretsch_4__Sample),
		new Data_Tuple.Tuple('gretsch:5', gretsch_5__Sample),
		new Data_Tuple.Tuple('gretsch:6', gretsch_6__Sample),
		new Data_Tuple.Tuple('gretsch:7', gretsch_7__Sample),
		new Data_Tuple.Tuple('gretsch:8', gretsch_8__Sample),
		new Data_Tuple.Tuple('gretsch:9', gretsch_9__Sample),
		new Data_Tuple.Tuple('gretsch:10', gretsch_10__Sample),
		new Data_Tuple.Tuple('gretsch:11', gretsch_11__Sample),
		new Data_Tuple.Tuple('gretsch:12', gretsch_12__Sample),
		new Data_Tuple.Tuple('gretsch:13', gretsch_13__Sample),
		new Data_Tuple.Tuple('gretsch:14', gretsch_14__Sample),
		new Data_Tuple.Tuple('gretsch:15', gretsch_15__Sample),
		new Data_Tuple.Tuple('gretsch:16', gretsch_16__Sample),
		new Data_Tuple.Tuple('gretsch:17', gretsch_17__Sample),
		new Data_Tuple.Tuple('gretsch:18', gretsch_18__Sample),
		new Data_Tuple.Tuple('gretsch:19', gretsch_19__Sample),
		new Data_Tuple.Tuple('gretsch:20', gretsch_20__Sample),
		new Data_Tuple.Tuple('gretsch:21', gretsch_21__Sample),
		new Data_Tuple.Tuple('gretsch:22', gretsch_22__Sample),
		new Data_Tuple.Tuple('gretsch:23', gretsch_23__Sample),
		new Data_Tuple.Tuple('outdoor', outdoor_0__Sample),
		new Data_Tuple.Tuple('outdoor:0', outdoor_0__Sample),
		new Data_Tuple.Tuple('outdoor:1', outdoor_1__Sample),
		new Data_Tuple.Tuple('outdoor:2', outdoor_2__Sample),
		new Data_Tuple.Tuple('outdoor:3', outdoor_3__Sample),
		new Data_Tuple.Tuple('outdoor:4', outdoor_4__Sample),
		new Data_Tuple.Tuple('outdoor:5', outdoor_5__Sample),
		new Data_Tuple.Tuple('techno', techno_0__Sample),
		new Data_Tuple.Tuple('techno:0', techno_0__Sample),
		new Data_Tuple.Tuple('techno:1', techno_1__Sample),
		new Data_Tuple.Tuple('techno:2', techno_2__Sample),
		new Data_Tuple.Tuple('techno:3', techno_3__Sample),
		new Data_Tuple.Tuple('techno:4', techno_4__Sample),
		new Data_Tuple.Tuple('techno:5', techno_5__Sample),
		new Data_Tuple.Tuple('techno:6', techno_6__Sample),
		new Data_Tuple.Tuple('ulgab', ulgab_0__Sample),
		new Data_Tuple.Tuple('ulgab:0', ulgab_0__Sample),
		new Data_Tuple.Tuple('ulgab:1', ulgab_1__Sample),
		new Data_Tuple.Tuple('ulgab:2', ulgab_2__Sample),
		new Data_Tuple.Tuple('ulgab:3', ulgab_3__Sample),
		new Data_Tuple.Tuple('ulgab:4', ulgab_4__Sample),
		new Data_Tuple.Tuple('breaks125', breaks125_0__Sample),
		new Data_Tuple.Tuple('breaks125:0', breaks125_0__Sample),
		new Data_Tuple.Tuple('breaks125:1', breaks125_1__Sample),
		new Data_Tuple.Tuple('bin', bin_0__Sample),
		new Data_Tuple.Tuple('bin:0', bin_0__Sample),
		new Data_Tuple.Tuple('bin:1', bin_1__Sample),
		new Data_Tuple.Tuple('x_808mc', x_808mc_0__Sample),
		new Data_Tuple.Tuple('x_808mc:0', x_808mc_0__Sample),
		new Data_Tuple.Tuple('x_808mc:1', x_808mc_1__Sample),
		new Data_Tuple.Tuple('x_808mc:2', x_808mc_2__Sample),
		new Data_Tuple.Tuple('x_808mc:3', x_808mc_3__Sample),
		new Data_Tuple.Tuple('x_808mc:4', x_808mc_4__Sample),
		new Data_Tuple.Tuple('lt', lt_0__Sample),
		new Data_Tuple.Tuple('lt:0', lt_0__Sample),
		new Data_Tuple.Tuple('lt:1', lt_1__Sample),
		new Data_Tuple.Tuple('lt:2', lt_2__Sample),
		new Data_Tuple.Tuple('lt:3', lt_3__Sample),
		new Data_Tuple.Tuple('lt:4', lt_4__Sample),
		new Data_Tuple.Tuple('lt:5', lt_5__Sample),
		new Data_Tuple.Tuple('lt:6', lt_6__Sample),
		new Data_Tuple.Tuple('lt:7', lt_7__Sample),
		new Data_Tuple.Tuple('lt:8', lt_8__Sample),
		new Data_Tuple.Tuple('lt:9', lt_9__Sample),
		new Data_Tuple.Tuple('lt:10', lt_10__Sample),
		new Data_Tuple.Tuple('lt:11', lt_11__Sample),
		new Data_Tuple.Tuple('lt:12', lt_12__Sample),
		new Data_Tuple.Tuple('lt:13', lt_13__Sample),
		new Data_Tuple.Tuple('lt:14', lt_14__Sample),
		new Data_Tuple.Tuple('lt:15', lt_15__Sample),
		new Data_Tuple.Tuple('amencutup', amencutup_0__Sample),
		new Data_Tuple.Tuple('amencutup:0', amencutup_0__Sample),
		new Data_Tuple.Tuple('amencutup:1', amencutup_1__Sample),
		new Data_Tuple.Tuple('amencutup:2', amencutup_2__Sample),
		new Data_Tuple.Tuple('amencutup:3', amencutup_3__Sample),
		new Data_Tuple.Tuple('amencutup:4', amencutup_4__Sample),
		new Data_Tuple.Tuple('amencutup:5', amencutup_5__Sample),
		new Data_Tuple.Tuple('amencutup:6', amencutup_6__Sample),
		new Data_Tuple.Tuple('amencutup:7', amencutup_7__Sample),
		new Data_Tuple.Tuple('amencutup:8', amencutup_8__Sample),
		new Data_Tuple.Tuple('amencutup:9', amencutup_9__Sample),
		new Data_Tuple.Tuple('amencutup:10', amencutup_10__Sample),
		new Data_Tuple.Tuple('amencutup:11', amencutup_11__Sample),
		new Data_Tuple.Tuple('amencutup:12', amencutup_12__Sample),
		new Data_Tuple.Tuple('amencutup:13', amencutup_13__Sample),
		new Data_Tuple.Tuple('amencutup:14', amencutup_14__Sample),
		new Data_Tuple.Tuple('amencutup:15', amencutup_15__Sample),
		new Data_Tuple.Tuple('amencutup:16', amencutup_16__Sample),
		new Data_Tuple.Tuple('amencutup:17', amencutup_17__Sample),
		new Data_Tuple.Tuple('amencutup:18', amencutup_18__Sample),
		new Data_Tuple.Tuple('amencutup:19', amencutup_19__Sample),
		new Data_Tuple.Tuple('amencutup:20', amencutup_20__Sample),
		new Data_Tuple.Tuple('amencutup:21', amencutup_21__Sample),
		new Data_Tuple.Tuple('amencutup:22', amencutup_22__Sample),
		new Data_Tuple.Tuple('amencutup:23', amencutup_23__Sample),
		new Data_Tuple.Tuple('amencutup:24', amencutup_24__Sample),
		new Data_Tuple.Tuple('amencutup:25', amencutup_25__Sample),
		new Data_Tuple.Tuple('amencutup:26', amencutup_26__Sample),
		new Data_Tuple.Tuple('amencutup:27', amencutup_27__Sample),
		new Data_Tuple.Tuple('amencutup:28', amencutup_28__Sample),
		new Data_Tuple.Tuple('amencutup:29', amencutup_29__Sample),
		new Data_Tuple.Tuple('amencutup:30', amencutup_30__Sample),
		new Data_Tuple.Tuple('amencutup:31', amencutup_31__Sample),
		new Data_Tuple.Tuple('drum', drum_0__Sample),
		new Data_Tuple.Tuple('drum:0', drum_0__Sample),
		new Data_Tuple.Tuple('drum:1', drum_1__Sample),
		new Data_Tuple.Tuple('drum:2', drum_2__Sample),
		new Data_Tuple.Tuple('drum:3', drum_3__Sample),
		new Data_Tuple.Tuple('drum:4', drum_4__Sample),
		new Data_Tuple.Tuple('drum:5', drum_5__Sample),
		new Data_Tuple.Tuple('coins', coins_0__Sample),
		new Data_Tuple.Tuple('coins:0', coins_0__Sample),
		new Data_Tuple.Tuple('industrial', industrial_0__Sample),
		new Data_Tuple.Tuple('industrial:0', industrial_0__Sample),
		new Data_Tuple.Tuple('industrial:1', industrial_1__Sample),
		new Data_Tuple.Tuple('industrial:2', industrial_2__Sample),
		new Data_Tuple.Tuple('industrial:3', industrial_3__Sample),
		new Data_Tuple.Tuple('industrial:4', industrial_4__Sample),
		new Data_Tuple.Tuple('industrial:5', industrial_5__Sample),
		new Data_Tuple.Tuple('industrial:6', industrial_6__Sample),
		new Data_Tuple.Tuple('industrial:7', industrial_7__Sample),
		new Data_Tuple.Tuple('industrial:8', industrial_8__Sample),
		new Data_Tuple.Tuple('industrial:9', industrial_9__Sample),
		new Data_Tuple.Tuple('industrial:10', industrial_10__Sample),
		new Data_Tuple.Tuple('industrial:11', industrial_11__Sample),
		new Data_Tuple.Tuple('industrial:12', industrial_12__Sample),
		new Data_Tuple.Tuple('industrial:13', industrial_13__Sample),
		new Data_Tuple.Tuple('industrial:14', industrial_14__Sample),
		new Data_Tuple.Tuple('industrial:15', industrial_15__Sample),
		new Data_Tuple.Tuple('industrial:16', industrial_16__Sample),
		new Data_Tuple.Tuple('industrial:17', industrial_17__Sample),
		new Data_Tuple.Tuple('industrial:18', industrial_18__Sample),
		new Data_Tuple.Tuple('industrial:19', industrial_19__Sample),
		new Data_Tuple.Tuple('industrial:20', industrial_20__Sample),
		new Data_Tuple.Tuple('industrial:21', industrial_21__Sample),
		new Data_Tuple.Tuple('industrial:22', industrial_22__Sample),
		new Data_Tuple.Tuple('industrial:23', industrial_23__Sample),
		new Data_Tuple.Tuple('industrial:24', industrial_24__Sample),
		new Data_Tuple.Tuple('industrial:25', industrial_25__Sample),
		new Data_Tuple.Tuple('industrial:26', industrial_26__Sample),
		new Data_Tuple.Tuple('industrial:27', industrial_27__Sample),
		new Data_Tuple.Tuple('industrial:28', industrial_28__Sample),
		new Data_Tuple.Tuple('industrial:29', industrial_29__Sample),
		new Data_Tuple.Tuple('industrial:30', industrial_30__Sample),
		new Data_Tuple.Tuple('industrial:31', industrial_31__Sample),
		new Data_Tuple.Tuple('tink', tink_0__Sample),
		new Data_Tuple.Tuple('tink:0', tink_0__Sample),
		new Data_Tuple.Tuple('tink:1', tink_1__Sample),
		new Data_Tuple.Tuple('tink:2', tink_2__Sample),
		new Data_Tuple.Tuple('tink:3', tink_3__Sample),
		new Data_Tuple.Tuple('tink:4', tink_4__Sample),
		new Data_Tuple.Tuple('co', co_0__Sample),
		new Data_Tuple.Tuple('co:0', co_0__Sample),
		new Data_Tuple.Tuple('co:1', co_1__Sample),
		new Data_Tuple.Tuple('co:2', co_2__Sample),
		new Data_Tuple.Tuple('co:3', co_3__Sample),
		new Data_Tuple.Tuple('fest', fest_0__Sample),
		new Data_Tuple.Tuple('fest:0', fest_0__Sample),
		new Data_Tuple.Tuple('feelfx', feelfx_0__Sample),
		new Data_Tuple.Tuple('feelfx:0', feelfx_0__Sample),
		new Data_Tuple.Tuple('feelfx:1', feelfx_1__Sample),
		new Data_Tuple.Tuple('feelfx:2', feelfx_2__Sample),
		new Data_Tuple.Tuple('feelfx:3', feelfx_3__Sample),
		new Data_Tuple.Tuple('feelfx:4', feelfx_4__Sample),
		new Data_Tuple.Tuple('feelfx:5', feelfx_5__Sample),
		new Data_Tuple.Tuple('feelfx:6', feelfx_6__Sample),
		new Data_Tuple.Tuple('feelfx:7', feelfx_7__Sample),
		new Data_Tuple.Tuple('x_808cy', x_808cy_0__Sample),
		new Data_Tuple.Tuple('x_808cy:0', x_808cy_0__Sample),
		new Data_Tuple.Tuple('x_808cy:1', x_808cy_1__Sample),
		new Data_Tuple.Tuple('x_808cy:2', x_808cy_2__Sample),
		new Data_Tuple.Tuple('x_808cy:3', x_808cy_3__Sample),
		new Data_Tuple.Tuple('x_808cy:4', x_808cy_4__Sample),
		new Data_Tuple.Tuple('x_808cy:5', x_808cy_5__Sample),
		new Data_Tuple.Tuple('x_808cy:6', x_808cy_6__Sample),
		new Data_Tuple.Tuple('x_808cy:7', x_808cy_7__Sample),
		new Data_Tuple.Tuple('x_808cy:8', x_808cy_8__Sample),
		new Data_Tuple.Tuple('x_808cy:9', x_808cy_9__Sample),
		new Data_Tuple.Tuple('x_808cy:10', x_808cy_10__Sample),
		new Data_Tuple.Tuple('x_808cy:11', x_808cy_11__Sample),
		new Data_Tuple.Tuple('x_808cy:12', x_808cy_12__Sample),
		new Data_Tuple.Tuple('x_808cy:13', x_808cy_13__Sample),
		new Data_Tuple.Tuple('x_808cy:14', x_808cy_14__Sample),
		new Data_Tuple.Tuple('x_808cy:15', x_808cy_15__Sample),
		new Data_Tuple.Tuple('x_808cy:16', x_808cy_16__Sample),
		new Data_Tuple.Tuple('x_808cy:17', x_808cy_17__Sample),
		new Data_Tuple.Tuple('x_808cy:18', x_808cy_18__Sample),
		new Data_Tuple.Tuple('x_808cy:19', x_808cy_19__Sample),
		new Data_Tuple.Tuple('x_808cy:20', x_808cy_20__Sample),
		new Data_Tuple.Tuple('x_808cy:21', x_808cy_21__Sample),
		new Data_Tuple.Tuple('x_808cy:22', x_808cy_22__Sample),
		new Data_Tuple.Tuple('x_808cy:23', x_808cy_23__Sample),
		new Data_Tuple.Tuple('x_808cy:24', x_808cy_24__Sample),
		new Data_Tuple.Tuple('world', world_0__Sample),
		new Data_Tuple.Tuple('world:0', world_0__Sample),
		new Data_Tuple.Tuple('world:1', world_1__Sample),
		new Data_Tuple.Tuple('world:2', world_2__Sample),
		new Data_Tuple.Tuple('f', f_0__Sample),
		new Data_Tuple.Tuple('f:0', f_0__Sample),
		new Data_Tuple.Tuple('numbers', numbers_0__Sample),
		new Data_Tuple.Tuple('numbers:0', numbers_0__Sample),
		new Data_Tuple.Tuple('numbers:1', numbers_1__Sample),
		new Data_Tuple.Tuple('numbers:2', numbers_2__Sample),
		new Data_Tuple.Tuple('numbers:3', numbers_3__Sample),
		new Data_Tuple.Tuple('numbers:4', numbers_4__Sample),
		new Data_Tuple.Tuple('numbers:5', numbers_5__Sample),
		new Data_Tuple.Tuple('numbers:6', numbers_6__Sample),
		new Data_Tuple.Tuple('numbers:7', numbers_7__Sample),
		new Data_Tuple.Tuple('numbers:8', numbers_8__Sample),
		new Data_Tuple.Tuple('d', d_0__Sample),
		new Data_Tuple.Tuple('d:0', d_0__Sample),
		new Data_Tuple.Tuple('d:1', d_1__Sample),
		new Data_Tuple.Tuple('d:2', d_2__Sample),
		new Data_Tuple.Tuple('d:3', d_3__Sample),
		new Data_Tuple.Tuple('padlong', padlong_0__Sample),
		new Data_Tuple.Tuple('padlong:0', padlong_0__Sample),
		new Data_Tuple.Tuple('sequential', sequential_0__Sample),
		new Data_Tuple.Tuple('sequential:0', sequential_0__Sample),
		new Data_Tuple.Tuple('sequential:1', sequential_1__Sample),
		new Data_Tuple.Tuple('sequential:2', sequential_2__Sample),
		new Data_Tuple.Tuple('sequential:3', sequential_3__Sample),
		new Data_Tuple.Tuple('sequential:4', sequential_4__Sample),
		new Data_Tuple.Tuple('sequential:5', sequential_5__Sample),
		new Data_Tuple.Tuple('sequential:6', sequential_6__Sample),
		new Data_Tuple.Tuple('sequential:7', sequential_7__Sample),
		new Data_Tuple.Tuple('stab', stab_0__Sample),
		new Data_Tuple.Tuple('stab:0', stab_0__Sample),
		new Data_Tuple.Tuple('stab:1', stab_1__Sample),
		new Data_Tuple.Tuple('stab:2', stab_2__Sample),
		new Data_Tuple.Tuple('stab:3', stab_3__Sample),
		new Data_Tuple.Tuple('stab:4', stab_4__Sample),
		new Data_Tuple.Tuple('stab:5', stab_5__Sample),
		new Data_Tuple.Tuple('stab:6', stab_6__Sample),
		new Data_Tuple.Tuple('stab:7', stab_7__Sample),
		new Data_Tuple.Tuple('stab:8', stab_8__Sample),
		new Data_Tuple.Tuple('stab:9', stab_9__Sample),
		new Data_Tuple.Tuple('stab:10', stab_10__Sample),
		new Data_Tuple.Tuple('stab:11', stab_11__Sample),
		new Data_Tuple.Tuple('stab:12', stab_12__Sample),
		new Data_Tuple.Tuple('stab:13', stab_13__Sample),
		new Data_Tuple.Tuple('stab:14', stab_14__Sample),
		new Data_Tuple.Tuple('stab:15', stab_15__Sample),
		new Data_Tuple.Tuple('stab:16', stab_16__Sample),
		new Data_Tuple.Tuple('stab:17', stab_17__Sample),
		new Data_Tuple.Tuple('stab:18', stab_18__Sample),
		new Data_Tuple.Tuple('stab:19', stab_19__Sample),
		new Data_Tuple.Tuple('stab:20', stab_20__Sample),
		new Data_Tuple.Tuple('stab:21', stab_21__Sample),
		new Data_Tuple.Tuple('stab:22', stab_22__Sample),
		new Data_Tuple.Tuple('electro1', electro1_0__Sample),
		new Data_Tuple.Tuple('electro1:0', electro1_0__Sample),
		new Data_Tuple.Tuple('electro1:1', electro1_1__Sample),
		new Data_Tuple.Tuple('electro1:2', electro1_2__Sample),
		new Data_Tuple.Tuple('electro1:3', electro1_3__Sample),
		new Data_Tuple.Tuple('electro1:4', electro1_4__Sample),
		new Data_Tuple.Tuple('electro1:5', electro1_5__Sample),
		new Data_Tuple.Tuple('electro1:6', electro1_6__Sample),
		new Data_Tuple.Tuple('electro1:7', electro1_7__Sample),
		new Data_Tuple.Tuple('electro1:8', electro1_8__Sample),
		new Data_Tuple.Tuple('electro1:9', electro1_9__Sample),
		new Data_Tuple.Tuple('electro1:10', electro1_10__Sample),
		new Data_Tuple.Tuple('electro1:11', electro1_11__Sample),
		new Data_Tuple.Tuple('electro1:12', electro1_12__Sample),
		new Data_Tuple.Tuple('ifdrums', ifdrums_0__Sample),
		new Data_Tuple.Tuple('ifdrums:0', ifdrums_0__Sample),
		new Data_Tuple.Tuple('ifdrums:1', ifdrums_1__Sample),
		new Data_Tuple.Tuple('ifdrums:2', ifdrums_2__Sample),
		new Data_Tuple.Tuple('invaders', invaders_0__Sample),
		new Data_Tuple.Tuple('invaders:0', invaders_0__Sample),
		new Data_Tuple.Tuple('invaders:1', invaders_1__Sample),
		new Data_Tuple.Tuple('invaders:2', invaders_2__Sample),
		new Data_Tuple.Tuple('invaders:3', invaders_3__Sample),
		new Data_Tuple.Tuple('invaders:4', invaders_4__Sample),
		new Data_Tuple.Tuple('invaders:5', invaders_5__Sample),
		new Data_Tuple.Tuple('invaders:6', invaders_6__Sample),
		new Data_Tuple.Tuple('invaders:7', invaders_7__Sample),
		new Data_Tuple.Tuple('invaders:8', invaders_8__Sample),
		new Data_Tuple.Tuple('invaders:9', invaders_9__Sample),
		new Data_Tuple.Tuple('invaders:10', invaders_10__Sample),
		new Data_Tuple.Tuple('invaders:11', invaders_11__Sample),
		new Data_Tuple.Tuple('invaders:12', invaders_12__Sample),
		new Data_Tuple.Tuple('invaders:13', invaders_13__Sample),
		new Data_Tuple.Tuple('invaders:14', invaders_14__Sample),
		new Data_Tuple.Tuple('invaders:15', invaders_15__Sample),
		new Data_Tuple.Tuple('invaders:16', invaders_16__Sample),
		new Data_Tuple.Tuple('invaders:17', invaders_17__Sample),
		new Data_Tuple.Tuple('dist', dist_0__Sample),
		new Data_Tuple.Tuple('dist:0', dist_0__Sample),
		new Data_Tuple.Tuple('dist:1', dist_1__Sample),
		new Data_Tuple.Tuple('dist:2', dist_2__Sample),
		new Data_Tuple.Tuple('dist:3', dist_3__Sample),
		new Data_Tuple.Tuple('dist:4', dist_4__Sample),
		new Data_Tuple.Tuple('dist:5', dist_5__Sample),
		new Data_Tuple.Tuple('dist:6', dist_6__Sample),
		new Data_Tuple.Tuple('dist:7', dist_7__Sample),
		new Data_Tuple.Tuple('dist:8', dist_8__Sample),
		new Data_Tuple.Tuple('dist:9', dist_9__Sample),
		new Data_Tuple.Tuple('dist:10', dist_10__Sample),
		new Data_Tuple.Tuple('dist:11', dist_11__Sample),
		new Data_Tuple.Tuple('dist:12', dist_12__Sample),
		new Data_Tuple.Tuple('dist:13', dist_13__Sample),
		new Data_Tuple.Tuple('dist:14', dist_14__Sample),
		new Data_Tuple.Tuple('dist:15', dist_15__Sample),
		new Data_Tuple.Tuple('sundance', sundance_0__Sample),
		new Data_Tuple.Tuple('sundance:0', sundance_0__Sample),
		new Data_Tuple.Tuple('sundance:1', sundance_1__Sample),
		new Data_Tuple.Tuple('sundance:2', sundance_2__Sample),
		new Data_Tuple.Tuple('sundance:3', sundance_3__Sample),
		new Data_Tuple.Tuple('sundance:4', sundance_4__Sample),
		new Data_Tuple.Tuple('sundance:5', sundance_5__Sample),
		new Data_Tuple.Tuple('speech', speech_0__Sample),
		new Data_Tuple.Tuple('speech:0', speech_0__Sample),
		new Data_Tuple.Tuple('speech:1', speech_1__Sample),
		new Data_Tuple.Tuple('speech:2', speech_2__Sample),
		new Data_Tuple.Tuple('speech:3', speech_3__Sample),
		new Data_Tuple.Tuple('speech:4', speech_4__Sample),
		new Data_Tuple.Tuple('speech:5', speech_5__Sample),
		new Data_Tuple.Tuple('speech:6', speech_6__Sample),
		new Data_Tuple.Tuple('toys', toys_0__Sample),
		new Data_Tuple.Tuple('toys:0', toys_0__Sample),
		new Data_Tuple.Tuple('toys:1', toys_1__Sample),
		new Data_Tuple.Tuple('toys:2', toys_2__Sample),
		new Data_Tuple.Tuple('toys:3', toys_3__Sample),
		new Data_Tuple.Tuple('toys:4', toys_4__Sample),
		new Data_Tuple.Tuple('toys:5', toys_5__Sample),
		new Data_Tuple.Tuple('toys:6', toys_6__Sample),
		new Data_Tuple.Tuple('toys:7', toys_7__Sample),
		new Data_Tuple.Tuple('toys:8', toys_8__Sample),
		new Data_Tuple.Tuple('toys:9', toys_9__Sample),
		new Data_Tuple.Tuple('toys:10', toys_10__Sample),
		new Data_Tuple.Tuple('toys:11', toys_11__Sample),
		new Data_Tuple.Tuple('toys:12', toys_12__Sample),
		new Data_Tuple.Tuple('bass0', bass0_0__Sample),
		new Data_Tuple.Tuple('bass0:0', bass0_0__Sample),
		new Data_Tuple.Tuple('bass0:1', bass0_1__Sample),
		new Data_Tuple.Tuple('bass0:2', bass0_2__Sample),
		new Data_Tuple.Tuple('realclaps', realclaps_0__Sample),
		new Data_Tuple.Tuple('realclaps:0', realclaps_0__Sample),
		new Data_Tuple.Tuple('realclaps:1', realclaps_1__Sample),
		new Data_Tuple.Tuple('realclaps:2', realclaps_2__Sample),
		new Data_Tuple.Tuple('realclaps:3', realclaps_3__Sample),
		new Data_Tuple.Tuple('dorkbot', dorkbot_0__Sample),
		new Data_Tuple.Tuple('dorkbot:0', dorkbot_0__Sample),
		new Data_Tuple.Tuple('dorkbot:1', dorkbot_1__Sample),
		new Data_Tuple.Tuple('arpy', arpy_0__Sample),
		new Data_Tuple.Tuple('arpy:0', arpy_0__Sample),
		new Data_Tuple.Tuple('arpy:1', arpy_1__Sample),
		new Data_Tuple.Tuple('arpy:2', arpy_2__Sample),
		new Data_Tuple.Tuple('arpy:3', arpy_3__Sample),
		new Data_Tuple.Tuple('arpy:4', arpy_4__Sample),
		new Data_Tuple.Tuple('arpy:5', arpy_5__Sample),
		new Data_Tuple.Tuple('arpy:6', arpy_6__Sample),
		new Data_Tuple.Tuple('arpy:7', arpy_7__Sample),
		new Data_Tuple.Tuple('arpy:8', arpy_8__Sample),
		new Data_Tuple.Tuple('arpy:9', arpy_9__Sample),
		new Data_Tuple.Tuple('arpy:10', arpy_10__Sample),
		new Data_Tuple.Tuple('fire', fire_0__Sample),
		new Data_Tuple.Tuple('fire:0', fire_0__Sample),
		new Data_Tuple.Tuple('hoover', hoover_0__Sample),
		new Data_Tuple.Tuple('hoover:0', hoover_0__Sample),
		new Data_Tuple.Tuple('hoover:1', hoover_1__Sample),
		new Data_Tuple.Tuple('hoover:2', hoover_2__Sample),
		new Data_Tuple.Tuple('hoover:3', hoover_3__Sample),
		new Data_Tuple.Tuple('hoover:4', hoover_4__Sample),
		new Data_Tuple.Tuple('hoover:5', hoover_5__Sample),
		new Data_Tuple.Tuple('breath', breath_0__Sample),
		new Data_Tuple.Tuple('breath:0', breath_0__Sample),
		new Data_Tuple.Tuple('rave', rave_0__Sample),
		new Data_Tuple.Tuple('rave:0', rave_0__Sample),
		new Data_Tuple.Tuple('rave:1', rave_1__Sample),
		new Data_Tuple.Tuple('rave:2', rave_2__Sample),
		new Data_Tuple.Tuple('rave:3', rave_3__Sample),
		new Data_Tuple.Tuple('rave:4', rave_4__Sample),
		new Data_Tuple.Tuple('rave:5', rave_5__Sample),
		new Data_Tuple.Tuple('rave:6', rave_6__Sample),
		new Data_Tuple.Tuple('rave:7', rave_7__Sample),
		new Data_Tuple.Tuple('bottle', bottle_0__Sample),
		new Data_Tuple.Tuple('bottle:0', bottle_0__Sample),
		new Data_Tuple.Tuple('bottle:1', bottle_1__Sample),
		new Data_Tuple.Tuple('bottle:2', bottle_2__Sample),
		new Data_Tuple.Tuple('bottle:3', bottle_3__Sample),
		new Data_Tuple.Tuple('bottle:4', bottle_4__Sample),
		new Data_Tuple.Tuple('bottle:5', bottle_5__Sample),
		new Data_Tuple.Tuple('bottle:6', bottle_6__Sample),
		new Data_Tuple.Tuple('bottle:7', bottle_7__Sample),
		new Data_Tuple.Tuple('bottle:8', bottle_8__Sample),
		new Data_Tuple.Tuple('bottle:9', bottle_9__Sample),
		new Data_Tuple.Tuple('bottle:10', bottle_10__Sample),
		new Data_Tuple.Tuple('bottle:11', bottle_11__Sample),
		new Data_Tuple.Tuple('bottle:12', bottle_12__Sample),
		new Data_Tuple.Tuple('east', east_0__Sample),
		new Data_Tuple.Tuple('east:0', east_0__Sample),
		new Data_Tuple.Tuple('east:1', east_1__Sample),
		new Data_Tuple.Tuple('east:2', east_2__Sample),
		new Data_Tuple.Tuple('east:3', east_3__Sample),
		new Data_Tuple.Tuple('east:4', east_4__Sample),
		new Data_Tuple.Tuple('east:5', east_5__Sample),
		new Data_Tuple.Tuple('east:6', east_6__Sample),
		new Data_Tuple.Tuple('east:7', east_7__Sample),
		new Data_Tuple.Tuple('east:8', east_8__Sample),
		new Data_Tuple.Tuple('linnhats', linnhats_0__Sample),
		new Data_Tuple.Tuple('linnhats:0', linnhats_0__Sample),
		new Data_Tuple.Tuple('linnhats:1', linnhats_1__Sample),
		new Data_Tuple.Tuple('linnhats:2', linnhats_2__Sample),
		new Data_Tuple.Tuple('linnhats:3', linnhats_3__Sample),
		new Data_Tuple.Tuple('linnhats:4', linnhats_4__Sample),
		new Data_Tuple.Tuple('linnhats:5', linnhats_5__Sample),
		new Data_Tuple.Tuple('speedupdown', speedupdown_0__Sample),
		new Data_Tuple.Tuple('speedupdown:0', speedupdown_0__Sample),
		new Data_Tuple.Tuple('speedupdown:1', speedupdown_1__Sample),
		new Data_Tuple.Tuple('speedupdown:2', speedupdown_2__Sample),
		new Data_Tuple.Tuple('speedupdown:3', speedupdown_3__Sample),
		new Data_Tuple.Tuple('speedupdown:4', speedupdown_4__Sample),
		new Data_Tuple.Tuple('speedupdown:5', speedupdown_5__Sample),
		new Data_Tuple.Tuple('speedupdown:6', speedupdown_6__Sample),
		new Data_Tuple.Tuple('speedupdown:7', speedupdown_7__Sample),
		new Data_Tuple.Tuple('speedupdown:8', speedupdown_8__Sample),
		new Data_Tuple.Tuple('cosmicg', cosmicg_0__Sample),
		new Data_Tuple.Tuple('cosmicg:0', cosmicg_0__Sample),
		new Data_Tuple.Tuple('cosmicg:1', cosmicg_1__Sample),
		new Data_Tuple.Tuple('cosmicg:2', cosmicg_2__Sample),
		new Data_Tuple.Tuple('cosmicg:3', cosmicg_3__Sample),
		new Data_Tuple.Tuple('cosmicg:4', cosmicg_4__Sample),
		new Data_Tuple.Tuple('cosmicg:5', cosmicg_5__Sample),
		new Data_Tuple.Tuple('cosmicg:6', cosmicg_6__Sample),
		new Data_Tuple.Tuple('cosmicg:7', cosmicg_7__Sample),
		new Data_Tuple.Tuple('cosmicg:8', cosmicg_8__Sample),
		new Data_Tuple.Tuple('cosmicg:9', cosmicg_9__Sample),
		new Data_Tuple.Tuple('cosmicg:10', cosmicg_10__Sample),
		new Data_Tuple.Tuple('cosmicg:11', cosmicg_11__Sample),
		new Data_Tuple.Tuple('cosmicg:12', cosmicg_12__Sample),
		new Data_Tuple.Tuple('cosmicg:13', cosmicg_13__Sample),
		new Data_Tuple.Tuple('cosmicg:14', cosmicg_14__Sample),
		new Data_Tuple.Tuple('jvbass', jvbass_0__Sample),
		new Data_Tuple.Tuple('jvbass:0', jvbass_0__Sample),
		new Data_Tuple.Tuple('jvbass:1', jvbass_1__Sample),
		new Data_Tuple.Tuple('jvbass:2', jvbass_2__Sample),
		new Data_Tuple.Tuple('jvbass:3', jvbass_3__Sample),
		new Data_Tuple.Tuple('jvbass:4', jvbass_4__Sample),
		new Data_Tuple.Tuple('jvbass:5', jvbass_5__Sample),
		new Data_Tuple.Tuple('jvbass:6', jvbass_6__Sample),
		new Data_Tuple.Tuple('jvbass:7', jvbass_7__Sample),
		new Data_Tuple.Tuple('jvbass:8', jvbass_8__Sample),
		new Data_Tuple.Tuple('jvbass:9', jvbass_9__Sample),
		new Data_Tuple.Tuple('jvbass:10', jvbass_10__Sample),
		new Data_Tuple.Tuple('jvbass:11', jvbass_11__Sample),
		new Data_Tuple.Tuple('jvbass:12', jvbass_12__Sample),
		new Data_Tuple.Tuple('mash', mash_0__Sample),
		new Data_Tuple.Tuple('mash:0', mash_0__Sample),
		new Data_Tuple.Tuple('mash:1', mash_1__Sample),
		new Data_Tuple.Tuple('feel', feel_0__Sample),
		new Data_Tuple.Tuple('feel:0', feel_0__Sample),
		new Data_Tuple.Tuple('feel:1', feel_1__Sample),
		new Data_Tuple.Tuple('feel:2', feel_2__Sample),
		new Data_Tuple.Tuple('feel:3', feel_3__Sample),
		new Data_Tuple.Tuple('feel:4', feel_4__Sample),
		new Data_Tuple.Tuple('feel:5', feel_5__Sample),
		new Data_Tuple.Tuple('feel:6', feel_6__Sample),
		new Data_Tuple.Tuple('short', short_0__Sample),
		new Data_Tuple.Tuple('short:0', short_0__Sample),
		new Data_Tuple.Tuple('short:1', short_1__Sample),
		new Data_Tuple.Tuple('short:2', short_2__Sample),
		new Data_Tuple.Tuple('short:3', short_3__Sample),
		new Data_Tuple.Tuple('short:4', short_4__Sample),
		new Data_Tuple.Tuple('incoming', incoming_0__Sample),
		new Data_Tuple.Tuple('incoming:0', incoming_0__Sample),
		new Data_Tuple.Tuple('incoming:1', incoming_1__Sample),
		new Data_Tuple.Tuple('incoming:2', incoming_2__Sample),
		new Data_Tuple.Tuple('incoming:3', incoming_3__Sample),
		new Data_Tuple.Tuple('incoming:4', incoming_4__Sample),
		new Data_Tuple.Tuple('incoming:5', incoming_5__Sample),
		new Data_Tuple.Tuple('incoming:6', incoming_6__Sample),
		new Data_Tuple.Tuple('incoming:7', incoming_7__Sample),
		new Data_Tuple.Tuple('flick', flick_0__Sample),
		new Data_Tuple.Tuple('flick:0', flick_0__Sample),
		new Data_Tuple.Tuple('flick:1', flick_1__Sample),
		new Data_Tuple.Tuple('flick:2', flick_2__Sample),
		new Data_Tuple.Tuple('flick:3', flick_3__Sample),
		new Data_Tuple.Tuple('flick:4', flick_4__Sample),
		new Data_Tuple.Tuple('flick:5', flick_5__Sample),
		new Data_Tuple.Tuple('flick:6', flick_6__Sample),
		new Data_Tuple.Tuple('flick:7', flick_7__Sample),
		new Data_Tuple.Tuple('flick:8', flick_8__Sample),
		new Data_Tuple.Tuple('flick:9', flick_9__Sample),
		new Data_Tuple.Tuple('flick:10', flick_10__Sample),
		new Data_Tuple.Tuple('flick:11', flick_11__Sample),
		new Data_Tuple.Tuple('flick:12', flick_12__Sample),
		new Data_Tuple.Tuple('flick:13', flick_13__Sample),
		new Data_Tuple.Tuple('flick:14', flick_14__Sample),
		new Data_Tuple.Tuple('flick:15', flick_15__Sample),
		new Data_Tuple.Tuple('flick:16', flick_16__Sample),
		new Data_Tuple.Tuple('reverbkick', reverbkick_0__Sample),
		new Data_Tuple.Tuple('reverbkick:0', reverbkick_0__Sample),
		new Data_Tuple.Tuple('bass2', bass2_0__Sample),
		new Data_Tuple.Tuple('bass2:0', bass2_0__Sample),
		new Data_Tuple.Tuple('bass2:1', bass2_1__Sample),
		new Data_Tuple.Tuple('bass2:2', bass2_2__Sample),
		new Data_Tuple.Tuple('bass2:3', bass2_3__Sample),
		new Data_Tuple.Tuple('bass2:4', bass2_4__Sample),
		new Data_Tuple.Tuple('baa', baa_0__Sample),
		new Data_Tuple.Tuple('baa:0', baa_0__Sample),
		new Data_Tuple.Tuple('baa:1', baa_1__Sample),
		new Data_Tuple.Tuple('baa:2', baa_2__Sample),
		new Data_Tuple.Tuple('baa:3', baa_3__Sample),
		new Data_Tuple.Tuple('baa:4', baa_4__Sample),
		new Data_Tuple.Tuple('baa:5', baa_5__Sample),
		new Data_Tuple.Tuple('baa:6', baa_6__Sample),
		new Data_Tuple.Tuple('fm', fm_0__Sample),
		new Data_Tuple.Tuple('fm:0', fm_0__Sample),
		new Data_Tuple.Tuple('fm:1', fm_1__Sample),
		new Data_Tuple.Tuple('fm:2', fm_2__Sample),
		new Data_Tuple.Tuple('fm:3', fm_3__Sample),
		new Data_Tuple.Tuple('fm:4', fm_4__Sample),
		new Data_Tuple.Tuple('fm:5', fm_5__Sample),
		new Data_Tuple.Tuple('fm:6', fm_6__Sample),
		new Data_Tuple.Tuple('fm:7', fm_7__Sample),
		new Data_Tuple.Tuple('fm:8', fm_8__Sample),
		new Data_Tuple.Tuple('fm:9', fm_9__Sample),
		new Data_Tuple.Tuple('fm:10', fm_10__Sample),
		new Data_Tuple.Tuple('fm:11', fm_11__Sample),
		new Data_Tuple.Tuple('fm:12', fm_12__Sample),
		new Data_Tuple.Tuple('fm:13', fm_13__Sample),
		new Data_Tuple.Tuple('fm:14', fm_14__Sample),
		new Data_Tuple.Tuple('fm:15', fm_15__Sample),
		new Data_Tuple.Tuple('fm:16', fm_16__Sample),
		new Data_Tuple.Tuple('click', click_0__Sample),
		new Data_Tuple.Tuple('click:0', click_0__Sample),
		new Data_Tuple.Tuple('click:1', click_1__Sample),
		new Data_Tuple.Tuple('click:2', click_2__Sample),
		new Data_Tuple.Tuple('click:3', click_3__Sample),
		new Data_Tuple.Tuple('control', control_0__Sample),
		new Data_Tuple.Tuple('control:0', control_0__Sample),
		new Data_Tuple.Tuple('control:1', control_1__Sample),
		new Data_Tuple.Tuple('peri', peri_0__Sample),
		new Data_Tuple.Tuple('peri:0', peri_0__Sample),
		new Data_Tuple.Tuple('peri:1', peri_1__Sample),
		new Data_Tuple.Tuple('peri:2', peri_2__Sample),
		new Data_Tuple.Tuple('peri:3', peri_3__Sample),
		new Data_Tuple.Tuple('peri:4', peri_4__Sample),
		new Data_Tuple.Tuple('peri:5', peri_5__Sample),
		new Data_Tuple.Tuple('peri:6', peri_6__Sample),
		new Data_Tuple.Tuple('peri:7', peri_7__Sample),
		new Data_Tuple.Tuple('peri:8', peri_8__Sample),
		new Data_Tuple.Tuple('peri:9', peri_9__Sample),
		new Data_Tuple.Tuple('peri:10', peri_10__Sample),
		new Data_Tuple.Tuple('peri:11', peri_11__Sample),
		new Data_Tuple.Tuple('peri:12', peri_12__Sample),
		new Data_Tuple.Tuple('peri:13', peri_13__Sample),
		new Data_Tuple.Tuple('peri:14', peri_14__Sample),
		new Data_Tuple.Tuple('procshort', procshort_0__Sample),
		new Data_Tuple.Tuple('procshort:0', procshort_0__Sample),
		new Data_Tuple.Tuple('procshort:1', procshort_1__Sample),
		new Data_Tuple.Tuple('procshort:2', procshort_2__Sample),
		new Data_Tuple.Tuple('procshort:3', procshort_3__Sample),
		new Data_Tuple.Tuple('procshort:4', procshort_4__Sample),
		new Data_Tuple.Tuple('procshort:5', procshort_5__Sample),
		new Data_Tuple.Tuple('procshort:6', procshort_6__Sample),
		new Data_Tuple.Tuple('procshort:7', procshort_7__Sample),
		new Data_Tuple.Tuple('hand', hand_0__Sample),
		new Data_Tuple.Tuple('hand:0', hand_0__Sample),
		new Data_Tuple.Tuple('hand:1', hand_1__Sample),
		new Data_Tuple.Tuple('hand:2', hand_2__Sample),
		new Data_Tuple.Tuple('hand:3', hand_3__Sample),
		new Data_Tuple.Tuple('hand:4', hand_4__Sample),
		new Data_Tuple.Tuple('hand:5', hand_5__Sample),
		new Data_Tuple.Tuple('hand:6', hand_6__Sample),
		new Data_Tuple.Tuple('hand:7', hand_7__Sample),
		new Data_Tuple.Tuple('hand:8', hand_8__Sample),
		new Data_Tuple.Tuple('hand:9', hand_9__Sample),
		new Data_Tuple.Tuple('hand:10', hand_10__Sample),
		new Data_Tuple.Tuple('hand:11', hand_11__Sample),
		new Data_Tuple.Tuple('hand:12', hand_12__Sample),
		new Data_Tuple.Tuple('hand:13', hand_13__Sample),
		new Data_Tuple.Tuple('hand:14', hand_14__Sample),
		new Data_Tuple.Tuple('hand:15', hand_15__Sample),
		new Data_Tuple.Tuple('hand:16', hand_16__Sample),
		new Data_Tuple.Tuple('future', future_0__Sample),
		new Data_Tuple.Tuple('future:0', future_0__Sample),
		new Data_Tuple.Tuple('future:1', future_1__Sample),
		new Data_Tuple.Tuple('future:2', future_2__Sample),
		new Data_Tuple.Tuple('future:3', future_3__Sample),
		new Data_Tuple.Tuple('future:4', future_4__Sample),
		new Data_Tuple.Tuple('future:5', future_5__Sample),
		new Data_Tuple.Tuple('future:6', future_6__Sample),
		new Data_Tuple.Tuple('future:7', future_7__Sample),
		new Data_Tuple.Tuple('future:8', future_8__Sample),
		new Data_Tuple.Tuple('future:9', future_9__Sample),
		new Data_Tuple.Tuple('future:10', future_10__Sample),
		new Data_Tuple.Tuple('future:11', future_11__Sample),
		new Data_Tuple.Tuple('future:12', future_12__Sample),
		new Data_Tuple.Tuple('future:13', future_13__Sample),
		new Data_Tuple.Tuple('future:14', future_14__Sample),
		new Data_Tuple.Tuple('future:15', future_15__Sample),
		new Data_Tuple.Tuple('future:16', future_16__Sample),
		new Data_Tuple.Tuple('hh', hh_0__Sample),
		new Data_Tuple.Tuple('hh:0', hh_0__Sample),
		new Data_Tuple.Tuple('hh:1', hh_1__Sample),
		new Data_Tuple.Tuple('hh:2', hh_2__Sample),
		new Data_Tuple.Tuple('hh:3', hh_3__Sample),
		new Data_Tuple.Tuple('hh:4', hh_4__Sample),
		new Data_Tuple.Tuple('hh:5', hh_5__Sample),
		new Data_Tuple.Tuple('hh:6', hh_6__Sample),
		new Data_Tuple.Tuple('hh:7', hh_7__Sample),
		new Data_Tuple.Tuple('hh:8', hh_8__Sample),
		new Data_Tuple.Tuple('hh:9', hh_9__Sample),
		new Data_Tuple.Tuple('hh:10', hh_10__Sample),
		new Data_Tuple.Tuple('hh:11', hh_11__Sample),
		new Data_Tuple.Tuple('hh:12', hh_12__Sample),
		new Data_Tuple.Tuple('x_808ht', x_808ht_0__Sample),
		new Data_Tuple.Tuple('x_808ht:0', x_808ht_0__Sample),
		new Data_Tuple.Tuple('x_808ht:1', x_808ht_1__Sample),
		new Data_Tuple.Tuple('x_808ht:2', x_808ht_2__Sample),
		new Data_Tuple.Tuple('x_808ht:3', x_808ht_3__Sample),
		new Data_Tuple.Tuple('x_808ht:4', x_808ht_4__Sample),
		new Data_Tuple.Tuple('db', db_0__Sample),
		new Data_Tuple.Tuple('db:0', db_0__Sample),
		new Data_Tuple.Tuple('db:1', db_1__Sample),
		new Data_Tuple.Tuple('db:2', db_2__Sample),
		new Data_Tuple.Tuple('db:3', db_3__Sample),
		new Data_Tuple.Tuple('db:4', db_4__Sample),
		new Data_Tuple.Tuple('db:5', db_5__Sample),
		new Data_Tuple.Tuple('db:6', db_6__Sample),
		new Data_Tuple.Tuple('db:7', db_7__Sample),
		new Data_Tuple.Tuple('db:8', db_8__Sample),
		new Data_Tuple.Tuple('db:9', db_9__Sample),
		new Data_Tuple.Tuple('db:10', db_10__Sample),
		new Data_Tuple.Tuple('db:11', db_11__Sample),
		new Data_Tuple.Tuple('db:12', db_12__Sample),
	])(dronesToSample);
	var nameToSampleO = Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(
		nameToSample
	);
	var nameToSampleMO = Foreign_Object.union(
		Data_Functor.map(Foreign_Object.functorObject)(Data_Maybe.Just.create)(
			nameToSampleO
		)
	)(Foreign_Object.singleton('~')(Data_Maybe.Nothing.value));
	var nameToSampleMNO = Data_Functor.map(Foreign_Object.functorObject)(
		Data_Functor.map(Data_Maybe.functorMaybe)(function ($172) {
			return WAGSI_Plumbing_Types.Note(
				(function (v) {
					return {
						sampleFoT: v,
						bufferOffsetFoT: Data_Function['const'](0.0),
						rateFoT: Data_Function['const'](1.0),
						forward: true,
						volumeFoT: Data_Function['const'](1.0),
					};
				})(Data_Either.Right.create($172))
			);
		})
	)(nameToSampleMO);
	exports['sampleToUrls'] = sampleToUrls;
	exports['nameToSampleO'] = nameToSampleO;
	exports['nameToSampleMNO'] = nameToSampleMNO;
	exports['intentionalSilenceForInternalUseOnly__Sample'] =
		intentionalSilenceForInternalUseOnly__Sample;
	exports['bassdm_0__Sample'] = bassdm_0__Sample;
	exports['tabla_0__Sample'] = tabla_0__Sample;
	exports['hh_0__Sample'] = hh_0__Sample;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Tidal'] = $PS['WAGSI.Plumbing.Tidal'] || {};
	var exports = $PS['WAGSI.Plumbing.Tidal'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Control_Monad_State = $PS['Control.Monad.State'];
	var Control_Monad_State_Class = $PS['Control.Monad.State.Class'];
	var Control_Monad_State_Trans = $PS['Control.Monad.State.Trans'];
	var Data_Array = $PS['Data.Array'];
	var Data_Compactable = $PS['Data.Compactable'];
	var Data_Either = $PS['Data.Either'];
	var Data_Eq = $PS['Data.Eq'];
	var Data_Filterable = $PS['Data.Filterable'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_FunctorWithIndex = $PS['Data.FunctorWithIndex'];
	var Data_HeytingAlgebra = $PS['Data.HeytingAlgebra'];
	var Data_Identity = $PS['Data.Identity'];
	var Data_Int = $PS['Data.Int'];
	var Data_List = $PS['Data.List'];
	var Data_List_NonEmpty = $PS['Data.List.NonEmpty'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_NonEmpty = $PS['Data.NonEmpty'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Semiring = $PS['Data.Semiring'];
	var Data_Set = $PS['Data.Set'];
	var Data_Show = $PS['Data.Show'];
	var Data_String_CodeUnits = $PS['Data.String.CodeUnits'];
	var Data_Traversable = $PS['Data.Traversable'];
	var Data_Typelevel_Num_Ops = $PS['Data.Typelevel.Num.Ops'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var Data_Unfoldable = $PS['Data.Unfoldable'];
	var Data_Unit = $PS['Data.Unit'];
	var Data_Vec = $PS['Data.Vec'];
	var Foreign_Object = $PS['Foreign.Object'];
	var Heterogeneous_Mapping = $PS['Heterogeneous.Mapping'];
	var Record = $PS['Record'];
	var Text_Parsing_StringParser = $PS['Text.Parsing.StringParser'];
	var Text_Parsing_StringParser_CodeUnits =
		$PS['Text.Parsing.StringParser.CodeUnits'];
	var Text_Parsing_StringParser_Combinators =
		$PS['Text.Parsing.StringParser.Combinators'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_ConstructEdges = $PS['WAGS.ConstructEdges'];
	var WAGS_Create = $PS['WAGS.Create'];
	var WAGS_Create_Optionals = $PS['WAGS.Create.Optionals'];
	var WAGS_Tumult_Make = $PS['WAGS.Tumult.Make'];
	var WAGSI_Plumbing_Cycle = $PS['WAGSI.Plumbing.Cycle'];
	var WAGSI_Plumbing_Samples = $PS['WAGSI.Plumbing.Samples'];
	var WAGSI_Plumbing_Types = $PS['WAGSI.Plumbing.Types'];
	var whiteSpace1 = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		Text_Parsing_StringParser_Combinators.many1(
			Text_Parsing_StringParser_CodeUnits.satisfy(function (c) {
				return c === '\x0a' || c === '\x0d' || c === ' ' || c === '\x09';
			})
		)
	)(function (cs) {
		return Control_Applicative.pure(
			Text_Parsing_StringParser.applicativeParser
		)(
			Data_Foldable.foldMap(Data_List_Types.foldableNonEmptyList)(
				Data_Monoid.monoidString
			)(Data_String_CodeUnits.singleton)(cs)
		);
	});
	var weightP = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		Text_Parsing_StringParser_CodeUnits.skipSpaces
	)(function () {
		return Data_Functor.map(Text_Parsing_StringParser.functorParser)(
			(function () {
				var $300 = Data_Semiring.add(Data_Semiring.semiringNumber)(1.0);
				return function ($301) {
					return $300(Data_Int.toNumber(Data_List.length($301)));
				};
			})()
		)(
			Text_Parsing_StringParser_Combinators.sepEndBy(
				Text_Parsing_StringParser_CodeUnits['char']('_')
			)(whiteSpace1)
		);
	});
	var unrest = (function () {
		var go = (function () {
			var $302 = Data_Filterable.filterMap(Data_Filterable.filterableList)(
				function (v) {
					return Data_Functor.map(Data_Maybe.functorMaybe)(function ($304) {
						return WAGSI_Plumbing_Types.NoteInTime(
							(function (v1) {
								return {
									startsAt: v.startsAt,
									duration: v.duration,
									cycleDuration: v.cycleDuration,
									tag: v.tag,
									note: v1,
								};
							})($304)
						);
					})(v.note);
				}
			);
			return function ($303) {
				return $302(Data_List_NonEmpty.toList($303));
			};
		})();
		var $305 = Data_Filterable.filter(Data_Filterable.filterableList)(
			(function () {
				var $308 = Data_HeytingAlgebra.not(
					Data_HeytingAlgebra.heytingAlgebraBoolean
				);
				return function ($309) {
					return $308(Data_List['null']($309));
				};
			})()
		);
		var $306 = Data_Functor.map(Data_List_Types.functorNonEmptyList)(go);
		return function ($307) {
			return $305(Data_List_NonEmpty.toList($306($307)));
		};
	})();
	var tagP = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		Text_Parsing_StringParser_Combinators.optionMaybe(
			Data_Functor.map(Text_Parsing_StringParser.functorParser)(
				(function () {
					var $310 = Data_Array.fromFoldable(
						Data_List_Types.foldableNonEmptyList
					);
					return function ($311) {
						return Data_String_CodeUnits.fromCharArray($310($311));
					};
				})()
			)(
				Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
					Text_Parsing_StringParser_CodeUnits['char'](';')
				)(
					Text_Parsing_StringParser_Combinators.many1(
						Text_Parsing_StringParser_CodeUnits.alphaNum
					)
				)
			)
		)
	)(function (tag) {
		return Control_Applicative.pure(
			Text_Parsing_StringParser.applicativeParser
		)({
			tag: tag,
		});
	});
	var sampleName = Data_Functor.map(Text_Parsing_StringParser.functorParser)(
		(function () {
			var $312 = Data_Array.fromFoldable(Data_List_Types.foldableList);
			return function ($313) {
				return Data_String_CodeUnits.fromCharArray(
					$312(Data_List_NonEmpty.toList($313))
				);
			};
		})()
	)(
		Text_Parsing_StringParser_Combinators.many1(
			Text_Parsing_StringParser_CodeUnits.oneOf(Data_Foldable.foldableArray)([
				'A',
				'B',
				'C',
				'D',
				'E',
				'F',
				'G',
				'H',
				'I',
				'J',
				'K',
				'L',
				'M',
				'N',
				'O',
				'P',
				'Q',
				'R',
				'S',
				'T',
				'U',
				'V',
				'W',
				'X',
				'Y',
				'Z',
				'a',
				'b',
				'c',
				'd',
				'e',
				'f',
				'g',
				'h',
				'i',
				'j',
				'k',
				'l',
				'm',
				'n',
				'o',
				'p',
				'q',
				'r',
				's',
				't',
				'u',
				'v',
				'w',
				'x',
				'y',
				'z',
				'0',
				'1',
				'2',
				'3',
				'4',
				'5',
				'6',
				'7',
				'8',
				'9',
				':',
				'~',
			])
		)
	);
	var sampleP = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		sampleName
	)(function (possiblySample) {
		var v = Foreign_Object.lookup(possiblySample)(
			WAGSI_Plumbing_Samples.nameToSampleMNO
		);
		if (v instanceof Data_Maybe.Nothing) {
			return Control_Applicative.pure(
				Text_Parsing_StringParser.applicativeParser
			)(
				Data_Maybe.Just.create({
					sampleFoT: Data_Either.Right.create(possiblySample),
					bufferOffsetFoT: Data_Function['const'](0.0),
					rateFoT: Data_Function['const'](1.0),
					forward: true,
					volumeFoT: Data_Function['const'](1.0),
				})
			);
		}
		if (v instanceof Data_Maybe.Just) {
			return Control_Applicative.pure(
				Text_Parsing_StringParser.applicativeParser
			)(v.value0);
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Tidal (line 378, column 3 - line 386, column 41): ' +
				[v.constructor.name]
		);
	});
	var s = function (dict) {
		return dict.s;
	};
	var openDrones = Heterogeneous_Mapping.hmap(
		Heterogeneous_Mapping.hmapRecord()(
			Heterogeneous_Mapping.mapRecordWithIndexCons({
				reflectSymbol: function () {
					return 'air';
				},
			})(
				Heterogeneous_Mapping.constMapping(
					Heterogeneous_Mapping.mappingFunction
				)
			)(
				Heterogeneous_Mapping.mapRecordWithIndexCons({
					reflectSymbol: function () {
						return 'heart';
					},
				})(
					Heterogeneous_Mapping.constMapping(
						Heterogeneous_Mapping.mappingFunction
					)
				)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
			)()()
		)
	)(function (v) {
		return Data_Maybe.Nothing.value;
	})(
		Data_Monoid.mempty(
			Data_Monoid.monoidRecord()(
				Data_Monoid.monoidRecordCons({
					reflectSymbol: function () {
						return 'air';
					},
				})(Data_Monoid.monoidUnit)()(
					Data_Monoid.monoidRecordCons({
						reflectSymbol: function () {
							return 'heart';
						},
					})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
				)
			)
		)
	);
	var joinSequential = function (v) {
		if (v instanceof Data_List_Types.Nil) {
			return Data_List_Types.Nil.value;
		}
		if (
			v instanceof Data_List_Types.Cons &&
			v.value0 instanceof WAGSI_Plumbing_Types.ISequential
		) {
			return Data_Semigroup.append(Data_List_Types.semigroupList)(
				new Data_List_Types.Cons(
					v.value0.value0.nel.value0,
					joinSequential(v.value0.value0.nel.value1)
				)
			)(joinSequential(v.value1));
		}
		if (v instanceof Data_List_Types.Cons) {
			return new Data_List_Types.Cons(v.value0, joinSequential(v.value1));
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Tidal (line 428, column 1 - line 428, column 63): ' +
				[v.constructor.name]
		);
	};
	var intentionalSilenceForInternalUseOnly = {
		note: {
			sampleFoT: Data_Either.Right.create(
				WAGSI_Plumbing_Samples.intentionalSilenceForInternalUseOnly__Sample
			),
			rateFoT: Data_Function['const'](1.0),
			forward: true,
			volumeFoT: Data_Function['const'](1.0),
			bufferOffsetFoT: Data_Function['const'](0.0),
		},
		bigStartsAt: 0.0,
		littleStartsAt: 0.0,
		duration: 0.259253,
		elementsInCycle: 1,
		nCycles: 1,
		positionInCycle: 0,
		currentCycle: 0,
		bigCycleDuration: 0.259253,
		littleCycleDuration: 0.259253,
		tag: Data_Maybe.Nothing.value,
	};
	var hello = WAGS_Create_Optionals.input({
		reflectSymbol: function () {
			return 'voice';
		},
	})(Type_Proxy['Proxy'].value);
	var goodbye = function (v) {
		return {
			output: v,
		};
	};
	var getWeight = function (v) {
		if (v instanceof WAGSI_Plumbing_Cycle.Branching) {
			return v.value0.env.weight;
		}
		if (v instanceof WAGSI_Plumbing_Cycle.Simultaneous) {
			return v.value0.env.weight;
		}
		if (v instanceof WAGSI_Plumbing_Cycle.Internal) {
			return v.value0.env.weight;
		}
		if (v instanceof WAGSI_Plumbing_Cycle.SingleNote) {
			return v.value0.env.weight;
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Tidal (line 477, column 1 - line 477, column 41): ' +
				[v.constructor.name]
		);
	};
	var fx = function (dictRowToList) {
		return function (dictCreate) {
			return function (dictSubgraphIsRenderable) {
				return function (dictNodesCanBeTumultuous) {
					return function (scene) {
						return WAGS_Tumult_Make.tumultuously(
							Data_Typelevel_Num_Sets.posD1
						)()(dictCreate)()()(
							Data_Vec.cons(
								Data_Typelevel_Num_Ops.typelevelSucc(
									Data_Typelevel_Num_Sets.posD1
								)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(
									Data_Typelevel_Num_Ops.divMod10D1D0
								)
							)(scene)(Data_Vec.empty)
						);
					};
				};
			};
		};
	};
	var flattenScore = function (l) {
		var ll = Data_List_NonEmpty.length(l);
		var flattened = Control_Bind.join(Data_List_Types.bindNonEmptyList)(
			Data_FunctorWithIndex.mapWithIndex(
				Data_List_Types.functorWithIndexNonEmptyList
			)(function (ii) {
				return Data_FunctorWithIndex.mapWithIndex(
					Data_List_Types.functorWithIndexNonEmptyList
				)(function (jj) {
					return function (v) {
						return {
							note: v.note,
							duration: v.duration,
							bigStartsAt: v.startsAt + v.cycleDuration * Data_Int.toNumber(ii),
							currentCycle: ii,
							elementsInCycle: Data_List_NonEmpty.length(
								Data_List_NonEmpty.head(l)
							),
							nCycles: Data_List_NonEmpty.length(l),
							positionInCycle: jj,
							littleStartsAt: v.startsAt,
							littleCycleDuration: v.cycleDuration,
							bigCycleDuration: v.cycleDuration * Data_Int.toNumber(ll),
							tag: v.tag,
						};
					};
				});
			})(l)
		);
		return flattened;
	};
	var flatMap = function (v) {
		if (v.value1 instanceof Data_List_Types.Nil) {
			return v.value0;
		}
		if (v.value1 instanceof Data_List_Types.Cons) {
			return Control_Bind.join(Data_List_Types.bindNonEmptyList)(
				Data_Functor.map(Data_List_Types.functorNonEmptyList)(function (
					a$prime
				) {
					return Data_Functor.map(Data_List_Types.functorNonEmptyList)(
						function (b$prime) {
							return Data_Semigroup.append(
								Data_List_Types.semigroupNonEmptyList
							)(a$prime)(b$prime);
						}
					)(
						flatMap(
							Data_Newtype.wrap()(
								new Data_NonEmpty.NonEmpty(v.value1.value0, v.value1.value1)
							)
						)
					);
				})(v.value0)
			);
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Tidal (line 473, column 1 - line 473, column 167): ' +
				[v.constructor.name]
		);
	};
	var cycleToSequence = function (v) {
		var seq = function (state) {
			return function (nel) {
				var allWeights = Data_Foldable.foldl(
					Data_List_Types.foldableNonEmptyList
				)(Data_Semiring.add(Data_Semiring.semiringNumber))(0.0)(
					Data_Functor.map(Data_List_Types.functorNonEmptyList)(getWeight)(nel)
				);
				var withStateInfo = Control_Monad_State.evalState(
					Data_Traversable.traverse(Data_List_Types.traversableNonEmptyList)(
						Control_Monad_State_Trans.applicativeStateT(
							Data_Identity.monadIdentity
						)
					)(function (vv) {
						return Control_Bind.bind(
							Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity)
						)(
							Control_Monad_State_Class.get(
								Control_Monad_State_Trans.monadStateStateT(
									Data_Identity.monadIdentity
								)
							)
						)(function (ii) {
							var wt = getWeight(vv);
							return Control_Bind.discard(Control_Bind.discardUnit)(
								Control_Monad_State_Trans.bindStateT(
									Data_Identity.monadIdentity
								)
							)(
								Control_Monad_State_Class.put(
									Control_Monad_State_Trans.monadStateStateT(
										Data_Identity.monadIdentity
									)
								)(ii + wt)
							)(function () {
								return Control_Applicative.pure(
									Control_Monad_State_Trans.applicativeStateT(
										Data_Identity.monadIdentity
									)
								)({
									currentSubdivision:
										(state.currentSubdivision * wt) / allWeights,
									currentOffset:
										state.currentOffset +
										(state.currentSubdivision * ii) / allWeights,
									vv: vv,
								});
							});
						});
					})(nel)
				)(0.0);
				return flatMap(
					Data_Functor.map(Data_List_Types.functorNonEmptyList)(function (v1) {
						return go({
							currentSubdivision: v1.currentSubdivision,
							currentOffset: v1.currentOffset,
						})(v1.vv);
					})(withStateInfo)
				);
			};
		};
		var go = function (state) {
			return function (v1) {
				if (v1 instanceof WAGSI_Plumbing_Cycle.Branching) {
					return Control_Bind.join(Data_List_Types.bindNonEmptyList)(
						Data_Functor.map(Data_List_Types.functorNonEmptyList)(go(state))(
							v1.value0.nel
						)
					);
				}
				if (v1 instanceof WAGSI_Plumbing_Cycle.Simultaneous) {
					return Data_Functor.map(Data_List_Types.functorNonEmptyList)(
						Data_List_NonEmpty.sortBy(
							Data_Function.on(Data_Ord.compare(Data_Ord.ordNumber))(
								(function () {
									var $428 = Data_Newtype.unwrap();
									return function ($429) {
										return (function (v2) {
											return v2.startsAt;
										})($428($429));
									};
								})()
							)
						)
					)(
						flatMap(
							Data_Functor.map(Data_List_Types.functorNonEmptyList)(go(state))(
								v1.value0.nel
							)
						)
					);
				}
				if (v1 instanceof WAGSI_Plumbing_Cycle.Internal) {
					return seq(state)(v1.value0.nel);
				}
				if (v1 instanceof WAGSI_Plumbing_Cycle.SingleNote) {
					return Control_Applicative.pure(
						Data_List_Types.applicativeNonEmptyList
					)(
						Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)({
							duration: state.currentSubdivision,
							startsAt: state.currentOffset,
							note: v1.value0.val,
							cycleDuration: v,
							tag: v1.value0.env.tag,
						})
					);
				}
				throw new Error(
					'Failed pattern match at WAGSI.Plumbing.Tidal (line 546, column 3 - line 546, column 59): ' +
						[state.constructor.name, v1.constructor.name]
				);
			};
		};
		return go({
			currentSubdivision: v,
			currentOffset: 0.0,
		});
	};
	var calm = fx()(
		WAGS_Create.createAll(
			WAGS_Create.createInternalAll()(
				WAGS_Create.createStepRLCons({
					reflectSymbol: function () {
						return 'output';
					},
				})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
					WAGS_Create.createInput({
						reflectSymbol: function () {
							return 'output';
						},
					})({
						reflectSymbol: function () {
							return 'voice';
						},
					})()()
				)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil)
			)(
				WAGS_Create.connectAfterCreateCons()()()()()()(
					WAGS_Create.connectEdgesToNodeNil
				)(WAGS_Create.connectAfterCreateNil)(WAGS_Create.connectAfterCreateNil)
			)
		)
	)()()(goodbye(hello));
	var plainly = function ($430) {
		return WAGSI_Plumbing_Types.Voice(
			(function (v) {
				return {
					globals: {
						gain: Data_Function['const'](1.0),
						fx: Data_Function['const'](calm),
					},
					next: v,
				};
			})($430)
		);
	};
	var asScore = function (force) {
		return function (flattened) {
			var go = function (currentCount) {
				return function (prevCycleEnded) {
					return function (v) {
						var st = prevCycleEnded + v.value0.bigStartsAt;
						return Control_Comonad_Cofree.mkCofree({
							startsAfter: st - currentCount,
							rest: {
								sampleFoT: Data_Newtype.unwrap()(v.value0.note).sampleFoT,
								forward: Data_Newtype.unwrap()(v.value0.note).forward,
								cycleStartsAt: prevCycleEnded,
								rateFoT: Data_Newtype.unwrap()(v.value0.note).rateFoT,
								bufferOffsetFoT: Data_Newtype.unwrap()(v.value0.note)
									.bufferOffsetFoT,
								volumeFoT: Data_Newtype.unwrap()(v.value0.note).volumeFoT,
								bigCycleDuration: v.value0.bigCycleDuration,
								littleCycleDuration: v.value0.littleCycleDuration,
								currentCycle: v.value0.currentCycle,
								bigStartsAt: v.value0.bigStartsAt,
								littleStartsAt: v.value0.littleStartsAt,
								duration: v.value0.duration,
							},
						})(function (v1) {
							if (v.value1 instanceof Data_List_Types.Nil) {
								return v1.input.next.func({
									currentCount: st,
									prevCycleEnded: prevCycleEnded + v.value0.bigCycleDuration,
									time: v1.time,
									headroomInSeconds: v1.headroomInSeconds,
								});
							}
							if (v.value1 instanceof Data_List_Types.Cons) {
								var $232 =
									v1.input.next.force &&
									v.value0.positionInCycle ===
										((v.value0.elementsInCycle - 1) | 0);
								if ($232) {
									return v1.input.next.func({
										currentCount: st,
										prevCycleEnded:
											prevCycleEnded +
											v.value0.littleCycleDuration *
												Data_Int.toNumber((v.value0.currentCycle + 1) | 0),
										time: v1.time,
										headroomInSeconds: v1.headroomInSeconds,
									});
								}
								return go(st)(prevCycleEnded)(
									new Data_NonEmpty.NonEmpty(v.value1.value0, v.value1.value1)
								);
							}
							throw new Error(
								'Failed pattern match at WAGSI.Plumbing.Tidal (line 617, column 11 - line 631, column 66): ' +
									[v.value1.constructor.name]
							);
						});
					};
				};
			};
			var scoreInput = function (ccPce) {
				return go(ccPce.currentCount)(ccPce.prevCycleEnded)(flattened);
			};
			return {
				force: force,
				samples: Data_Set.fromFoldable(Data_List_Types.foldableList)(
					WAGSI_Plumbing_Types.sampleOrd
				)(
					Data_Compactable.compact(Data_Compactable.compactableList)(
						Data_List_NonEmpty.toList(
							Data_Functor.map(Data_List_Types.functorNonEmptyList)(
								(function () {
									var $434 = Data_Newtype.unwrap();
									var $435 = Data_Newtype.unwrap();
									return function ($436) {
										return Data_Either.hush(
											(function (v) {
												return v.sampleFoT;
											})(
												$434(
													(function (v) {
														return v.note;
													})($435($436))
												)
											)
										);
									};
								})()
							)(flattened)
						)
					)
				),
				func: scoreInput,
			};
		};
	};
	var openVoice = {
		globals: {
			gain: Data_Function['const'](0.0),
			fx: Data_Function['const'](calm),
		},
		next: asScore(false)(
			Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(
				intentionalSilenceForInternalUseOnly
			)
		),
	};
	var openFuture = WAGSI_Plumbing_Types.TheFuture(
		Record.union()(
			Heterogeneous_Mapping.hmap(
				Heterogeneous_Mapping.hmapRecord()(
					Heterogeneous_Mapping.mapRecordWithIndexCons({
						reflectSymbol: function () {
							return 'earth';
						},
					})(
						Heterogeneous_Mapping.constMapping(
							Heterogeneous_Mapping.mappingFunction
						)
					)(
						Heterogeneous_Mapping.mapRecordWithIndexCons({
							reflectSymbol: function () {
								return 'fire';
							},
						})(
							Heterogeneous_Mapping.constMapping(
								Heterogeneous_Mapping.mappingFunction
							)
						)(
							Heterogeneous_Mapping.mapRecordWithIndexCons({
								reflectSymbol: function () {
									return 'wind';
								},
							})(
								Heterogeneous_Mapping.constMapping(
									Heterogeneous_Mapping.mappingFunction
								)
							)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
						)()()
					)()()
				)
			)(function (v) {
				return openVoice;
			})(
				Data_Monoid.mempty(
					Data_Monoid.monoidRecord()(
						Data_Monoid.monoidRecordCons({
							reflectSymbol: function () {
								return 'earth';
							},
						})(Data_Monoid.monoidUnit)()(
							Data_Monoid.monoidRecordCons({
								reflectSymbol: function () {
									return 'fire';
								},
							})(Data_Monoid.monoidUnit)()(
								Data_Monoid.monoidRecordCons({
									reflectSymbol: function () {
										return 'wind';
									},
								})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
							)
						)
					)
				)
			)
		)(
			Record.union()(
				Heterogeneous_Mapping.hmap(
					Heterogeneous_Mapping.hmapRecord()(
						Heterogeneous_Mapping.mapRecordWithIndexCons({
							reflectSymbol: function () {
								return 'air';
							},
						})(
							Heterogeneous_Mapping.constMapping(
								Heterogeneous_Mapping.mappingFunction
							)
						)(
							Heterogeneous_Mapping.mapRecordWithIndexCons({
								reflectSymbol: function () {
									return 'heart';
								},
							})(
								Heterogeneous_Mapping.constMapping(
									Heterogeneous_Mapping.mappingFunction
								)
							)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
						)()()
					)
				)(function (v) {
					return Data_Maybe.Nothing.value;
				})(
					Data_Monoid.mempty(
						Data_Monoid.monoidRecord()(
							Data_Monoid.monoidRecordCons({
								reflectSymbol: function () {
									return 'air';
								},
							})(Data_Monoid.monoidUnit)()(
								Data_Monoid.monoidRecordCons({
									reflectSymbol: function () {
										return 'heart';
									},
								})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
							)
						)
					)
				)
			)({
				title: 'wagsi @ tidal',
				sounds: Data_Map_Internal.empty,
				preload: [],
			})
		)
	);
	var openVoices = Heterogeneous_Mapping.hmap(
		Heterogeneous_Mapping.hmapRecord()(
			Heterogeneous_Mapping.mapRecordWithIndexCons({
				reflectSymbol: function () {
					return 'earth';
				},
			})(
				Heterogeneous_Mapping.constMapping(
					Heterogeneous_Mapping.mappingFunction
				)
			)(
				Heterogeneous_Mapping.mapRecordWithIndexCons({
					reflectSymbol: function () {
						return 'fire';
					},
				})(
					Heterogeneous_Mapping.constMapping(
						Heterogeneous_Mapping.mappingFunction
					)
				)(
					Heterogeneous_Mapping.mapRecordWithIndexCons({
						reflectSymbol: function () {
							return 'wind';
						},
					})(
						Heterogeneous_Mapping.constMapping(
							Heterogeneous_Mapping.mappingFunction
						)
					)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
				)()()
			)()()
		)
	)(function (v) {
		return Data_Function['const'](openVoice);
	})(
		Data_Monoid.mempty(
			Data_Monoid.monoidRecord()(
				Data_Monoid.monoidRecordCons({
					reflectSymbol: function () {
						return 'earth';
					},
				})(Data_Monoid.monoidUnit)()(
					Data_Monoid.monoidRecordCons({
						reflectSymbol: function () {
							return 'fire';
						},
					})(Data_Monoid.monoidUnit)()(
						Data_Monoid.monoidRecordCons({
							reflectSymbol: function () {
								return 'wind';
							},
						})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
					)
				)
			)
		)
	);
	var make = function (dictUnion) {
		return function (dictNub) {
			return function (cl) {
				return function (rr) {
					var z = Record.merge()()(rr)(
						Record.union()(openVoices)(
							Record.union()(openDrones)({
								title: 'wagsi @ tidal',
								preload: [],
								sounds: Data_Map_Internal.empty,
							})
						)
					);
					return WAGSI_Plumbing_Types.TheFuture(
						Record.union()(
							Heterogeneous_Mapping.hmapWithIndex(
								Heterogeneous_Mapping.hmapWithIndexRecord()(
									Heterogeneous_Mapping.mapRecordWithIndexCons({
										reflectSymbol: function () {
											return 'earth';
										},
									})(
										WAGSI_Plumbing_Types.zipProps({
											reflectSymbol: function () {
												return 'earth';
											},
										})()
									)(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'fire';
											},
										})(
											WAGSI_Plumbing_Types.zipProps({
												reflectSymbol: function () {
													return 'fire';
												},
											})()
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'wind';
												},
											})(
												WAGSI_Plumbing_Types.zipProps({
													reflectSymbol: function () {
														return 'wind';
													},
												})()
											)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
										)()()
									)()()
								)
							)(z)(
								Heterogeneous_Mapping.hmap(
									Heterogeneous_Mapping.hmapRecord()(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'earth';
											},
										})(
											Heterogeneous_Mapping.constMapping(
												Heterogeneous_Mapping.mappingFunction
											)
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'fire';
												},
											})(
												Heterogeneous_Mapping.constMapping(
													Heterogeneous_Mapping.mappingFunction
												)
											)(
												Heterogeneous_Mapping.mapRecordWithIndexCons({
													reflectSymbol: function () {
														return 'wind';
													},
												})(
													Heterogeneous_Mapping.constMapping(
														Heterogeneous_Mapping.mappingFunction
													)
												)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
											)()()
										)()()
									)
								)(function (v) {
									return Data_Newtype.wrap()(cl);
								})({
									earth: z.earth,
									wind: z.wind,
									fire: z.fire,
								})
							)
						)({
							air: z.air,
							heart: z.heart,
							title: z.title,
							sounds: z.sounds,
							preload: z.preload,
						})
					);
				};
			};
		};
	};
	var afterMatterP = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
		Text_Parsing_StringParser_Combinators.optionMaybe(
			Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
				Data_Functor.map(Text_Parsing_StringParser.functorParser)(
					(function () {
						var $461 = Data_Array.fromFoldable(Data_List_Types.foldableList);
						return function ($462) {
							return Data_Int.fromString(
								Data_String_CodeUnits.fromCharArray($461($462))
							);
						};
					})()
				)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						Text_Parsing_StringParser_CodeUnits['char']('*')
					)(
						Text_Parsing_StringParser_Combinators.many(
							Text_Parsing_StringParser_CodeUnits.anyDigit
						)
					)
				)
			)(
				Data_Maybe.maybe(Text_Parsing_StringParser.fail('Could not parse int'))(
					function (v) {
						var v1 = Data_List_NonEmpty.fromList(
							Data_Unfoldable.replicate(Data_List_Types.unfoldableList)(v)(
								Data_Unit.unit
							)
						);
						if (v1 instanceof Data_Maybe.Just) {
							return Control_Applicative.pure(
								Text_Parsing_StringParser.applicativeParser
							)(v1.value0);
						}
						if (v1 instanceof Data_Maybe.Nothing) {
							return Text_Parsing_StringParser.fail('Number must be positive');
						}
						throw new Error(
							'Failed pattern match at WAGSI.Plumbing.Tidal (line 355, column 19 - line 357, column 56): ' +
								[v1.constructor.name]
						);
					}
				)
			)
		)
	)(function (asInternal) {
		return Control_Applicative.pure(
			Text_Parsing_StringParser.applicativeParser
		)({
			asInternal: asInternal,
		});
	});
	var singleSampleP = Control_Bind.discard(Control_Bind.discardUnit)(
		Text_Parsing_StringParser.bindParser
	)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
		return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(sampleP)(
			function (sample) {
				return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
					afterMatterP
				)(function (afterMatter) {
					return Control_Bind.discard(Control_Bind.discardUnit)(
						Text_Parsing_StringParser.bindParser
					)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
						return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
							tagP
						)(function (v) {
							return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
								weightP
							)(function (weight) {
								return Control_Applicative.pure(
									Text_Parsing_StringParser.applicativeParser
								)(
									(function () {
										if (afterMatter.asInternal instanceof Data_Maybe.Nothing) {
											return new WAGSI_Plumbing_Types.ISingleNote({
												env: {
													weight: weight,
													tag: v.tag,
												},
												val: sample,
											});
										}
										if (afterMatter.asInternal instanceof Data_Maybe.Just) {
											return new WAGSI_Plumbing_Types.IInternal({
												env: {
													weight: weight,
													tag: v.tag,
												},
												nel: Data_Functor.map(
													Data_List_Types.functorNonEmptyList
												)(
													Data_Function['const'](
														new WAGSI_Plumbing_Types.ISingleNote({
															env: {
																weight: 1.0,
																tag: Data_Maybe.Nothing.value,
															},
															val: sample,
														})
													)
												)(afterMatter.asInternal.value0),
											});
										}
										throw new Error(
											'Failed pattern match at WAGSI.Plumbing.Tidal (line 449, column 10 - line 451, column 145): ' +
												[afterMatter.asInternal.constructor.name]
										);
									})()
								);
							});
						});
					});
				});
			}
		);
	});
	var simultaneouscyclePInternal = function (v) {
		var reducedP = Control_Alt.alt(Text_Parsing_StringParser.altParser)(
			Control_Alt.alt(Text_Parsing_StringParser.altParser)(
				Control_Alt.alt(Text_Parsing_StringParser.altParser)(
					Control_Alt.alt(Text_Parsing_StringParser.altParser)(
						Text_Parsing_StringParser['try'](branchingcyclePInternal)
					)(Text_Parsing_StringParser['try'](sequentialcyclePInternal))
				)(Text_Parsing_StringParser['try'](internalcyclePInternal))
			)(Text_Parsing_StringParser['try'](singleSampleP))
		)(Text_Parsing_StringParser.fail('Could not parse cycle'));
		return Data_Functor.map(Text_Parsing_StringParser.functorParser)(function (
			$463
		) {
			return WAGSI_Plumbing_Types.ISimultaneous.create(
				(function (v1) {
					return {
						env: {
							weight: 1.0,
							tag: Data_Maybe.Nothing.value,
						},
						nel: v1,
					};
				})($463)
			);
		})(
			Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
				Text_Parsing_StringParser_Combinators.sepBy(
					Data_Functor.map(Text_Parsing_StringParser.functorParser)(
						(function () {
							var $464 = Data_Array.fromFoldable(Data_List_Types.foldableList);
							return function ($465) {
								return Data_String_CodeUnits.fromCharArray($464($465));
							};
						})()
					)(
						Text_Parsing_StringParser_Combinators.many(
							Text_Parsing_StringParser_CodeUnits.satisfy(
								(function () {
									var $466 = Data_HeytingAlgebra.not(
										Data_HeytingAlgebra.heytingAlgebraBoolean
									);
									var $467 = Data_Eq.eq(Data_Eq.eqChar)(',');
									return function ($468) {
										return $466($467($468));
									};
								})()
							)
						)
					)
				)(Text_Parsing_StringParser_CodeUnits.string(','))
			)(function (sep) {
				if (sep instanceof Data_List_Types.Nil) {
					return Text_Parsing_StringParser.fail('Lacks comma');
				}
				if (
					sep instanceof Data_List_Types.Cons &&
					sep.value1 instanceof Data_List_Types.Nil
				) {
					return Text_Parsing_StringParser.fail('Lacks comma');
				}
				if (
					sep instanceof Data_List_Types.Cons &&
					sep.value1 instanceof Data_List_Types.Cons
				) {
					var v1 = Data_Traversable.traverse(
						Data_List_Types.traversableNonEmptyList
					)(Data_Either.applicativeEither)(
						Text_Parsing_StringParser.runParser(reducedP)
					)(
						new Data_NonEmpty.NonEmpty(
							sep.value0,
							new Data_List_Types.Cons(sep.value1.value0, sep.value1.value1)
						)
					);
					if (v1 instanceof Data_Either.Left) {
						return Text_Parsing_StringParser.fail(
							Data_Show.show(
								Data_Show.showRecord()(
									Data_Show.showRecordFieldsCons({
										reflectSymbol: function () {
											return 'error';
										},
									})(
										Data_Show.showRecordFieldsCons({
											reflectSymbol: function () {
												return 'pos';
											},
										})(Data_Show.showRecordFieldsNil)(Data_Show.showInt)
									)(Data_Show.showString)
								)
							)(v1.value0)
						);
					}
					if (v1 instanceof Data_Either.Right) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(v1.value0);
					}
					throw new Error(
						'Failed pattern match at WAGSI.Plumbing.Tidal (line 418, column 23 - line 420, column 26): ' +
							[v1.constructor.name]
					);
				}
				throw new Error(
					'Failed pattern match at WAGSI.Plumbing.Tidal (line 415, column 3 - line 420, column 26): ' +
						[sep.constructor.name]
				);
			})
		);
	};
	var sequentialcyclePInternal = Data_Functor.map(
		Text_Parsing_StringParser.functorParser
	)(function ($469) {
		return WAGSI_Plumbing_Types.ISequential.create(
			(function (v) {
				return {
					env: {
						weight: 1.0,
						tag: Data_Maybe.Nothing.value,
					},
					nel: v,
				};
			})($469)
		);
	})(
		Control_Bind.discard(Control_Bind.discardUnit)(
			Text_Parsing_StringParser.bindParser
		)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
			return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
				Control_Alt.alt(Text_Parsing_StringParser.altParser)(
					Text_Parsing_StringParser['try'](internalcyclePInternal)
				)(singleSampleP)
			)(function (leadsWith) {
				return Control_Bind.discard(Control_Bind.discardUnit)(
					Text_Parsing_StringParser.bindParser
				)(Text_Parsing_StringParser_CodeUnits.skipSpaces)(function () {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						Data_Functor.map(Text_Parsing_StringParser.functorParser)(
							joinSequential
						)(
							Text_Parsing_StringParser_Combinators.many(
								cyclePInternal(Data_Unit.unit)
							)
						)
					)(function (rest) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(new Data_NonEmpty.NonEmpty(leadsWith, rest));
					});
				});
			});
		})
	);
	var internalcyclePInternal = Data_Functor.map(
		Text_Parsing_StringParser.functorParser
	)(WAGSI_Plumbing_Types.IInternal.create)(
		Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
			Text_Parsing_StringParser_Combinators.between(
				Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						Text_Parsing_StringParser_CodeUnits.skipSpaces
					)(Text_Parsing_StringParser_CodeUnits['char']('['))
				)(Text_Parsing_StringParser_CodeUnits.skipSpaces)
			)(
				Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						Text_Parsing_StringParser_CodeUnits.skipSpaces
					)(Text_Parsing_StringParser_CodeUnits['char'](']'))
				)(Text_Parsing_StringParser_CodeUnits.skipSpaces)
			)(
				Control_Bind.discard(Control_Bind.discardUnit)(
					Text_Parsing_StringParser.bindParser
				)(
					Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(
						Data_Unit.unit
					)
				)(function () {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						cyclePInternal(Data_Unit.unit)
					)(function (cyc) {
						if (cyc instanceof WAGSI_Plumbing_Types.ISequential) {
							return Control_Applicative.pure(
								Text_Parsing_StringParser.applicativeParser
							)(cyc.value0.nel);
						}
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(
							Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(
								cyc
							)
						);
					});
				})
			)
		)(function (nel) {
			return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(tagP)(
				function (v) {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						weightP
					)(function (weight) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)({
							nel: nel,
							env: {
								weight: weight,
								tag: v.tag,
							},
						});
					});
				}
			);
		})
	);
	var cyclePInternal = function (v) {
		return Control_Alt.alt(Text_Parsing_StringParser.altParser)(
			Control_Alt.alt(Text_Parsing_StringParser.altParser)(
				Control_Alt.alt(Text_Parsing_StringParser.altParser)(
					Control_Alt.alt(Text_Parsing_StringParser.altParser)(
						Text_Parsing_StringParser['try'](branchingcyclePInternal)
					)(
						Text_Parsing_StringParser['try'](
							simultaneouscyclePInternal(Data_Unit.unit)
						)
					)
				)(Text_Parsing_StringParser['try'](sequentialcyclePInternal))
			)(Text_Parsing_StringParser['try'](singleSampleP))
		)(Text_Parsing_StringParser.fail('Could not parse cycle'));
	};
	var branchingcyclePInternal = Data_Functor.map(
		Text_Parsing_StringParser.functorParser
	)(WAGSI_Plumbing_Types.IBranching.create)(
		Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
			Text_Parsing_StringParser_Combinators.between(
				Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						Text_Parsing_StringParser_CodeUnits.skipSpaces
					)(Text_Parsing_StringParser_CodeUnits['char']('<'))
				)(Text_Parsing_StringParser_CodeUnits.skipSpaces)
			)(
				Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
					Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(
						Text_Parsing_StringParser_CodeUnits.skipSpaces
					)(Text_Parsing_StringParser_CodeUnits['char']('>'))
				)(Text_Parsing_StringParser_CodeUnits.skipSpaces)
			)(
				Control_Bind.discard(Control_Bind.discardUnit)(
					Text_Parsing_StringParser.bindParser
				)(
					Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(
						Data_Unit.unit
					)
				)(function () {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						cyclePInternal(Data_Unit.unit)
					)(function (cyc) {
						if (cyc instanceof WAGSI_Plumbing_Types.ISequential) {
							return Control_Applicative.pure(
								Text_Parsing_StringParser.applicativeParser
							)(cyc.value0.nel);
						}
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)(
							Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(
								cyc
							)
						);
					});
				})
			)
		)(function (nel) {
			return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(tagP)(
				function (v) {
					return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(
						weightP
					)(function (weight) {
						return Control_Applicative.pure(
							Text_Parsing_StringParser.applicativeParser
						)({
							nel: nel,
							env: {
								weight: weight,
								tag: v.tag,
							},
						});
					});
				}
			);
		})
	);
	var cycleP = (function () {
		var go = function (v) {
			if (
				v instanceof WAGSI_Plumbing_Types.IBranching &&
				v.value0.nel.value1 instanceof Data_List_Types.Nil
			) {
				return go(v.value0.nel.value0);
			}
			if (
				v instanceof WAGSI_Plumbing_Types.ISimultaneous &&
				v.value0.nel.value1 instanceof Data_List_Types.Nil
			) {
				return go(v.value0.nel.value0);
			}
			if (
				v instanceof WAGSI_Plumbing_Types.ISequential &&
				v.value0.nel.value1 instanceof Data_List_Types.Nil
			) {
				return go(v.value0.nel.value0);
			}
			if (
				v instanceof WAGSI_Plumbing_Types.IInternal &&
				v.value0.nel.value1 instanceof Data_List_Types.Nil
			) {
				return go(v.value0.nel.value0);
			}
			if (v instanceof WAGSI_Plumbing_Types.IBranching) {
				return new WAGSI_Plumbing_Cycle.Branching({
					env: v.value0.env,
					nel: Data_Functor.map(Data_List_Types.functorNonEmptyList)(go)(
						v.value0.nel
					),
				});
			}
			if (v instanceof WAGSI_Plumbing_Types.ISimultaneous) {
				return new WAGSI_Plumbing_Cycle.Simultaneous({
					env: v.value0.env,
					nel: Data_Functor.map(Data_List_Types.functorNonEmptyList)(go)(
						v.value0.nel
					),
				});
			}
			if (v instanceof WAGSI_Plumbing_Types.ISequential) {
				return new WAGSI_Plumbing_Cycle.Internal({
					env: v.value0.env,
					nel: Data_Functor.map(Data_List_Types.functorNonEmptyList)(go)(
						v.value0.nel
					),
				});
			}
			if (v instanceof WAGSI_Plumbing_Types.IInternal) {
				return new WAGSI_Plumbing_Cycle.Internal({
					env: v.value0.env,
					nel: Data_Functor.map(Data_List_Types.functorNonEmptyList)(go)(
						v.value0.nel
					),
				});
			}
			if (v instanceof WAGSI_Plumbing_Types.ISingleNote) {
				return new WAGSI_Plumbing_Cycle.SingleNote(v.value0);
			}
			throw new Error(
				'Failed pattern match at WAGSI.Plumbing.Tidal (line 463, column 3 - line 463, column 58): ' +
					[v.constructor.name]
			);
		};
		return Data_Functor.map(Text_Parsing_StringParser.functorParser)(go)(
			cyclePInternal(Data_Unit.unit)
		);
	})();
	var parseInternal = function (str) {
		return function (dur) {
			return asScore(false)(
				Data_Maybe.maybe(
					Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(
						intentionalSilenceForInternalUseOnly
					)
				)(flattenScore)(
					Control_Bind.join(Data_Maybe.bindMaybe)(
						Data_Functor.map(Data_Maybe.functorMaybe)(
							(function () {
								var $473 = Data_Compactable.compact(
									Data_Compactable.compactableList
								);
								var $474 = Data_Functor.map(Data_List_Types.functorList)(
									Data_List_NonEmpty.fromList
								);
								var $475 = cycleToSequence(dur);
								return function ($476) {
									return Data_List_NonEmpty.fromList(
										$473($474(unrest($475($476))))
									);
								};
							})()
						)(
							Data_Either.hush(Text_Parsing_StringParser.runParser(cycleP)(str))
						)
					)
				)
			);
		};
	};
	var sString = {
		s: (function () {
			var $477 = Data_Functor.map(Data_Functor.functorFn)(plainly);
			return function ($478) {
				return $477(parseInternal($478));
			};
		})(),
	};
	exports['make'] = make;
	exports['s'] = s;
	exports['openFuture'] = openFuture;
	exports['asScore'] = asScore;
	exports['intentionalSilenceForInternalUseOnly'] =
		intentionalSilenceForInternalUseOnly;
	exports['sString'] = sString;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Engine'] = $PS['WAGSI.Plumbing.Engine'] || {};
	var exports = $PS['WAGSI.Plumbing.Engine'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Category = $PS['Control.Category'];
	var Control_Comonad = $PS['Control.Comonad'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Control_Comonad_Cofree_Class = $PS['Control.Comonad.Cofree.Class'];
	var Control_Semigroupoid = $PS['Control.Semigroupoid'];
	var ConvertableOptions = $PS['ConvertableOptions'];
	var Data_Bounded = $PS['Data.Bounded'];
	var Data_Either = $PS['Data.Either'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Int = $PS['Data.Int'];
	var Data_Lens_Lens_Tuple = $PS['Data.Lens.Lens.Tuple'];
	var Data_Lens_Setter = $PS['Data.Lens.Setter'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Profunctor_Strong = $PS['Data.Profunctor.Strong'];
	var Data_Traversable = $PS['Data.Traversable'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Typelevel_Num_Ops = $PS['Data.Typelevel.Num.Ops'];
	var Data_Typelevel_Num_Sets = $PS['Data.Typelevel.Num.Sets'];
	var Data_Vec = $PS['Data.Vec'];
	var Effect = $PS['Effect'];
	var Effect_Aff = $PS['Effect.Aff'];
	var Effect_Random = $PS['Effect.Random'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Event = $PS['FRP.Event'];
	var Heterogeneous_Mapping = $PS['Heterogeneous.Mapping'];
	var Random_LCG = $PS['Random.LCG'];
	var Record = $PS['Record'];
	var Record_Builder = $PS['Record.Builder'];
	var Test_QuickCheck_Arbitrary = $PS['Test.QuickCheck.Arbitrary'];
	var Test_QuickCheck_Gen = $PS['Test.QuickCheck.Gen'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGS_Change = $PS['WAGS.Change'];
	var WAGS_Connect = $PS['WAGS.Connect'];
	var WAGS_ConstructEdges = $PS['WAGS.ConstructEdges'];
	var WAGS_Control_Functions_Subgraph = $PS['WAGS.Control.Functions.Subgraph'];
	var WAGS_Create = $PS['WAGS.Create'];
	var WAGS_Create_Optionals = $PS['WAGS.Create.Optionals'];
	var WAGS_Graph_AudioUnit = $PS['WAGS.Graph.AudioUnit'];
	var WAGS_Graph_Paramable = $PS['WAGS.Graph.Paramable'];
	var WAGS_Graph_Parameter = $PS['WAGS.Graph.Parameter'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGS_Lib_BufferPool = $PS['WAGS.Lib.BufferPool'];
	var WAGS_Lib_Cofree = $PS['WAGS.Lib.Cofree'];
	var WAGS_Lib_Learn = $PS['WAGS.Lib.Learn'];
	var WAGS_Math = $PS['WAGS.Math'];
	var WAGS_Util = $PS['WAGS.Util'];
	var WAGSI_Plumbing_Download = $PS['WAGSI.Plumbing.Download'];
	var WAGSI_Plumbing_FX = $PS['WAGSI.Plumbing.FX'];
	var WAGSI_Plumbing_Tidal = $PS['WAGSI.Plumbing.Tidal'];
	var WAGSI_Plumbing_Types = $PS['WAGSI.Plumbing.Types'];
	var thePresent = function (dictLacks) {
		return function (ev) {
			return Data_Functor.map(Data_Tuple.functorTuple)(
				Data_Functor.map(Effect_Aff.functorAff)(
					Data_Lens_Setter.over(
						Data_Lens_Lens_Tuple['_1'](Data_Profunctor_Strong.strongFn)
					)(function (e) {
						return Control_Apply.apply(FRP_Event.applyEvent)(
							Data_Functor.map(FRP_Event.functorEvent)(
								Record.insert({
									reflectSymbol: function () {
										return 'theFuture';
									},
								})()()(Type_Proxy['Proxy'].value)
							)(ev)
						)(e);
					})
				)
			);
		};
	};
	var sampleF = function (sample) {
		return function (forward) {
			return function (silence) {
				var $137 = Data_Maybe.maybe(silence)(
					(function () {
						if (forward) {
							return function (v) {
								return v.buffer.forward;
							};
						}
						return function (v) {
							return v.buffer.backwards;
						};
					})()
				);
				var $138 = Data_Map_Internal.lookup(WAGSI_Plumbing_Types.sampleOrd)(
					sample
				);
				return function ($139) {
					return $137($138($139));
				};
			};
		};
	};
	var ntropi = FRP_Behavior.behavior(function (e) {
		return FRP_Event.makeEvent(function (f) {
			return FRP_Event.subscribe(e)(function (a2b) {
				return Control_Bind.bind(Effect.bindEffect)(
					Data_Functor.map(Effect.functorEffect)(a2b)(
						Effect_Random.randomInt(
							Data_Bounded.bottom(Data_Bounded.boundedInt)
						)(Data_Bounded.top(Data_Bounded.boundedInt))
					)
				)(f);
			});
		});
	});
	var makeLag = (function () {
		var go = function (old) {
			return Control_Comonad_Cofree.mkCofree(new Data_Maybe.Just(old))(go);
		};
		return Control_Comonad_Cofree.mkCofree(Data_Maybe.Nothing.value)(go);
	})();
	var interactivity = function (dictLacks) {
		return function (ev) {
			return Data_Functor.map(Data_Tuple.functorTuple)(
				Data_Functor.map(Effect_Aff.functorAff)(
					Data_Lens_Setter.over(
						Data_Lens_Lens_Tuple['_1'](Data_Profunctor_Strong.strongFn)
					)(function (e) {
						return Control_Apply.apply(FRP_Event.applyEvent)(
							Data_Functor.map(FRP_Event.functorEvent)(
								Record.insert({
									reflectSymbol: function () {
										return 'interactivity';
									},
								})()()(Type_Proxy['Proxy'].value)
							)(ev)
						)(e);
					})
				)
			);
		};
	};
	var h2v = function (dictRowToList) {
		return function (dictHomogenousToVec) {
			return WAGSI_Plumbing_Types["h2v'"](dictHomogenousToVec)(
				Type_Proxy['Proxy'].value
			);
		};
	};
	var globalSize = 5;
	var globalFF = 3.0e-2;
	var internal0 = function (dictAudioInterpret) {
		return WAGS_Control_Functions_Subgraph.loopUsingScene(
			Data_Monoid.monoidUnit
		)(dictAudioInterpret)(
			WAGS_Create.createAll(
				WAGS_Create.createInternalAll()(
					WAGS_Create.createStepRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(
						WAGS_ConstructEdges.constructEdgesNormVal()()(
							WAGS_Util.autoIncrementingInsertUnit
						)(WAGS_Util.natToSymD0)()()({
							reflectSymbol: function () {
								return 'PlayBuf_D0';
							},
						})()()
					)()()(
						WAGS_Create.createGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Paramable.paramableAudioParameter)()()
					)()(
						WAGS_Create.createStepRLCons({
							reflectSymbol: function () {
								return 'PlayBuf_D0';
							},
						})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
							WAGS_Create.createPlayBuf({
								reflectSymbol: function () {
									return 'singleton_PlayBuf_D0';
								},
							})(WAGS_Graph_Paramable.paramableAudioParameter)(
								WAGS_Graph_Paramable.onOffIzeAudioParameter
							)()()
						)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil)
					)(WAGS_Create.createStepRLNil)
				)(
					WAGS_Create.connectAfterCreateCons()()()()()()(
						WAGS_Create.connectEdgesToNodeCons(
							WAGS_Connect.connectInstance({
								reflectSymbol: function () {
									return 'singleton_PlayBuf_D0';
								},
							})({
								reflectSymbol: function () {
									return 'singleton';
								},
							})()()({
								reflectSymbol: function () {
									return 'TPlayBuf';
								},
							})({
								reflectSymbol: function () {
									return 'TGain';
								},
							})()()()()()
						)(WAGS_Create.connectEdgesToNodeNil)
					)(
						WAGS_Create.connectAfterCreateCons()()()()()()(
							WAGS_Create.connectEdgesToNodeNil
						)(WAGS_Create.connectAfterCreateNil)(
							WAGS_Create.connectAfterCreateNil
						)
					)(WAGS_Create.connectAfterCreateNil)
				)
			)
		)(
			WAGS_Change.changeAll(
				WAGS_Change.changeInternalAll()(
					WAGS_Change.changeRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(
						WAGS_ConstructEdges.constructEdgesNormVal()()(
							WAGS_Util.autoIncrementingInsertUnit
						)(WAGS_Util.natToSymD0)()()({
							reflectSymbol: function () {
								return 'PlayBuf_D0';
							},
						})()()
					)()()(
						WAGS_Change.changeGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Parameter.justMM)(
							WAGS_Graph_Paramable.paramableAudioParameter
						)()
					)(
						WAGS_Change.changeInternalAll()(
							WAGS_Change.changeRLCons({
								reflectSymbol: function () {
									return 'PlayBuf_D0';
								},
							})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
								WAGS_Change.changePlayBuf({
									reflectSymbol: function () {
										return 'singleton_PlayBuf_D0';
									},
								})(WAGS_Graph_Parameter.justMM)(WAGS_Graph_Parameter.justMM)(
									WAGS_Graph_Parameter.justMM
								)(WAGS_Graph_Paramable.onOffIzeAudioParameter)(
									WAGS_Graph_Parameter.justMM
								)(WAGS_Graph_Paramable.paramableAudioParameter)()
							)(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(
								WAGS_Change.changeRLNil
							)
						)
					)(WAGS_Change.changeRLNil)
				)
			)
		)()(function (v) {
			return function (v1) {
				if (v.buf instanceof Data_Maybe.Nothing) {
					return {
						control: {
							initialEntropies: v1.initialEntropies,
						},
						scene: {
							singleton: WAGS_Create_Optionals.gain(
								WAGS_Graph_Paramable.paramableNumber
							)(0.0)(
								WAGS_Create_Optionals.playBuf(
									WAGS_Create_Optionals.playBufCtor1(
										ConvertableOptions.convertOptionsWithDefaultsRecord(
											ConvertableOptions.convertOptionsRecord()(
												ConvertableOptions.convertRecordOptionsCons(
													ConvertableOptions.convertRecordOptionsNil
												)(WAGS_Create_Optionals.convertPlayBufOnOff)()()()({
													reflectSymbol: function () {
														return 'onOff';
													},
												})
											)
										)(ConvertableOptions.defaultsRecord()())
									)
								)({
									onOff: WAGS_Graph_AudioUnit.Off.value,
								})(v.silence)
							),
						},
					};
				}
				if (v.buf instanceof Data_Maybe.Just) {
					return Test_QuickCheck_Gen.evalGen(
						Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
							Test_QuickCheck_Arbitrary.arbitrary(
								Test_QuickCheck_Arbitrary.arbNumber
							)
						)(function (volumeEntropy) {
							return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
								Test_QuickCheck_Arbitrary.arbitrary(
									Test_QuickCheck_Arbitrary.arbNumber
								)
							)(function (rateEntropy) {
								return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
									Test_QuickCheck_Arbitrary.arbitrary(
										Test_QuickCheck_Arbitrary.arbNumber
									)
								)(function (offsetEntropy) {
									return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
										Test_QuickCheck_Arbitrary.arbitrary(
											Test_QuickCheck_Arbitrary.arbNumber
										)
									)(function (sampleEntropy) {
										return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
											(function () {
												if (v.buf.value0.starting) {
													return Control_Apply.apply(
														Test_QuickCheck_Gen.applyGen
													)(
														Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(
															Control_Apply.apply(Test_QuickCheck_Gen.applyGen)(
																Data_Functor.map(
																	Test_QuickCheck_Gen.functorGen
																)(function (v2) {
																	return function (v3) {
																		return function (v4) {
																			return function (v5) {
																				return {
																					volume: v2,
																					rate: v3,
																					sample: v4,
																					bufferOffset: v5,
																				};
																			};
																		};
																	};
																})(
																	Test_QuickCheck_Arbitrary.arbitrary(
																		Test_QuickCheck_Arbitrary.arbNumber
																	)
																)
															)(
																Test_QuickCheck_Arbitrary.arbitrary(
																	Test_QuickCheck_Arbitrary.arbNumber
																)
															)
														)(
															Test_QuickCheck_Arbitrary.arbitrary(
																Test_QuickCheck_Arbitrary.arbNumber
															)
														)
													)(
														Test_QuickCheck_Arbitrary.arbitrary(
															Test_QuickCheck_Arbitrary.arbNumber
														)
													);
												}
												return Control_Applicative.pure(
													Test_QuickCheck_Gen.applicativeGen
												)(v1.initialEntropies);
											})()
										)(function (initialEntropies) {
											var sampleTime = v.time - v.buf.value0.startTime;
											var normalizedSampleTime =
												sampleTime / v.buf.value0.rest.duration;
											var littleCycleTime =
												v.time -
												(v.buf.value0.rest.cycleStartsAt +
													Data_Int.toNumber(v.buf.value0.rest.currentCycle) *
														v.buf.value0.rest.littleCycleDuration);
											var normalizedLittleCycleTime =
												littleCycleTime / v.buf.value0.rest.littleCycleDuration;
											var bigCycleTime =
												v.time - v.buf.value0.rest.cycleStartsAt;
											var normalizedBigCycleTime =
												bigCycleTime / v.buf.value0.rest.bigCycleDuration;
											var thisIsUnsampledTime = function (
												initialEntropy$prime
											) {
												return function (entropy$prime) {
													return {
														bigCycleTime: bigCycleTime,
														littleCycleTime: littleCycleTime,
														event: v.event,
														clockTime: v.time,
														normalizedClockTime: 0.0,
														normalizedBigCycleTime: normalizedBigCycleTime,
														normalizedLittleCycleTime:
															normalizedLittleCycleTime,
														littleCycleDuration:
															v.buf.value0.rest.littleCycleDuration,
														bigCycleDuration:
															v.buf.value0.rest.bigCycleDuration,
														initialEntropy: initialEntropy$prime,
														entropy: entropy$prime,
													};
												};
											};
											var buf = sampleF(
												Data_Either.either(
													Data_Function.applyFlipped(
														thisIsUnsampledTime(initialEntropies.sample)(
															sampleEntropy
														)
													)
												)(
													Control_Category.identity(Control_Category.categoryFn)
												)(v.buf.value0.rest.sampleFoT)
											)(v.buf.value0.rest.forward)(v.silence)(v.buffers);
											var thisIsTime = function (initialEntropy$prime) {
												return function (entropy$prime) {
													return {
														sampleTime: sampleTime,
														event: v.event,
														bigCycleTime: bigCycleTime,
														littleCycleTime: littleCycleTime,
														clockTime: v.time,
														normalizedClockTime: 0.0,
														normalizedSampleTime: normalizedSampleTime,
														normalizedBigCycleTime: normalizedBigCycleTime,
														normalizedLittleCycleTime:
															normalizedLittleCycleTime,
														littleCycleDuration:
															v.buf.value0.rest.littleCycleDuration,
														bigCycleDuration:
															v.buf.value0.rest.bigCycleDuration,
														bufferDuration: WAGS_Interpret.bufferDuration(buf),
														initialEntropy: initialEntropy$prime,
														entropy: entropy$prime,
													};
												};
											};
											var vol = WAGS_Graph_Parameter.ff(globalFF)(
												Control_Applicative.pure(
													WAGS_Graph_Parameter.applicativeAudioParameter
												)(
													v.buf.value0.rest.volumeFoT(
														thisIsTime(initialEntropies.volume)(volumeEntropy)
													)
												)
											);
											return Control_Applicative.pure(
												Test_QuickCheck_Gen.applicativeGen
											)({
												control: {
													initialEntropies: initialEntropies,
												},
												scene: {
													singleton: WAGS_Create_Optionals.gain(
														WAGS_Graph_Paramable.paramableAudioParameter
													)(
														(function () {
															var $62 =
																v.time >
																v.buf.value0.startTime +
																	v.buf.value0.rest.duration;
															if ($62) {
																var cs2 = function (x0) {
																	return function (x1) {
																		return function (y1) {
																			return function (t) {
																				return function (y0) {
																					return WAGS_Math.calcSlope(x0)(y0)(
																						x1
																					)(y1)(t);
																				};
																			};
																		};
																	};
																};
																return Data_Functor.map(
																	WAGS_Graph_Parameter.functorAudioParameter
																)(
																	cs2(
																		v.buf.value0.startTime +
																			v.buf.value0.rest.duration
																	)(
																		v.buf.value0.startTime +
																			v.buf.value0.rest.duration +
																			0.25
																	)(0.0)(v.time)
																)(vol);
															}
															return vol;
														})()
													)(
														WAGS_Create_Optionals.playBuf(
															WAGS_Create_Optionals.playBufCtor1(
																ConvertableOptions.convertOptionsWithDefaultsRecord(
																	ConvertableOptions.convertOptionsRecord()(
																		ConvertableOptions.convertRecordOptionsCons(
																			ConvertableOptions.convertRecordOptionsCons(
																				ConvertableOptions.convertRecordOptionsCons(
																					ConvertableOptions.convertRecordOptionsNil
																				)(
																					WAGS_Create_Optionals.convertPlayBufPlaybackRate(
																						WAGS_Graph_Paramable.paramableAudioParameter
																					)
																				)()()()({
																					reflectSymbol: function () {
																						return 'playbackRate';
																					},
																				})
																			)(
																				WAGS_Create_Optionals.convertPlayBufAPOnOff
																			)()()()({
																				reflectSymbol: function () {
																					return 'onOff';
																				},
																			})
																		)(
																			WAGS_Create_Optionals.convertPlayBufAPBufferOffset
																		)()()()({
																			reflectSymbol: function () {
																				return 'bufferOffset';
																			},
																		})
																	)
																)(ConvertableOptions.defaultsRecord()())
															)
														)({
															onOff: WAGS_Graph_Parameter.ff(globalFF)(
																(function () {
																	if (v.buf.value0.starting) {
																		return WAGS_Graph_Parameter.ff(
																			Data_Ord.max(Data_Ord.ordNumber)(0.0)(
																				v.buf.value0.startTime - v.time
																			)
																		)(
																			Control_Applicative.pure(
																				WAGS_Graph_Parameter.applicativeAudioParameter
																			)(WAGS_Graph_AudioUnit.OffOn.value)
																		);
																	}
																	return Control_Applicative.pure(
																		WAGS_Graph_Parameter.applicativeAudioParameter
																	)(WAGS_Graph_AudioUnit.On.value);
																})()
															),
															bufferOffset: v.buf.value0.rest.bufferOffsetFoT(
																thisIsTime(initialEntropies.bufferOffset)(
																	offsetEntropy
																)
															),
															playbackRate: WAGS_Graph_Parameter.ff(globalFF)(
																Control_Applicative.pure(
																	WAGS_Graph_Parameter.applicativeAudioParameter
																)(
																	v.buf.value0.rest.rateFoT(
																		thisIsTime(initialEntropies.rate)(
																			rateEntropy
																		)
																	)
																)
															),
														})(buf)
													),
												},
											});
										});
									});
								});
							});
						})
					)({
						newSeed: Random_LCG.mkSeed(v.seed),
						size: globalSize,
					});
				}
				throw new Error(
					'Failed pattern match at WAGSI.Plumbing.Engine (line 94, column 49 - line 198, column 10): ' +
						[v.buf.constructor.name]
				);
			};
		})({
			initialEntropies: {
				volume: 0.5,
				rate: 0.5,
				bufferOffset: 0.5,
				sample: 0.5,
			},
		});
	};
	var internal1 = function (dictAudioInterpret) {
		var emptyLags = {
			timeLag: makeLag,
			volumeLag: makeLag,
		};
		return WAGS_Control_Functions_Subgraph.loopUsingScene(
			Data_Monoid.monoidUnit
		)(dictAudioInterpret)(
			WAGS_Create.createAll(
				WAGS_Create.createInternalAll()(
					WAGS_Create.createStepRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
						WAGS_Create.createGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Paramable.paramableAudioParameter)()()
					)()(
						WAGS_Create.createStepRLConsC({
							reflectSymbol: function () {
								return 'tmlt';
							},
						})()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(
							WAGS_Create.createStepRLConsB({
								reflectSymbol: function () {
									return 'voice';
								},
							})()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(
								WAGS_Create.createStepRLNil
							)(WAGS_Create.createStepRLNil)(
								WAGS_Create.createSubgraph({
									reflectSymbol: function () {
										return 'voice';
									},
								})({
									reflectSymbol: function () {
										return 'singleton';
									},
								})(Data_Typelevel_Num_Sets.posD8)()()
							)
						)(WAGS_Create.createStepRLNil)(
							WAGS_Create.createTumult({
								reflectSymbol: function () {
									return 'tmlt';
								},
							})({
								reflectSymbol: function () {
									return 'output';
								},
							})(Data_Typelevel_Num_Sets.posD1)()()
						)
					)(WAGS_Create.createStepRLNil)
				)(
					WAGS_Create.connectAfterCreateCons()()()()()()(
						WAGS_Create.connectEdgesToNodeCons(
							WAGS_Connect.connectInstance({
								reflectSymbol: function () {
									return 'tmlt';
								},
							})({
								reflectSymbol: function () {
									return 'singleton';
								},
							})()()({
								reflectSymbol: function () {
									return 'TTumult';
								},
							})({
								reflectSymbol: function () {
									return 'TGain';
								},
							})()()()()()
						)(WAGS_Create.connectEdgesToNodeNil)
					)(
						WAGS_Create.connectAfterCreateCons()()()()()()(
							WAGS_Create.connectEdgesToNodeCons(
								WAGS_Connect.connectInstance({
									reflectSymbol: function () {
										return 'voice';
									},
								})({
									reflectSymbol: function () {
										return 'tmlt';
									},
								})()()({
									reflectSymbol: function () {
										return 'TSubgraph';
									},
								})({
									reflectSymbol: function () {
										return 'TTumult';
									},
								})()()()()()
							)(WAGS_Create.connectEdgesToNodeNil)
						)(
							WAGS_Create.connectAfterCreateCons()()()()()()(
								WAGS_Create.connectEdgesToNodeNil
							)(WAGS_Create.connectAfterCreateNil)(
								WAGS_Create.connectAfterCreateNil
							)
						)(WAGS_Create.connectAfterCreateNil)
					)(WAGS_Create.connectAfterCreateNil)
				)
			)
		)(
			WAGS_Change.changeAll(
				WAGS_Change.changeInternalAll()(
					WAGS_Change.changeRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
						WAGS_Change.changeGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Parameter.justMM)(
							WAGS_Graph_Paramable.paramableAudioParameter
						)()
					)(
						WAGS_Change.changeInternalAll()(
							WAGS_Change.changeRLCons({
								reflectSymbol: function () {
									return 'tmlt';
								},
							})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
								WAGS_Change.changeTumult({
									reflectSymbol: function () {
										return 'tmlt';
									},
								})({
									reflectSymbol: function () {
										return 'output';
									},
								})(Data_Typelevel_Num_Sets.posD1)()
							)(
								WAGS_Change.changeInternalAll()(
									WAGS_Change.changeRLCons({
										reflectSymbol: function () {
											return 'voice';
										},
									})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
										WAGS_Change.changeSubgraph({
											reflectSymbol: function () {
												return 'voice';
											},
										})({
											reflectSymbol: function () {
												return 'singleton';
											},
										})(Data_Typelevel_Num_Sets.posD8)()
									)(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(
										WAGS_Change.changeRLNil
									)
								)
							)(WAGS_Change.changeRLNil)
						)
					)(WAGS_Change.changeRLNil)
				)
			)
		)()(function (v) {
			return function (v1) {
				return Test_QuickCheck_Gen.evalGen(
					Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
						Test_QuickCheck_Arbitrary.arbitrary(
							Test_QuickCheck_Arbitrary.arbNumber
						)
					)(function (volumeEntropy) {
						return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
							Test_QuickCheck_Arbitrary.arbitrary(
								Test_QuickCheck_Arbitrary.arbNumber
							)
						)(function (tumultEntropy) {
							return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
								Data_Traversable.sequence(Data_Vec.traversableVec)(
									Test_QuickCheck_Gen.applicativeGen
								)(
									Data_Vec.fill(Data_Typelevel_Num_Sets.natD8)(
										Data_Function['const'](
											Test_QuickCheck_Arbitrary.arbitrary(
												Test_QuickCheck_Arbitrary.arbInt
											)
										)
									)
								)
							)(function (seeds) {
								var thisIsTime = Data_Newtype.wrap()({
									clockTime: v.time,
									event: v.event,
									entropy: volumeEntropy,
								});
								var prevVolume = Control_Comonad.extract(
									Control_Comonad_Cofree.comonadCofree(Data_Functor.functorFn)
								)(v1.volumeLag);
								var prevTime = Control_Comonad.extract(
									Control_Comonad_Cofree.comonadCofree(Data_Functor.functorFn)
								)(v1.timeLag);
								var volumeNow = Data_Newtype.unwrap()(v.fng.globals).gain(
									Data_Newtype.wrap()({
										timeWas: prevTime,
										timeIs: thisIsTime,
										valWas: prevVolume,
									})
								);
								return Control_Applicative.pure(
									Test_QuickCheck_Gen.applicativeGen
								)({
									control: {
										volumeLag: Control_Comonad_Cofree_Class.unwrapCofree(
											Control_Comonad_Cofree_Class.comonadCofreeCofree(
												Data_Functor.functorFn
											)
										)(v1.volumeLag)(volumeNow),
										timeLag: Control_Comonad_Cofree_Class.unwrapCofree(
											Control_Comonad_Cofree_Class.comonadCofreeCofree(
												Data_Functor.functorFn
											)
										)(v1.timeLag)(thisIsTime),
									},
									scene: {
										singleton: WAGS_Create_Optionals.gain(
											WAGS_Graph_Paramable.paramableAudioParameter
										)(
											WAGS_Graph_Parameter.ff(globalFF)(
												Control_Applicative.pure(
													WAGS_Graph_Parameter.applicativeAudioParameter
												)(volumeNow)
											)
										)({
											tmlt: WAGS_Create_Optionals.tumult(
												Data_Typelevel_Num_Sets.posD1
											)(
												Data_Newtype.unwrap()(v.fng.globals).fx(
													Data_Newtype.wrap()({
														clockTime: v.time,
														event: v.event,
														entropy: tumultEntropy,
													})
												)
											)({
												voice: WAGS_Create_Optionals.subgraph(
													Data_Typelevel_Num_Sets.posD8
												)(
													Data_Vec.zipWithE(Data_Tuple.Tuple.create)(seeds)(
														Control_Comonad.extract(
															Control_Comonad_Cofree.comonadCofree(
																Data_Functor.functorFn
															)
														)(v.fng.future)
													)
												)(function (dictAudioInterpret1) {
													return Data_Function['const'](
														Data_Function['const'](
															internal0(dictAudioInterpret1)
														)
													);
												})(
													Data_Function['const'](
														Data_Tuple.uncurry(function (v2) {
															return function (v3) {
																return {
																	time: v.time,
																	buffers: v.buffers,
																	event: v.event,
																	silence: v.silence,
																	seed: v2,
																	buf: v3,
																};
															};
														})
													)
												)({}),
											}),
										}),
									},
								});
							});
						});
					})
				)({
					newSeed: Random_LCG.mkSeed(v.fng.seed),
					size: globalSize,
				});
			};
		})(emptyLags);
	};
	var futureMaker = Heterogeneous_Mapping.hmap(
		Heterogeneous_Mapping.hmapRecord()(
			Heterogeneous_Mapping.mapRecordWithIndexCons({
				reflectSymbol: function () {
					return 'earth';
				},
			})(
				Heterogeneous_Mapping.constMapping(
					Heterogeneous_Mapping.mappingFunction
				)
			)(
				Heterogeneous_Mapping.mapRecordWithIndexCons({
					reflectSymbol: function () {
						return 'fire';
					},
				})(
					Heterogeneous_Mapping.constMapping(
						Heterogeneous_Mapping.mappingFunction
					)
				)(
					Heterogeneous_Mapping.mapRecordWithIndexCons({
						reflectSymbol: function () {
							return 'wind';
						},
					})(
						Heterogeneous_Mapping.constMapping(
							Heterogeneous_Mapping.mappingFunction
						)
					)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
				)()()
			)()()
		)
	)(function (v) {
		return function (v1) {
			return function (v2) {
				return {
					future: v1,
					globals: v2,
				};
			};
		};
	})(
		Data_Monoid.mempty(
			Data_Monoid.monoidRecord()(
				Data_Monoid.monoidRecordCons({
					reflectSymbol: function () {
						return 'earth';
					},
				})(Data_Monoid.monoidUnit)()(
					Data_Monoid.monoidRecordCons({
						reflectSymbol: function () {
							return 'fire';
						},
					})(Data_Monoid.monoidUnit)()(
						Data_Monoid.monoidRecordCons({
							reflectSymbol: function () {
								return 'wind';
							},
						})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
					)
				)
			)
		)
	);
	var emptyPool = function (dictPos) {
		return WAGS_Lib_BufferPool.makeScoredBufferPool(dictPos)({
			startsAt: 0.0,
			noteStream: function (v) {
				return Data_Functor.map(
					Control_Comonad_Cofree.functorCofree(Data_Functor.functorFn)
				)(function (v1) {
					return {
						startsAfter: v1.startsAfter,
						rest: {
							rest: Data_Function['const'](v1.rest),
							duration: Data_Function['const'](
								Data_Function['const'](
									Data_Function['const'](new Data_Maybe.Just(v1.rest.duration))
								)
							),
						},
					};
				})(
					(function (v1) {
						return v1.func;
					})(
						Data_Newtype.unwrap()(
							WAGSI_Plumbing_Tidal.asScore(false)(
								Control_Applicative.pure(
									Data_List_Types.applicativeNonEmptyList
								)(WAGSI_Plumbing_Tidal.intentionalSilenceForInternalUseOnly)
							)
						)
					)({
						currentCount: 0.0,
						prevCycleEnded: 0.0,
						time: 0.0,
						headroomInSeconds: 3.0e-2,
					})
				);
			},
		});
	};
	var droneSg = function (dictAudioInterpret) {
		var emptyLags = {
			timeLag: makeLag,
			rateLag: makeLag,
			volumeLag: makeLag,
			loopStartLag: makeLag,
			loopEndLag: makeLag,
		};
		return WAGS_Control_Functions_Subgraph.loopUsingScene(
			Data_Monoid.monoidUnit
		)(dictAudioInterpret)(
			WAGS_Create.createAll(
				WAGS_Create.createInternalAll()(
					WAGS_Create.createStepRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
						WAGS_Create.createGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Paramable.paramableAudioParameter)()()
					)()(
						WAGS_Create.createStepRLConsC({
							reflectSymbol: function () {
								return 'dronetmlt';
							},
						})()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(
							WAGS_Create.createStepRLCons({
								reflectSymbol: function () {
									return 'voice';
								},
							})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
								WAGS_Create.createLoopBuf({
									reflectSymbol: function () {
										return 'voice';
									},
								})(WAGS_Graph_Paramable.paramableAudioParameter)()(
									WAGS_Graph_Paramable.onOffIzeAudioParameter
								)()
							)()(WAGS_Create.createStepRLNil)(WAGS_Create.createStepRLNil)
						)(WAGS_Create.createStepRLNil)(
							WAGS_Create.createTumult({
								reflectSymbol: function () {
									return 'dronetmlt';
								},
							})({
								reflectSymbol: function () {
									return 'output';
								},
							})(Data_Typelevel_Num_Sets.posD1)()()
						)
					)(WAGS_Create.createStepRLNil)
				)(
					WAGS_Create.connectAfterCreateCons()()()()()()(
						WAGS_Create.connectEdgesToNodeCons(
							WAGS_Connect.connectInstance({
								reflectSymbol: function () {
									return 'dronetmlt';
								},
							})({
								reflectSymbol: function () {
									return 'singleton';
								},
							})()()({
								reflectSymbol: function () {
									return 'TTumult';
								},
							})({
								reflectSymbol: function () {
									return 'TGain';
								},
							})()()()()()
						)(WAGS_Create.connectEdgesToNodeNil)
					)(
						WAGS_Create.connectAfterCreateCons()()()()()()(
							WAGS_Create.connectEdgesToNodeCons(
								WAGS_Connect.connectInstance({
									reflectSymbol: function () {
										return 'voice';
									},
								})({
									reflectSymbol: function () {
										return 'dronetmlt';
									},
								})()()({
									reflectSymbol: function () {
										return 'TLoopBuf';
									},
								})({
									reflectSymbol: function () {
										return 'TTumult';
									},
								})()()()()()
							)(WAGS_Create.connectEdgesToNodeNil)
						)(
							WAGS_Create.connectAfterCreateCons()()()()()()(
								WAGS_Create.connectEdgesToNodeNil
							)(WAGS_Create.connectAfterCreateNil)(
								WAGS_Create.connectAfterCreateNil
							)
						)(WAGS_Create.connectAfterCreateNil)
					)(WAGS_Create.connectAfterCreateNil)
				)
			)
		)(
			WAGS_Change.changeAll(
				WAGS_Change.changeInternalAll()(
					WAGS_Change.changeRLCons({
						reflectSymbol: function () {
							return 'singleton';
						},
					})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
						WAGS_Change.changeGain({
							reflectSymbol: function () {
								return 'singleton';
							},
						})(WAGS_Graph_Parameter.justMM)(
							WAGS_Graph_Paramable.paramableAudioParameter
						)()
					)(
						WAGS_Change.changeInternalAll()(
							WAGS_Change.changeRLCons({
								reflectSymbol: function () {
									return 'dronetmlt';
								},
							})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
								WAGS_Change.changeTumult({
									reflectSymbol: function () {
										return 'dronetmlt';
									},
								})({
									reflectSymbol: function () {
										return 'output';
									},
								})(Data_Typelevel_Num_Sets.posD1)()
							)(
								WAGS_Change.changeInternalAll()(
									WAGS_Change.changeRLCons({
										reflectSymbol: function () {
											return 'voice';
										},
									})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
										WAGS_Change.changeLoopBuf({
											reflectSymbol: function () {
												return 'voice';
											},
										})(WAGS_Graph_Parameter.justMM)(
											WAGS_Graph_Parameter.justMM
										)(WAGS_Graph_Paramable.onOffIzeAudioParameter)(
											WAGS_Graph_Parameter.justMM
										)(WAGS_Graph_Parameter.justMM)(WAGS_Graph_Parameter.justMM)(
											WAGS_Graph_Paramable.paramableAudioParameter
										)()
									)(WAGS_Change.changeInternalAll()(WAGS_Change.changeRLNil))(
										WAGS_Change.changeRLNil
									)
								)
							)(WAGS_Change.changeRLNil)
						)
					)(WAGS_Change.changeRLNil)
				)
			)
		)()(function (v) {
			return function (v1) {
				return Data_Maybe["maybe'"](function (v2) {
					return {
						control: emptyLags,
						scene: {
							singleton: WAGS_Create_Optionals.gain(
								WAGS_Graph_Paramable.paramableNumber
							)(0.0)({
								dronetmlt: WAGS_Create_Optionals.tumult(
									Data_Typelevel_Num_Sets.posD1
								)(WAGSI_Plumbing_FX.calm)({
									voice: WAGS_Create_Optionals.loopBuf(
										WAGS_Create_Optionals.loopBufCtor1(
											ConvertableOptions.convertOptionsWithDefaultsRecord(
												ConvertableOptions.convertOptionsRecord()(
													ConvertableOptions.convertRecordOptionsCons(
														ConvertableOptions.convertRecordOptionsNil
													)(WAGS_Create_Optionals.convertLoopBufOnOff)()()()({
														reflectSymbol: function () {
															return 'onOff';
														},
													})
												)
											)(ConvertableOptions.defaultsRecord()())
										)
									)({
										onOff: WAGS_Graph_AudioUnit.Off.value,
									})(v.silence),
								}),
							}),
						},
					};
				})(function (v2) {
					return Test_QuickCheck_Gen.evalGen(
						Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
							Test_QuickCheck_Arbitrary.arbitrary(
								Test_QuickCheck_Arbitrary.arbNumber
							)
						)(function (volumeEntropy) {
							return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
								Test_QuickCheck_Arbitrary.arbitrary(
									Test_QuickCheck_Arbitrary.arbNumber
								)
							)(function (loopStartEntropy) {
								return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
									Test_QuickCheck_Arbitrary.arbitrary(
										Test_QuickCheck_Arbitrary.arbNumber
									)
								)(function (loopEndEntropy) {
									return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
										Test_QuickCheck_Arbitrary.arbitrary(
											Test_QuickCheck_Arbitrary.arbNumber
										)
									)(function (rateEntropy) {
										return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
											Test_QuickCheck_Arbitrary.arbitrary(
												Test_QuickCheck_Arbitrary.arbNumber
											)
										)(function (tumultEntropy) {
											var thisIsTime = function (entropy$prime) {
												return Data_Newtype.wrap()({
													clockTime: v.time,
													event: v.event,
													entropy: entropy$prime,
												});
											};
											var prevVolume = Control_Comonad.extract(
												Control_Comonad_Cofree.comonadCofree(
													Data_Functor.functorFn
												)
											)(v1.volumeLag);
											var prevTime = Control_Comonad.extract(
												Control_Comonad_Cofree.comonadCofree(
													Data_Functor.functorFn
												)
											)(v1.timeLag);
											var volumeNow = v2.volumeFoT(
												Data_Newtype.wrap()({
													timeWas: prevTime,
													timeIs: thisIsTime(volumeEntropy),
													valWas: prevVolume,
												})
											);
											var vol = WAGS_Graph_Parameter.ff(globalFF)(
												Control_Applicative.pure(
													WAGS_Graph_Parameter.applicativeAudioParameter
												)(volumeNow)
											);
											var prevRate = Control_Comonad.extract(
												Control_Comonad_Cofree.comonadCofree(
													Data_Functor.functorFn
												)
											)(v1.rateLag);
											var rateNow = v2.rateFoT(
												Data_Newtype.wrap()({
													timeWas: prevTime,
													timeIs: thisIsTime(rateEntropy),
													valWas: prevRate,
												})
											);
											var prevLoopStart = Control_Comonad.extract(
												Control_Comonad_Cofree.comonadCofree(
													Data_Functor.functorFn
												)
											)(v1.loopStartLag);
											var prevLoopEnd = Control_Comonad.extract(
												Control_Comonad_Cofree.comonadCofree(
													Data_Functor.functorFn
												)
											)(v1.loopEndLag);
											var loopStartNow = v2.loopStartFoT(
												Data_Newtype.wrap()({
													timeWas: prevTime,
													timeIs: thisIsTime(loopStartEntropy),
													valWas: prevLoopStart,
												})
											);
											var loopEndNow = v2.loopEndFoT(
												Data_Newtype.wrap()({
													timeWas: prevTime,
													timeIs: thisIsTime(loopEndEntropy),
													valWas: prevLoopEnd,
												})
											);
											var buf = sampleF(v2.sample)(v2.forward)(v.silence)(
												v.buffers
											);
											return Control_Applicative.pure(
												Test_QuickCheck_Gen.applicativeGen
											)({
												control: {
													rateLag: Control_Comonad_Cofree_Class.unwrapCofree(
														Control_Comonad_Cofree_Class.comonadCofreeCofree(
															Data_Functor.functorFn
														)
													)(v1.rateLag)(rateNow),
													volumeLag: Control_Comonad_Cofree_Class.unwrapCofree(
														Control_Comonad_Cofree_Class.comonadCofreeCofree(
															Data_Functor.functorFn
														)
													)(v1.volumeLag)(volumeNow),
													loopStartLag:
														Control_Comonad_Cofree_Class.unwrapCofree(
															Control_Comonad_Cofree_Class.comonadCofreeCofree(
																Data_Functor.functorFn
															)
														)(v1.loopStartLag)(loopStartNow),
													loopEndLag: Control_Comonad_Cofree_Class.unwrapCofree(
														Control_Comonad_Cofree_Class.comonadCofreeCofree(
															Data_Functor.functorFn
														)
													)(v1.loopEndLag)(loopEndNow),
													timeLag: Control_Comonad_Cofree_Class.unwrapCofree(
														Control_Comonad_Cofree_Class.comonadCofreeCofree(
															Data_Functor.functorFn
														)
													)(v1.timeLag)(thisIsTime(0.0)),
												},
												scene: {
													singleton: WAGS_Create_Optionals.gain(
														WAGS_Graph_Paramable.paramableAudioParameter
													)(vol)({
														dronetmlt: WAGS_Create_Optionals.tumult(
															Data_Typelevel_Num_Sets.posD1
														)(v2.tumultFoT(thisIsTime(tumultEntropy)))({
															voice: WAGS_Create_Optionals.loopBuf(
																WAGS_Create_Optionals.loopBufCtor1(
																	ConvertableOptions.convertOptionsWithDefaultsRecord(
																		ConvertableOptions.convertOptionsRecord()(
																			ConvertableOptions.convertRecordOptionsCons(
																				ConvertableOptions.convertRecordOptionsCons(
																					ConvertableOptions.convertRecordOptionsCons(
																						ConvertableOptions.convertRecordOptionsCons(
																							ConvertableOptions.convertRecordOptionsNil
																						)(
																							WAGS_Create_Optionals.convertLoopBufPlaybackRate(
																								WAGS_Graph_Paramable.paramableAudioParameter
																							)
																						)()()()({
																							reflectSymbol: function () {
																								return 'playbackRate';
																							},
																						})
																					)(
																						WAGS_Create_Optionals.convertLoopBufAPOnOff
																					)()()()({
																						reflectSymbol: function () {
																							return 'onOff';
																						},
																					})
																				)(
																					WAGS_Create_Optionals.convertLoopBufStart
																				)()()()({
																					reflectSymbol: function () {
																						return 'loopStart';
																					},
																				})
																			)(
																				WAGS_Create_Optionals.convertLoopBufEnd
																			)()()()({
																				reflectSymbol: function () {
																					return 'loopEnd';
																				},
																			})
																		)
																	)(ConvertableOptions.defaultsRecord()())
																)
															)({
																onOff: WAGS_Graph_Parameter.ff(globalFF)(
																	Control_Applicative.pure(
																		WAGS_Graph_Parameter.applicativeAudioParameter
																	)(WAGS_Graph_AudioUnit.On.value)
																),
																loopStart: loopStartNow,
																loopEnd: loopEndNow,
																playbackRate: WAGS_Graph_Parameter.ff(globalFF)(
																	Control_Applicative.pure(
																		WAGS_Graph_Parameter.applicativeAudioParameter
																	)(rateNow)
																),
															})(buf),
														}),
													}),
												},
											});
										});
									});
								});
							});
						})
					)({
						newSeed: Random_LCG.mkSeed(v.seed),
						size: globalSize,
					});
				})(v.buf);
			};
		})(emptyLags);
	};
	var delInPlace = function (dictLacks) {
		return function (dictLacks1) {
			return function (dictLacks2) {
				return function (dictLacks3) {
					return function (dictLacks4) {
						return Record_Builder.build(
							Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(
								Record_Builder['delete']({
									reflectSymbol: function () {
										return 'air';
									},
								})()()(Type_Proxy['Proxy'].value)
							)(
								Control_Semigroupoid.compose(
									Record_Builder.semigroupoidBuilder
								)(
									Record_Builder['delete']({
										reflectSymbol: function () {
											return 'heart';
										},
									})()()(Type_Proxy['Proxy'].value)
								)(
									Control_Semigroupoid.compose(
										Record_Builder.semigroupoidBuilder
									)(
										Record_Builder['delete']({
											reflectSymbol: function () {
												return 'sounds';
											},
										})()()(Type_Proxy['Proxy'].value)
									)(
										Control_Semigroupoid.compose(
											Record_Builder.semigroupoidBuilder
										)(
											Record_Builder['delete']({
												reflectSymbol: function () {
													return 'preload';
												},
											})()()(Type_Proxy['Proxy'].value)
										)(
											Record_Builder['delete']({
												reflectSymbol: function () {
													return 'title';
												},
											})()()(Type_Proxy['Proxy'].value)
										)
									)
								)
							)
						);
					};
				};
			};
		};
	};
	var addEntropy = function (dictLacks) {
		return function (v) {
			return new Data_Tuple.Tuple(
				v.value0,
				Control_Bind.bind(Effect_Aff.bindAff)(v.value1)(function (v1) {
					return Control_Applicative.pure(Effect_Aff.applicativeAff)(
						new Data_Tuple.Tuple(
							v1.value0,
							Control_Apply.apply(
								FRP_Behavior.applyABehavior(FRP_Event.functorEvent)
							)(
								Data_Functor.map(
									FRP_Behavior.functorABehavior(FRP_Event.functorEvent)
								)(
									Record.insert({
										reflectSymbol: function () {
											return 'entropy';
										},
									})()()(Type_Proxy['Proxy'].value)
								)(ntropi)
							)(v1.value1)
						)
					);
				})
			);
		};
	};
	var acc = function (dictMonoid) {
		return {
			buffers: Heterogeneous_Mapping.hmap(
				Heterogeneous_Mapping.hmapRecord()(
					Heterogeneous_Mapping.mapRecordWithIndexCons({
						reflectSymbol: function () {
							return 'earth';
						},
					})(
						Heterogeneous_Mapping.constMapping(
							Heterogeneous_Mapping.mappingFunction
						)
					)(
						Heterogeneous_Mapping.mapRecordWithIndexCons({
							reflectSymbol: function () {
								return 'fire';
							},
						})(
							Heterogeneous_Mapping.constMapping(
								Heterogeneous_Mapping.mappingFunction
							)
						)(
							Heterogeneous_Mapping.mapRecordWithIndexCons({
								reflectSymbol: function () {
									return 'wind';
								},
							})(
								Heterogeneous_Mapping.constMapping(
									Heterogeneous_Mapping.mappingFunction
								)
							)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
						)()()
					)()()
				)
			)(function (v) {
				return emptyPool(Data_Typelevel_Num_Sets.posD8);
			})(
				Data_Monoid.mempty(
					Data_Monoid.monoidRecord()(
						Data_Monoid.monoidRecordCons({
							reflectSymbol: function () {
								return 'earth';
							},
						})(Data_Monoid.monoidUnit)()(
							Data_Monoid.monoidRecordCons({
								reflectSymbol: function () {
									return 'fire';
								},
							})(Data_Monoid.monoidUnit)()(
								Data_Monoid.monoidRecordCons({
									reflectSymbol: function () {
										return 'wind';
									},
								})(Data_Monoid.monoidUnit)()(Data_Monoid.monoidRecordNil)
							)
						)
					)
				)
			),
			backToTheFuture: WAGSI_Plumbing_Tidal.openFuture,
			justInCaseTheLastEvent: {
				isFresh: false,
				value: Data_Monoid.mempty(dictMonoid),
			},
		};
	};
	var engine = function (dictMonoid) {
		return function (dmo) {
			return function (evt) {
				return function (bsc) {
					return WAGS_Lib_Learn.usingc(
						WAGS_Create.createAll(
							WAGS_Create.createInternalAll()(
								WAGS_Create.createStepRLCons({
									reflectSymbol: function () {
										return 'speaker';
									},
								})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
									WAGS_Create.createSpeaker()()
								)()(
									WAGS_Create.createStepRLCons({
										reflectSymbol: function () {
											return 'mix';
										},
									})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
										WAGS_Create.createGain({
											reflectSymbol: function () {
												return 'mix';
											},
										})(WAGS_Graph_Paramable.paramableAudioParameter)()()
									)()(
										WAGS_Create.createStepRLConsB({
											reflectSymbol: function () {
												return 'drones';
											},
										})()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(
											WAGS_Create.createStepRLNil
										)(
											WAGS_Create.createStepRLConsB({
												reflectSymbol: function () {
													return 'subs';
												},
											})()()(WAGS_ConstructEdges.constructEdgesTuple)()()()(
												WAGS_Create.createStepRLNil
											)(WAGS_Create.createStepRLNil)(
												WAGS_Create.createSubgraph({
													reflectSymbol: function () {
														return 'subs';
													},
												})({
													reflectSymbol: function () {
														return 'singleton';
													},
												})(Data_Typelevel_Num_Sets.posD3)()()
											)
										)(
											WAGS_Create.createSubgraph({
												reflectSymbol: function () {
													return 'drones';
												},
											})({
												reflectSymbol: function () {
													return 'singleton';
												},
											})(Data_Typelevel_Num_Sets.posD2)()()
										)
									)(WAGS_Create.createStepRLNil)
								)(WAGS_Create.createStepRLNil)
							)(
								WAGS_Create.connectAfterCreateCons()()()()()()(
									WAGS_Create.connectEdgesToNodeCons(
										WAGS_Connect.connectInstance({
											reflectSymbol: function () {
												return 'mix';
											},
										})({
											reflectSymbol: function () {
												return 'speaker';
											},
										})()()({
											reflectSymbol: function () {
												return 'TGain';
											},
										})({
											reflectSymbol: function () {
												return 'TSpeaker';
											},
										})()()()()()
									)(WAGS_Create.connectEdgesToNodeNil)
								)(
									WAGS_Create.connectAfterCreateCons()()()()()()(
										WAGS_Create.connectEdgesToNodeCons(
											WAGS_Connect.connectInstance({
												reflectSymbol: function () {
													return 'drones';
												},
											})({
												reflectSymbol: function () {
													return 'mix';
												},
											})()()({
												reflectSymbol: function () {
													return 'TSubgraph';
												},
											})({
												reflectSymbol: function () {
													return 'TGain';
												},
											})()()()()()
										)(
											WAGS_Create.connectEdgesToNodeCons(
												WAGS_Connect.connectInstance({
													reflectSymbol: function () {
														return 'subs';
													},
												})({
													reflectSymbol: function () {
														return 'mix';
													},
												})()()({
													reflectSymbol: function () {
														return 'TSubgraph';
													},
												})({
													reflectSymbol: function () {
														return 'TGain';
													},
												})()()()()()
											)(WAGS_Create.connectEdgesToNodeNil)
										)
									)(
										WAGS_Create.connectAfterCreateCons()()()()()()(
											WAGS_Create.connectEdgesToNodeNil
										)(WAGS_Create.connectAfterCreateNil)(
											WAGS_Create.connectAfterCreateCons()()()()()()(
												WAGS_Create.connectEdgesToNodeNil
											)(WAGS_Create.connectAfterCreateNil)(
												WAGS_Create.connectAfterCreateNil
											)
										)
									)(WAGS_Create.connectAfterCreateNil)
								)(WAGS_Create.connectAfterCreateNil)
							)
						)
					)()(
						WAGS_Change.changeAll(
							WAGS_Change.changeInternalAll()(
								WAGS_Change.changeRLCons({
									reflectSymbol: function () {
										return 'speaker';
									},
								})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
									WAGS_Change.changeSpeaker()
								)(
									WAGS_Change.changeInternalAll()(
										WAGS_Change.changeRLCons({
											reflectSymbol: function () {
												return 'mix';
											},
										})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
											WAGS_Change.changeGain({
												reflectSymbol: function () {
													return 'mix';
												},
											})(WAGS_Graph_Parameter.justMM)(
												WAGS_Graph_Paramable.paramableAudioParameter
											)()
										)(
											WAGS_Change.changeInternalAll()(
												WAGS_Change.changeRLCons({
													reflectSymbol: function () {
														return 'drones';
													},
												})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
													WAGS_Change.changeSubgraph({
														reflectSymbol: function () {
															return 'drones';
														},
													})({
														reflectSymbol: function () {
															return 'singleton';
														},
													})(Data_Typelevel_Num_Sets.posD2)()
												)(
													WAGS_Change.changeInternalAll()(
														WAGS_Change.changeRLNil
													)
												)(
													WAGS_Change.changeRLCons({
														reflectSymbol: function () {
															return 'subs';
														},
													})()()(WAGS_ConstructEdges.constructEdgesTuple)()()(
														WAGS_Change.changeSubgraph({
															reflectSymbol: function () {
																return 'subs';
															},
														})({
															reflectSymbol: function () {
																return 'singleton';
															},
														})(Data_Typelevel_Num_Sets.posD3)()
													)(
														WAGS_Change.changeInternalAll()(
															WAGS_Change.changeRLNil
														)
													)(WAGS_Change.changeRLNil)
												)
											)
										)(WAGS_Change.changeRLNil)
									)
								)(WAGS_Change.changeRLNil)
							)
						)
					)(
						(function () {
							var $140 = interactivity()(dmo);
							var $141 = thePresent()(evt);
							var $142 = WAGSI_Plumbing_Download.initialBuffers()(bsc);
							var $143 = addEntropy();
							var $144 = WAGSI_Plumbing_Download.downloadSilence();
							return function ($145) {
								return $140($141($142($143($144($145)))));
							};
						})()
					)(acc(dictMonoid))(function (v) {
						return function (control) {
							var event = Data_Maybe.maybe(control.justInCaseTheLastEvent)(
								function ($146) {
									return (function (v1) {
										return {
											isFresh: true,
											value: v1,
										};
									})(
										(function (v1) {
											return v1.interactivity;
										})($146)
									);
								}
							)(v.trigger);
							var theFuture = Data_Maybe.maybe(control.backToTheFuture)(
								function (i) {
									return i.theFuture(event);
								}
							)(v.trigger);
							var ewf = delInPlace()()()()()(Data_Newtype.unwrap()(theFuture));
							var myGlobals = Heterogeneous_Mapping.hmap(
								Heterogeneous_Mapping.hmapRecord()(
									Heterogeneous_Mapping.mapRecordWithIndexCons({
										reflectSymbol: function () {
											return 'earth';
										},
									})(
										Heterogeneous_Mapping.constMapping(
											Heterogeneous_Mapping.mappingFunction
										)
									)(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'fire';
											},
										})(
											Heterogeneous_Mapping.constMapping(
												Heterogeneous_Mapping.mappingFunction
											)
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'wind';
												},
											})(
												Heterogeneous_Mapping.constMapping(
													Heterogeneous_Mapping.mappingFunction
												)
											)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
										)()()
									)()()
								)
							)(function (v1) {
								return (function (v3) {
									return v3.globals;
								})(Data_Newtype.unwrap()(v1));
							})(ewf);
							var toActualize = Heterogeneous_Mapping.hmap(
								Heterogeneous_Mapping.hmapRecord()(
									Heterogeneous_Mapping.mapRecordWithIndexCons({
										reflectSymbol: function () {
											return 'earth';
										},
									})(
										Heterogeneous_Mapping.constMapping(
											Heterogeneous_Mapping.mappingFunction
										)
									)(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'fire';
											},
										})(
											Heterogeneous_Mapping.constMapping(
												Heterogeneous_Mapping.mappingFunction
											)
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'wind';
												},
											})(
												Heterogeneous_Mapping.constMapping(
													Heterogeneous_Mapping.mappingFunction
												)
											)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
										)()()
									)()()
								)
							)(function (v1) {
								return (function (v3) {
									return {
										time: v.time,
										headroomInSeconds: v.headroomInSeconds,
										input: v3,
									};
								})(
									(function (v3) {
										return {
											next: v3,
										};
									})(
										(function (v3) {
											return v3.next;
										})(Data_Newtype.unwrap()(v1))
									)
								);
							})(ewf);
							var actualized = Heterogeneous_Mapping.hmapWithIndex(
								Heterogeneous_Mapping.hmapWithIndexRecord()(
									Heterogeneous_Mapping.mapRecordWithIndexCons({
										reflectSymbol: function () {
											return 'earth';
										},
									})(
										WAGSI_Plumbing_Types.zipProps({
											reflectSymbol: function () {
												return 'earth';
											},
										})()
									)(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'fire';
											},
										})(
											WAGSI_Plumbing_Types.zipProps({
												reflectSymbol: function () {
													return 'fire';
												},
											})()
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'wind';
												},
											})(
												WAGSI_Plumbing_Types.zipProps({
													reflectSymbol: function () {
														return 'wind';
													},
												})()
											)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
										)()()
									)()()
								)
							)(control.buffers)(toActualize);
							var forTemplate$prime = Heterogeneous_Mapping.hmapWithIndex(
								Heterogeneous_Mapping.hmapWithIndexRecord()(
									Heterogeneous_Mapping.mapRecordWithIndexCons({
										reflectSymbol: function () {
											return 'earth';
										},
									})(
										WAGSI_Plumbing_Types.zipProps({
											reflectSymbol: function () {
												return 'earth';
											},
										})()
									)(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'fire';
											},
										})(
											WAGSI_Plumbing_Types.zipProps({
												reflectSymbol: function () {
													return 'fire';
												},
											})()
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'wind';
												},
											})(
												WAGSI_Plumbing_Types.zipProps({
													reflectSymbol: function () {
														return 'wind';
													},
												})()
											)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
										)()()
									)()()
								)
							)(
								Heterogeneous_Mapping.hmapWithIndex(
									Heterogeneous_Mapping.hmapWithIndexRecord()(
										Heterogeneous_Mapping.mapRecordWithIndexCons({
											reflectSymbol: function () {
												return 'earth';
											},
										})(
											WAGSI_Plumbing_Types.zipProps({
												reflectSymbol: function () {
													return 'earth';
												},
											})()
										)(
											Heterogeneous_Mapping.mapRecordWithIndexCons({
												reflectSymbol: function () {
													return 'fire';
												},
											})(
												WAGSI_Plumbing_Types.zipProps({
													reflectSymbol: function () {
														return 'fire';
													},
												})()
											)(
												Heterogeneous_Mapping.mapRecordWithIndexCons({
													reflectSymbol: function () {
														return 'wind';
													},
												})(
													WAGSI_Plumbing_Types.zipProps({
														reflectSymbol: function () {
															return 'wind';
														},
													})()
												)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
											)()()
										)()()
									)
								)(futureMaker)(actualized)
							)(myGlobals);
							var forTemplate = h2v()(
								WAGSI_Plumbing_Types.h2vCons({
									reflectSymbol: function () {
										return 'earth';
									},
								})()()(
									WAGSI_Plumbing_Types.h2vCons({
										reflectSymbol: function () {
											return 'fire';
										},
									})()()(
										WAGSI_Plumbing_Types.h2vCons({
											reflectSymbol: function () {
												return 'wind';
											},
										})()()(WAGSI_Plumbing_Types.h2vNil)(
											Data_Typelevel_Num_Ops.typelevelSucc(
												Data_Typelevel_Num_Sets.posD1
											)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(
												Data_Typelevel_Num_Ops.divMod10D1D0
											)
										)
									)(
										Data_Typelevel_Num_Ops.typelevelSucc(
											Data_Typelevel_Num_Sets.posD2
										)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(
											Data_Typelevel_Num_Ops.divMod10D2D0
										)
									)
								)(
									Data_Typelevel_Num_Ops.typelevelSucc(
										Data_Typelevel_Num_Sets.posD3
									)()(Data_Typelevel_Num_Ops.divMod10D2D0)()(
										Data_Typelevel_Num_Ops.divMod10D3D0
									)
								)
							)(forTemplate$prime);
							return {
								control: {
									buffers: WAGS_Lib_Cofree.tails(
										WAGS_Lib_Cofree.tailableRow(
											Heterogeneous_Mapping.hmapRecord()(
												Heterogeneous_Mapping.mapRecordWithIndexCons({
													reflectSymbol: function () {
														return 'earth';
													},
												})(
													Heterogeneous_Mapping.constMapping(
														WAGS_Lib_Cofree.tailzMapping(
															WAGS_Lib_Cofree.tailableCf(
																Control_Comonad_Cofree_Class.comonadCofreeCofree(
																	Data_Functor.functorFn
																)
															)
														)
													)
												)(
													Heterogeneous_Mapping.mapRecordWithIndexCons({
														reflectSymbol: function () {
															return 'fire';
														},
													})(
														Heterogeneous_Mapping.constMapping(
															WAGS_Lib_Cofree.tailzMapping(
																WAGS_Lib_Cofree.tailableCf(
																	Control_Comonad_Cofree_Class.comonadCofreeCofree(
																		Data_Functor.functorFn
																	)
																)
															)
														)
													)(
														Heterogeneous_Mapping.mapRecordWithIndexCons({
															reflectSymbol: function () {
																return 'wind';
															},
														})(
															Heterogeneous_Mapping.constMapping(
																WAGS_Lib_Cofree.tailzMapping(
																	WAGS_Lib_Cofree.tailableCf(
																		Control_Comonad_Cofree_Class.comonadCofreeCofree(
																			Data_Functor.functorFn
																		)
																	)
																)
															)
														)(Heterogeneous_Mapping.mapRecordWithIndexNil)()()
													)()()
												)()()
											)
										)
									)(actualized),
									backToTheFuture: theFuture,
									justInCaseTheLastEvent: event,
								},
								scene: Test_QuickCheck_Gen.evalGen(
									Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
										Data_Traversable.sequence(Data_Vec.traversableVec)(
											Test_QuickCheck_Gen.applicativeGen
										)(
											Data_Vec.fill(Data_Typelevel_Num_Sets.natD3)(
												Data_Function['const'](
													Data_Functor.map(Test_QuickCheck_Gen.functorGen)(
														function (v1) {
															return {
																seed: v1,
															};
														}
													)(
														Test_QuickCheck_Arbitrary.arbitrary(
															Test_QuickCheck_Arbitrary.arbInt
														)
													)
												)
											)
										)
									)(function (seeds) {
										return Control_Bind.bind(Test_QuickCheck_Gen.bindGen)(
											Data_Traversable.sequence(Data_Vec.traversableVec)(
												Test_QuickCheck_Gen.applicativeGen
											)(
												Data_Vec.fill(Data_Typelevel_Num_Sets.natD2)(
													Data_Function['const'](
														Test_QuickCheck_Arbitrary.arbitrary(
															Test_QuickCheck_Arbitrary.arbInt
														)
													)
												)
											)
										)(function (seedsDrone) {
											var vec = Data_Vec.zipWithE(Record.union())(forTemplate)(
												seeds
											);
											return Control_Applicative.pure(
												Test_QuickCheck_Gen.applicativeGen
											)(
												WAGS_Create_Optionals.speaker({
													mix: WAGS_Create_Optionals.gain(
														WAGS_Graph_Paramable.paramableNumber
													)(1.0)({
														subs: WAGS_Create_Optionals.subgraph(
															Data_Typelevel_Num_Sets.posD3
														)(vec)(function (dictAudioInterpret) {
															return Data_Function['const'](
																Data_Function['const'](
																	internal1(dictAudioInterpret)
																)
															);
														})(
															Data_Function['const'](function (v1) {
																return {
																	time: v.time,
																	buffers: v.world.buffers,
																	event: event,
																	silence: v.world.silence,
																	fng: v1,
																};
															})
														)({}),
														drones: WAGS_Create_Optionals.subgraph(
															Data_Typelevel_Num_Sets.posD2
														)(
															Data_Vec.zipWithE(Data_Tuple.Tuple.create)(
																seedsDrone
															)(
																Data_Vec.cons(
																	Data_Typelevel_Num_Ops.typelevelSucc(
																		Data_Typelevel_Num_Sets.posD2
																	)()(Data_Typelevel_Num_Ops.divMod10D1D0)()(
																		Data_Typelevel_Num_Ops.divMod10D2D0
																	)
																)(Data_Newtype.unwrap()(theFuture).air)(
																	Data_Vec.cons(
																		Data_Typelevel_Num_Ops.typelevelSucc(
																			Data_Typelevel_Num_Sets.posD1
																		)()(Data_Typelevel_Num_Ops.divMod10D0D0)()(
																			Data_Typelevel_Num_Ops.divMod10D1D0
																		)
																	)(Data_Newtype.unwrap()(theFuture).heart)(
																		Data_Vec.empty
																	)
																)
															)
														)(function (dictAudioInterpret) {
															return Data_Function['const'](
																Data_Function['const'](
																	droneSg(dictAudioInterpret)
																)
															);
														})(
															Data_Function['const'](
																Data_Tuple.uncurry(function (v1) {
																	return function (v2) {
																		return {
																			time: v.time,
																			buffers: v.world.buffers,
																			silence: v.world.silence,
																			event: event,
																			seed: v1,
																			buf: v2,
																		};
																	};
																})
															)
														)({}),
													}),
												})
											);
										});
									})
								)({
									newSeed: Random_LCG.mkSeed(v.world.entropy),
									size: globalSize,
								}),
							};
						};
					});
				};
			};
		};
	};
	exports['engine'] = engine;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Example'] = $PS['WAGSI.Plumbing.Example'] || {};
	var exports = $PS['WAGSI.Plumbing.Example'];
	var Data_List_Types = $PS['Data.List.Types'];
	var WAGSI_Plumbing_DemoEvent = $PS['WAGSI.Plumbing.DemoEvent'];
	var WAGSI_Plumbing_Samples = $PS['WAGSI.Plumbing.Samples'];
	var WAGSI_Plumbing_Tidal = $PS['WAGSI.Plumbing.Tidal'];
	var preload = [
		WAGSI_Plumbing_Samples.bassdm_0__Sample,
		WAGSI_Plumbing_Samples.tabla_0__Sample,
		WAGSI_Plumbing_Samples.hh_0__Sample,
	];
	var wag = function (v) {
		if (v.value instanceof Data_List_Types.Nil) {
			return WAGSI_Plumbing_Tidal.make()()(1.0)({
				earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)(' '),
				preload: preload,
			});
		}
		if (v.value instanceof Data_List_Types.Cons) {
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'Music_was_never_meant_to_be_static_or_fixed"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('bassdm'),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'Music_must_explode_with_possibilities"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('tabla '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'The_possibility_to_add_new_sounds"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('hh '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'The_possibility_to_take_a_sound_in_a_new_direction"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)(
						'bassdm '
					),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'The_possibility_to_change_a_beat"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('tabla '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'The_possibility_to_harmonize"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('hh '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'The_possibility_to_glitch_crackle_and_shimmer"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)(
						'bassdm '
					),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'The_possibility_to_shape_it_with_a_gesture"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('tabla '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'The_possibility_to_bring_listeners_to_uncharted_musical_territory"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('hh '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent[
					"DE'And_the_possibility_to_bring_them_back_again"
				]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)(
						'bassdm '
					),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'Music_must_explode_with_possibilities_2"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('tabla '),
					preload: preload,
				});
			}
			if (
				v.value.value0.value instanceof
				WAGSI_Plumbing_DemoEvent["DE'And_that's_why_we're_building_wavr"]
			) {
				return WAGSI_Plumbing_Tidal.make()()(1.0)({
					earth: WAGSI_Plumbing_Tidal.s(WAGSI_Plumbing_Tidal.sString)('hh '),
					preload: preload,
				});
			}
			throw new Error(
				'Failed pattern match at WAGSI.Plumbing.Example (line 23, column 25 - line 35, column 84): ' +
					[v.value.value0.value.constructor.name]
			);
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Example (line 21, column 17 - line 35, column 84): ' +
				[v.value.constructor.name]
		);
	};
	exports['wag'] = wag;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Util'] = $PS['WAGSI.Plumbing.Util'] || {};
	var exports = $PS['WAGSI.Plumbing.Util'];
	var Control_Alt = $PS['Control.Alt'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Comonad_Cofree = $PS['Control.Comonad.Cofree'];
	var Control_Monad_Except = $PS['Control.Monad.Except'];
	var Data_Boolean = $PS['Data.Boolean'];
	var Data_Compactable = $PS['Data.Compactable'];
	var Data_DateTime_Instant = $PS['Data.DateTime.Instant'];
	var Data_Either = $PS['Data.Either'];
	var Data_Foldable = $PS['Data.Foldable'];
	var Data_Function = $PS['Data.Function'];
	var Data_Functor = $PS['Data.Functor'];
	var Data_Lens_Record = $PS['Data.Lens.Record'];
	var Data_Lens_Setter = $PS['Data.Lens.Setter'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Maybe = $PS['Data.Maybe'];
	var Data_Newtype = $PS['Data.Newtype'];
	var Data_Ord = $PS['Data.Ord'];
	var Data_Profunctor_Strong = $PS['Data.Profunctor.Strong'];
	var Data_Semigroup = $PS['Data.Semigroup'];
	var Data_Set = $PS['Data.Set'];
	var Data_Show = $PS['Data.Show'];
	var Effect_Aff = $PS['Effect.Aff'];
	var Effect_Class = $PS['Effect.Class'];
	var Effect_Ref = $PS['Effect.Ref'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Event = $PS['FRP.Event'];
	var FRP_Event_Class = $PS['FRP.Event.Class'];
	var FRP_Event_Time = $PS['FRP.Event.Time'];
	var Foreign = $PS['Foreign'];
	var Foreign_Object = $PS['Foreign.Object'];
	var Simple_JSON = $PS['Simple.JSON'];
	var Type_Proxy = $PS['Type.Proxy'];
	var WAGSI_Plumbing_DemoEvent = $PS['WAGSI.Plumbing.DemoEvent'];
	var WAGSI_Plumbing_Download = $PS['WAGSI.Plumbing.Download'];
	var WAGSI_Plumbing_Samples = $PS['WAGSI.Plumbing.Samples'];
	var WAGSI_Plumbing_Types = $PS['WAGSI.Plumbing.Types'];
	var v2s = function (v) {
		return v.next.samples;
	};
	var r2b = function (r) {
		return FRP_Behavior.behavior(function (e) {
			return FRP_Event.makeEvent(function (f) {
				return FRP_Event.subscribe(e)(function (v) {
					return function __do() {
						var $31 = Effect_Ref.read(r)();
						return f(v($31))();
					};
				});
			});
		});
	};
	var easingAlgorithm = (function () {
		var fOf = function (initialTime) {
			return Control_Comonad_Cofree.mkCofree(initialTime)(function (adj) {
				return fOf(Data_Ord.max(Data_Ord.ordInt)(15)((initialTime - adj) | 0));
			});
		};
		return fOf(15);
	})();
	var d2s = function (v) {
		return v.sample;
	};
	var doDownloads = function (audioContext) {
		return function (cacheRef) {
			return function (push) {
				return function (v) {
					return Control_Bind.bind(Effect_Aff.bindAff)(
						Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
							Effect_Ref.read(cacheRef)
						)
					)(function (cache) {
						var sets = Data_Semigroup.append(
							Data_Set.semigroupSet(WAGSI_Plumbing_Types.sampleOrd)
						)(
							Data_Set.fromFoldable(Data_Foldable.foldableArray)(
								WAGSI_Plumbing_Types.sampleOrd
							)(v.preload)
						)(
							Data_Semigroup.append(
								Data_Set.semigroupSet(WAGSI_Plumbing_Types.sampleOrd)
							)(
								Data_Foldable.fold(Data_Foldable.foldableArray)(
									Data_Set.monoidSet(WAGSI_Plumbing_Types.sampleOrd)
								)(
									Data_Functor.map(Data_Functor.functorArray)(v2s)([
										v.earth,
										v.wind,
										v.fire,
									])
								)
							)(
								Data_Set.fromFoldable(Data_Foldable.foldableArray)(
									WAGSI_Plumbing_Types.sampleOrd
								)(
									Data_Compactable.compact(Data_Compactable.compactableArray)(
										Data_Functor.map(Data_Functor.functorArray)(
											Data_Functor.map(Data_Maybe.functorMaybe)(d2s)
										)([v.air, v.heart])
									)
								)
							)
						);
						var samplesToUrl = Data_Map_Internal.mapMaybeWithKey(
							WAGSI_Plumbing_Types.sampleOrd
						)(function (v1) {
							return function (v2) {
								return Control_Alt.alt(Data_Maybe.altMaybe)(
									Data_Map_Internal.lookup(WAGSI_Plumbing_Types.sampleOrd)(v1)(
										v.sounds
									)
								)(
									Control_Bind.bind(Data_Maybe.bindMaybe)(
										Foreign_Object.lookup(v1)(
											WAGSI_Plumbing_Samples.nameToSampleO
										)
									)(function (nm) {
										return Control_Bind.bind(Data_Maybe.bindMaybe)(
											Data_Map_Internal.lookup(WAGSI_Plumbing_Types.sampleOrd)(
												nm
											)(WAGSI_Plumbing_Samples.sampleToUrls)
										)(function (url) {
											return Control_Applicative.pure(
												Data_Maybe.applicativeMaybe
											)(url);
										});
									})
								);
							};
						})(Data_Set.toMap(sets));
						return Control_Bind.bind(Effect_Aff.bindAff)(
							WAGSI_Plumbing_Download.getBuffersUsingCache(samplesToUrl)(
								audioContext
							)(cache)
						)(function (newMap) {
							return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
								function __do() {
									Effect_Ref.write(newMap)(cacheRef)();
									return push(v)();
								}
							);
						});
					});
				};
			};
		};
	};
	var consoleDemoEvent = function (loggr) {
		return function (x) {
			return FRP_Event.makeEvent(function (f) {
				return FRP_Event.subscribe(x)(function (a) {
					var v = Control_Monad_Except.runExcept(
						Simple_JSON.readImpl(WAGSI_Plumbing_DemoEvent.readJSONDE)(a)
					);
					if (v instanceof Data_Either.Left) {
						return loggr(
							'ERR: ' +
								(Data_Show.show(Data_Show.showString)(
									Simple_JSON.writeJSON(Simple_JSON.writeForeignForeign)(a)
								) +
									(' ' +
										Data_Show.show(
											Data_List_Types.showNonEmptyList(Foreign.showForeignError)
										)(v.value0)))
						);
					}
					if (v instanceof Data_Either.Right) {
						return f(v.value0);
					}
					throw new Error(
						'Failed pattern match at WAGSI.Plumbing.Util (line 87, column 3 - line 92, column 35): ' +
							[v.constructor.name]
					);
				});
			});
		};
	};
	var bindToN = function (n) {
		if (n <= 0) {
			return Data_Function['const'](Data_List_Types.Nil.value);
		}
		if (Data_Boolean.otherwise) {
			return function (v) {
				if (v instanceof Data_List_Types.Nil) {
					return Data_List_Types.Nil.value;
				}
				if (v instanceof Data_List_Types.Cons) {
					return new Data_List_Types.Cons(
						v.value0,
						bindToN((n - 1) | 0)(v.value1)
					);
				}
				throw new Error(
					'Failed pattern match at WAGSI.Plumbing.Util (line 41, column 17 - line 43, column 39): ' +
						[v.constructor.name]
				);
			};
		}
		throw new Error(
			'Failed pattern match at WAGSI.Plumbing.Util (line 38, column 1 - line 38, column 33): ' +
				[n.constructor.name]
		);
	};
	var de2list = function (i) {
		var stamped = Data_Functor.map(FRP_Event.functorEvent)(
			Data_Lens_Setter.over(
				Data_Lens_Record.prop({
					reflectSymbol: function () {
						return 'time';
					},
				})()()(Type_Proxy['Proxy'].value)(Data_Profunctor_Strong.strongFn)
			)(
				(function () {
					var $32 = Data_Newtype.unwrap();
					return function ($33) {
						return $32(Data_DateTime_Instant.unInstant($33));
					};
				})()
			)
		)(FRP_Event_Time.withTime(i));
		var folded = FRP_Event_Class.fold(FRP_Event.eventIsEvent)(
			Data_List_Types.Cons.create
		)(stamped)(Data_List_Types.Nil.value);
		var mapped = Data_Functor.map(FRP_Event.functorEvent)(bindToN(20))(folded);
		return mapped;
	};
	exports['r2b'] = r2b;
	exports['de2list'] = de2list;
	exports['easingAlgorithm'] = easingAlgorithm;
	exports['doDownloads'] = doDownloads;
	exports['consoleDemoEvent'] = consoleDemoEvent;
})(PS);
(function ($PS) {
	// Generated by purs version 0.14.4
	'use strict';
	$PS['WAGSI.Plumbing.Handoff'] = $PS['WAGSI.Plumbing.Handoff'] || {};
	var exports = $PS['WAGSI.Plumbing.Handoff'];
	var Control_Applicative = $PS['Control.Applicative'];
	var Control_Apply = $PS['Control.Apply'];
	var Control_Bind = $PS['Control.Bind'];
	var Control_Promise = $PS['Control.Promise'];
	var Data_Function = $PS['Data.Function'];
	var Data_List_Types = $PS['Data.List.Types'];
	var Data_Map_Internal = $PS['Data.Map.Internal'];
	var Data_Monoid = $PS['Data.Monoid'];
	var Data_Tuple = $PS['Data.Tuple'];
	var Data_Unit = $PS['Data.Unit'];
	var Effect = $PS['Effect'];
	var Effect_Aff = $PS['Effect.Aff'];
	var Effect_Class = $PS['Effect.Class'];
	var Effect_Ref = $PS['Effect.Ref'];
	var FRP_Behavior = $PS['FRP.Behavior'];
	var FRP_Event = $PS['FRP.Event'];
	var WAGS_Interpret = $PS['WAGS.Interpret'];
	var WAGS_Run = $PS['WAGS.Run'];
	var WAGSI_Plumbing_Engine = $PS['WAGSI.Plumbing.Engine'];
	var WAGSI_Plumbing_Example = $PS['WAGSI.Plumbing.Example'];
	var WAGSI_Plumbing_Tidal = $PS['WAGSI.Plumbing.Tidal'];
	var WAGSI_Plumbing_Util = $PS['WAGSI.Plumbing.Util'];
	var stop = function (v) {
		return Control_Apply.applySecond(Effect.applyEffect)(v.unsubscribe)(
			WAGS_Interpret.close(v.audioCtx)
		);
	};
	var start = function (logger) {
		return function (v) {
			return Control_Promise.fromAff(
				(function () {
					var ohBehave = WAGSI_Plumbing_Util.r2b(v.bufCache);
					return Control_Bind.bind(Effect_Aff.bindAff)(
						Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
							WAGS_Interpret.context
						)
					)(function (audioCtx) {
						return Control_Bind.bind(Effect_Aff.bindAff)(
							Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
								WAGS_Interpret.makeUnitCache
							)
						)(function (unitCache) {
							var ffiAudio =
								WAGS_Interpret.defaultFFIAudio(audioCtx)(unitCache);
							var v1 = WAGSI_Plumbing_Engine.engine(Data_List_Types.monoidList)(
								WAGSI_Plumbing_Util.de2list(
									WAGSI_Plumbing_Util.consoleDemoEvent(logger)(
										v.interactivity.event
									)
								)
							)(
								Control_Applicative.pure(FRP_Event.applicativeEvent)(
									WAGSI_Plumbing_Example.wag
								)
							)(ohBehave);
							return Control_Bind.bind(Effect_Aff.bindAff)(
								Data_Tuple.snd(
									v1.triggerWorld(
										new Data_Tuple.Tuple(
											audioCtx,
											Control_Applicative.pure(Effect_Aff.applicativeAff)(
												new Data_Tuple.Tuple(
													Control_Applicative.pure(FRP_Event.applicativeEvent)(
														{}
													),
													Control_Applicative.pure(
														FRP_Behavior.applicativeABehavior(
															FRP_Event.functorEvent
														)
													)({})
												)
											)
										)
									)
								)
							)(function (v2) {
								return Control_Bind.discard(Control_Bind.discardUnit)(
									Effect_Aff.bindAff
								)(
									WAGSI_Plumbing_Util.doDownloads(audioCtx)(v.bufCache)(
										Data_Function['const'](
											Control_Applicative.pure(Effect.applicativeEffect)(
												Data_Unit.unit
											)
										)
									)(WAGSI_Plumbing_Tidal.openFuture)
								)(function () {
									return Control_Bind.bind(Effect_Aff.bindAff)(
										Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
											FRP_Event.subscribe(
												WAGS_Run.run()(WAGS_Run.analyserRefsNil)(
													WAGS_Run.workWithAnalysersNil
												)(WAGS_Run.getAnalysersNil)(Data_Monoid.monoidUnit)(
													v2.value0
												)(v2.value1)({
													easingAlgorithm: WAGSI_Plumbing_Util.easingAlgorithm,
												})(ffiAudio)(v1.piece)
											)(function (v3) {
												return Control_Applicative.pure(
													Effect.applicativeEffect
												)(Data_Unit.unit);
											})
										)
									)(function (unsubscribe) {
										return Control_Applicative.pure(Effect_Aff.applicativeAff)({
											audioCtx: audioCtx,
											unsubscribe: unsubscribe,
										});
									});
								});
							});
						});
					});
				})()
			);
		};
	};
	var send = function (v) {
		return v.interactivity.push;
	};
	var initialize = Control_Promise.fromAff(
		Control_Bind.bind(Effect_Aff.bindAff)(
			Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(WAGS_Interpret.context)
		)(function (ctx) {
			return Control_Bind.bind(Effect_Aff.bindAff)(
				Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(
					Effect_Ref['new'](Data_Map_Internal.empty)
				)
			)(function (bufCache) {
				return Control_Bind.bind(Effect_Aff.bindAff)(
					Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(FRP_Event.create)
				)(function (interactivity) {
					return Control_Bind.discard(Control_Bind.discardUnit)(
						Effect_Aff.bindAff
					)(
						WAGSI_Plumbing_Util.doDownloads(ctx)(bufCache)(
							Data_Function['const'](
								Control_Applicative.pure(Effect.applicativeEffect)(
									Data_Unit.unit
								)
							)
						)(
							WAGSI_Plumbing_Example.wag({
								isFresh: true,
								value: Data_List_Types.Nil.value,
							})
						)
					)(function () {
						return Control_Applicative.pure(Effect_Aff.applicativeAff)({
							bufCache: bufCache,
							interactivity: interactivity,
						});
					});
				});
			});
		})
	);
	exports['initialize'] = initialize;
	exports['start'] = start;
	exports['send'] = send;
	exports['stop'] = stop;
})(PS);
module.exports = PS['WAGSI.Plumbing.Handoff'];
